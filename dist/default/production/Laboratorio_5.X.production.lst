

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 01 16:07:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Version 2.40
    60                           ; Generated 04/07/2022 GMT
    61                           ; 
    62                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95                           	psect	idataCOMRAM
    96   001FB0                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _UnitTemp
   100   001FB0  43                 	db	67
   101                           
   102                           ;initializer for _interfaz
   103   001FB1  08                 	db	8
   104   000000                     _EECON2	set	4007
   105   000000                     _EEDATA	set	4008
   106   000000                     _TXREG	set	4013
   107   000000                     _RCREG	set	4014
   108   000000                     _SPBRG	set	4015
   109   000000                     _BAUDCON	set	4024
   110   000000                     _PORTA	set	3968
   111   000000                     _WR	set	32049
   112   000000                     _WREN	set	32050
   113   000000                     _RD	set	32048
   114   000000                     _CFGS	set	32054
   115   000000                     _GO	set	32273
   116   000000                     _TRMT	set	32097
   117   000000                     _LATA4	set	31820
   118   000000                     _TMR0ON	set	32431
   119   000000                     _TRISC2	set	31906
   120   000000                     _GIE	set	32663
   121   000000                     _TMR0IE	set	32661
   122   000000                     _TMR0IF	set	32658
   123   000000                     _LATD1	set	31841
   124   000000                     _LATD0	set	31840
   125   000000                     _LATA5	set	31821
   126   000000                     _LATD	set	3980
   127   000000                     _RA3	set	31747
   128   000000                     _RC0	set	31760
   129   000000                     _TRISA	set	3986
   130   000000                     _LATE	set	3981
   131   000000                     _TRISC0	set	31904
   132   000000                     _RCSTA	set	4011
   133   000000                     _TXSTA	set	4012
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _OSCCON	set	4051
   137   000000                     _RCIE	set	31981
   138   000000                     _RCIF	set	31989
   139   000000                     _LATA	set	3977
   140   000000                     _LATC2	set	31834
   141   000000                     _T0CON	set	4053
   142   000000                     _PEIE	set	32662
   143   000000                     _ADCON2	set	4032
   144   000000                     _ADCON1	set	4033
   145   000000                     _ADCON0	set	4034
   146   000000                     _IPEN	set	32391
   147   000000                     _EEADR	set	4009
   148   000000                     _EEIF	set	32012
   149   000000                     _EEPGD	set	32055
   150   000000                     _TMR0	set	4054
   151   000000                     _ADRES	set	4035
   152                           
   153                           	psect	smallconst
   154   000800                     __psmallconst:
   155                           	callstack 0
   156   000800  00                 	db	0
   157   000801                     STR_1:
   158   000801  44                 	db	68	;'D'
   159   000802  61                 	db	97	;'a'
   160   000803  74                 	db	116	;'t'
   161   000804  61                 	db	97	;'a'
   162   000805  3A                 	db	58	;':'
   163   000806  20                 	db	32
   164   000807  00                 	db	0
   165   000808                     STR_4:
   166   000808  54                 	db	84	;'T'
   167   000809  65                 	db	101	;'e'
   168   00080A  6D                 	db	109	;'m'
   169   00080B  70                 	db	112	;'p'
   170   00080C  3A                 	db	58	;':'
   171   00080D  20                 	db	32
   172   00080E  00                 	db	0
   173   00080F                     STR_5:
   174   00080F  48                 	db	72	;'H'
   175   000810  75                 	db	117	;'u'
   176   000811  6D                 	db	109	;'m'
   177   000812  3A                 	db	58	;':'
   178   000813  20                 	db	32
   179   000814  00                 	db	0
   180   000815                     STR_3:
   181   000815  43                 	db	67	;'C'
   182   000816  4B                 	db	75	;'K'
   183   000817  52                 	db	82	;'R'
   184   000818  46                 	db	70	;'F'
   185   000819  00                 	db	0
   186   00081A                     STR_6:
   187   00081A  20                 	db	32
   188   00081B  25                 	db	37
   189   00081C  00                 	db	0
   190   00081D                     STR_2:
   191   00081D  20                 	db	32
   192   00081E  43                 	db	67	;'C'
   193   00081F  00                 	db	0
   194   000820  00                 	db	0	; dummy byte at the end
   195   000000                     
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   001DBC                     __pcinit:
   200                           	callstack 0
   201   001DBC                     start_initialization:
   202                           	callstack 0
   203   001DBC                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (2 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   001DBC  0EB0               	movlw	low __pidataCOMRAM
   209   001DBE  6EF6               	movwf	tblptrl,c
   210   001DC0  0E1F               	movlw	high __pidataCOMRAM
   211   001DC2  6EF7               	movwf	tblptrh,c
   212   001DC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   001DC6  6EF8               	movwf	tblptru,c
   214   001DC8  0009               	tblrd		*+	;fetch initializer
   215   001DCA  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   216   001DCE  0009               	tblrd		*+	;fetch initializer
   217   001DD0  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   218                           
   219                           ; Clear objects allocated to COMRAM (8 bytes)
   220   001DD4  EE00  F043         	lfsr	0,__pbssCOMRAM
   221   001DD8  0E08               	movlw	8
   222   001DDA                     clear_0:
   223   001DDA  6AEE               	clrf	postinc0,c
   224   001DDC  06E8               	decf	wreg,f,c
   225   001DDE  E1FD               	bnz	clear_0
   226   001DE0                     end_of_initialization:
   227                           	callstack 0
   228   001DE0                     __end_of__initialization:
   229                           	callstack 0
   230   001DE0  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   231   001DE2  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   232   001DE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   233   001DE6  6EF8               	movwf	tblptru,c
   234   001DE8  0100               	movlb	0
   235   001DEA  EFDD  F008         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238   000043                     __pbssCOMRAM:
   239                           	callstack 0
   240   000043                     _Potenciometro:
   241                           	callstack 0
   242   000043                     	ds	2
   243   000045                     _Valores:
   244                           	callstack 0
   245   000045                     	ds	2
   246   000047                     _DatoGuardado:
   247                           	callstack 0
   248   000047                     	ds	1
   249   000048                     _Che:
   250                           	callstack 0
   251   000048                     	ds	1
   252   000049                     _Hum:
   253                           	callstack 0
   254   000049                     	ds	1
   255   00004A                     _Temp:
   256                           	callstack 0
   257   00004A                     	ds	1
   258                           
   259                           	psect	dataCOMRAM
   260   00004B                     __pdataCOMRAM:
   261                           	callstack 0
   262   00004B                     _UnitTemp:
   263                           	callstack 0
   264   00004B                     	ds	1
   265   00004C                     _interfaz:
   266                           	callstack 0
   267   00004C                     	ds	1
   268                           
   269                           	psect	cstackCOMRAM
   270   000001                     __pcstackCOMRAM:
   271                           	callstack 0
   272   000001                     ??_RetardoLCD:
   273   000001                     ?_strlen:
   274                           	callstack 0
   275   000001                     ?_Conversion:
   276                           	callstack 0
   277   000001                     ?___awmod:
   278                           	callstack 0
   279   000001                     ?___lwmod:
   280                           	callstack 0
   281   000001                     ?___ftpack:
   282                           	callstack 0
   283   000001                     ConfiguraLCD@a:
   284                           	callstack 0
   285   000001                     LeerBit@res:
   286                           	callstack 0
   287   000001                     Transmitir@BufferT:
   288                           	callstack 0
   289   000001                     ConmutarLED@Valor:
   290                           	callstack 0
   291   000001                     ___lbmod@divisor:
   292                           	callstack 0
   293   000001                     strlen@s:
   294                           	callstack 0
   295   000001                     LeerEEPROM@dir:
   296                           	callstack 0
   297   000001                     GuardarEEPROM@dir:
   298                           	callstack 0
   299   000001                     ___awmod@dividend:
   300                           	callstack 0
   301   000001                     ___lwmod@dividend:
   302                           	callstack 0
   303   000001                     ___ftpack@arg:
   304                           	callstack 0
   305   000001                     ___ftge@ff1:
   306                           	callstack 0
   307                           
   308                           ; 3 bytes @ 0x0
   309   000001                     	ds	1
   310   000002                     ??_LeerByte:
   311   000002                     RetardoLCD@a:
   312                           	callstack 0
   313   000002                     ___lbmod@dividend:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x1
   317   000002                     	ds	1
   318   000003                     ??_EnviaDato:
   319   000003                     LeerByte@res:
   320                           	callstack 0
   321   000003                     GuardarEEPROM@data:
   322                           	callstack 0
   323   000003                     ___lbmod@counter:
   324                           	callstack 0
   325   000003                     strlen@cp:
   326                           	callstack 0
   327   000003                     ___awmod@divisor:
   328                           	callstack 0
   329   000003                     ___lwmod@divisor:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333   000003                     	ds	1
   334   000004                     EnviaDato@a:
   335                           	callstack 0
   336   000004                     LeerByte@i:
   337                           	callstack 0
   338   000004                     Existe_en_Arreglo@Arreglo:
   339                           	callstack 0
   340   000004                     ___ftpack@exp:
   341                           	callstack 0
   342   000004                     ___lbmod@rem:
   343                           	callstack 0
   344   000004                     ___ftge@ff2:
   345                           	callstack 0
   346                           
   347                           ; 3 bytes @ 0x3
   348   000004                     	ds	1
   349   000005                     ??_Existe_en_Arreglo:
   350   000005                     ?_LeerHT11:
   351                           	callstack 0
   352   000005                     ComandoLCD@a:
   353                           	callstack 0
   354   000005                     EscribeLCD_c@a:
   355                           	callstack 0
   356   000005                     ___awmod@counter:
   357                           	callstack 0
   358   000005                     ___ftpack@sign:
   359                           	callstack 0
   360   000005                     ___lbdiv@divisor:
   361                           	callstack 0
   362   000005                     ___lwmod@counter:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x4
   366   000005                     	ds	1
   367   000006                     ??___ftpack:
   368   000006                     ?___lwdiv:
   369                           	callstack 0
   370   000006                     MensajeLCD_Var@a:
   371                           	callstack 0
   372   000006                     Existe_en_Arreglo@Elemento:
   373                           	callstack 0
   374   000006                     ___awmod@sign:
   375                           	callstack 0
   376   000006                     ___lbdiv@dividend:
   377                           	callstack 0
   378   000006                     ___lwdiv@dividend:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x5
   382   000006                     	ds	1
   383   000007                     ??_LeerHT11:
   384   000007                     ??_MensajeLCD_Var:
   385   000007                     ??___ftge:
   386   000007                     ?___awdiv:
   387                           	callstack 0
   388   000007                     Existe_en_Arreglo@Contenido:
   389                           	callstack 0
   390   000007                     ___lbdiv@counter:
   391                           	callstack 0
   392   000007                     ___awdiv@dividend:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x6
   396   000007                     	ds	1
   397   000008                     LeerHT11@contr:
   398                           	callstack 0
   399   000008                     ___lbdiv@quotient:
   400                           	callstack 0
   401   000008                     MensajeLCD_Var@longitud:
   402                           	callstack 0
   403   000008                     Existe_en_Arreglo@i:
   404                           	callstack 0
   405   000008                     ___lwdiv@divisor:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x7
   409   000008                     	ds	1
   410   000009                     ?___awtoft:
   411                           	callstack 0
   412   000009                     ?___lbtoft:
   413                           	callstack 0
   414   000009                     LeerHT11@Retornar:
   415                           	callstack 0
   416   000009                     ___awdiv@divisor:
   417                           	callstack 0
   418   000009                     ___awtoft@c:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x8
   422   000009                     	ds	1
   423   00000A                     MensajeLCD_Var@actual:
   424                           	callstack 0
   425   00000A                     ___lwdiv@quotient:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x9
   429   00000A                     	ds	1
   430   00000B                     ___awdiv@counter:
   431                           	callstack 0
   432   00000B                     MensajeLCD_Var@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xA
   436   00000B                     	ds	1
   437   00000C                     ___awdiv@sign:
   438                           	callstack 0
   439   00000C                     ___awtoft@sign:
   440                           	callstack 0
   441   00000C                     ___lbtoft@c:
   442                           	callstack 0
   443   00000C                     ___lwdiv@counter:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xB
   447   00000C                     	ds	1
   448   00000D                     ?___ftmul:
   449                           	callstack 0
   450   00000D                     EscribeLCD_n16@a:
   451                           	callstack 0
   452   00000D                     ___awdiv@quotient:
   453                           	callstack 0
   454   00000D                     ___ftmul@f1:
   455                           	callstack 0
   456                           
   457                           ; 3 bytes @ 0xC
   458   00000D                     	ds	2
   459   00000F                     EscribeLCD_n8@b:
   460                           	callstack 0
   461   00000F                     EscribeLCD_n16@b:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xE
   465   00000F                     	ds	1
   466   000010                     EscribeLCD_n8@centena:
   467                           	callstack 0
   468   000010                     EscribeLCD_n16@millar:
   469                           	callstack 0
   470   000010                     ___ftmul@f2:
   471                           	callstack 0
   472                           
   473                           ; 3 bytes @ 0xF
   474   000010                     	ds	1
   475   000011                     EscribeLCD_n8@decena:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x10
   479   000011                     	ds	1
   480   000012                     EscribeLCD_n8@unidad:
   481                           	callstack 0
   482   000012                     EscribeLCD_n16@centena:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x11
   486   000012                     	ds	1
   487   000013                     ??___ftmul:
   488   000013                     EscribeLCD_n8@a:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x12
   492   000013                     	ds	1
   493   000014                     EscribeLCD_n16@decena:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x13
   497   000014                     	ds	1
   498   000015                     EscribeLCD_n16@unidad:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x14
   502   000015                     	ds	1
   503   000016                     ___ftmul@exp:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x15
   507   000016                     	ds	1
   508   000017                     ___ftmul@f3_as_product:
   509                           	callstack 0
   510                           
   511                           ; 3 bytes @ 0x16
   512   000017                     	ds	3
   513   00001A                     ___ftmul@cntr:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x19
   517   00001A                     	ds	1
   518   00001B                     ___ftmul@sign:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1A
   522   00001B                     	ds	1
   523   00001C                     ?___ftadd:
   524                           	callstack 0
   525   00001C                     ?___fttol:
   526                           	callstack 0
   527   00001C                     ___ftadd@f1:
   528                           	callstack 0
   529   00001C                     ___fttol@f1:
   530                           	callstack 0
   531                           
   532                           ; 3 bytes @ 0x1B
   533   00001C                     	ds	3
   534   00001F                     ___ftadd@f2:
   535                           	callstack 0
   536                           
   537                           ; 3 bytes @ 0x1E
   538   00001F                     	ds	1
   539   000020                     ??___fttol:
   540                           
   541                           ; 1 bytes @ 0x1F
   542   000020                     	ds	2
   543   000022                     ??___ftadd:
   544                           
   545                           ; 1 bytes @ 0x21
   546   000022                     	ds	3
   547   000025                     ___ftadd@sign:
   548                           	callstack 0
   549   000025                     ___fttol@sign1:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x24
   553   000025                     	ds	1
   554   000026                     ___ftadd@exp2:
   555                           	callstack 0
   556   000026                     ___fttol@lval:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x25
   560   000026                     	ds	1
   561   000027                     ___ftadd@exp1:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x26
   565   000027                     	ds	1
   566   000028                     ?___ftsub:
   567                           	callstack 0
   568   000028                     ___ftsub@f1:
   569                           	callstack 0
   570                           
   571                           ; 3 bytes @ 0x27
   572   000028                     	ds	2
   573   00002A                     ___fttol@exp1:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x29
   577   00002A                     	ds	1
   578   00002B                     ___ftsub@f2:
   579                           	callstack 0
   580                           
   581                           ; 3 bytes @ 0x2A
   582   00002B                     	ds	3
   583   00002E                     EnviarMedicion@Temperatura:
   584                           	callstack 0
   585   00002E                     Imprimir@Temperatura:
   586                           	callstack 0
   587                           
   588                           ; 3 bytes @ 0x2D
   589   00002E                     	ds	3
   590   000031                     EnviarMedicion@Humedad:
   591                           	callstack 0
   592   000031                     Imprimir@Humedad:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x30
   596   000031                     	ds	1
   597   000032                     EnviarMedicion@TempUnity:
   598                           	callstack 0
   599   000032                     Imprimir@TempUnity:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x31
   603   000032                     	ds	1
   604   000033                     EnviarMedicion@decimal:
   605                           	callstack 0
   606   000033                     Imprimir@decimal:
   607                           	callstack 0
   608                           
   609                           ; 3 bytes @ 0x32
   610   000033                     	ds	3
   611   000036                     EnviarMedicion@Decimales:
   612                           	callstack 0
   613   000036                     Imprimir@ValorF:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x35
   617   000036                     	ds	2
   618   000038                     EnviarMedicion@ValorF:
   619                           	callstack 0
   620   000038                     Imprimir@Decimales:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x37
   624   000038                     	ds	2
   625   00003A                     Subrutina_Main@Unidad:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x39
   629   00003A                     	ds	1
   630   00003B                     _Subrutina_Main$947:
   631                           	callstack 0
   632                           
   633                           ; 3 bytes @ 0x3A
   634   00003B                     	ds	3
   635   00003E                     _Subrutina_Main$948:
   636                           	callstack 0
   637                           
   638                           ; 3 bytes @ 0x3D
   639   00003E                     	ds	3
   640   000041                     ??_main:
   641                           
   642                           ; 1 bytes @ 0x40
   643   000041                     	ds	2
   644                           
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   647 ;;
   648 ;; *************** function _main *****************
   649 ;; Defined at:
   650 ;;		line 34 in file "Laboratorio_5.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         0       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          2       0       0       0       0       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels required when called: 7
   670 ;; This function calls:
   671 ;;		_ConfiguraLCD
   672 ;;		_ConmutarLED
   673 ;;		_Conversion
   674 ;;		_EscribeLCD_n8
   675 ;;		_Existe_en_Arreglo
   676 ;;		_GuardarEEPROM
   677 ;;		_InicializaLCD
   678 ;;		_LeerEEPROM
   679 ;;		_LeerHT11
   680 ;;		_MensajeLCD_Var
   681 ;;		_Subrutina_Main
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text0
   688   0011BA                     __ptext0:
   689                           	callstack 0
   690   0011BA                     _main:
   691                           	callstack 24
   692                           
   693                           ;Laboratorio_5.c: 36: OSCCON = 0b01110000;
   694                           
   695                           ;incstack = 0
   696   0011BA  0E70               	movlw	112
   697   0011BC  6ED3               	movwf	211,c	;volatile
   698                           
   699                           ;Laboratorio_5.c: 37: _delay((unsigned long)((1)*(8000000/4000.0)));
   700   0011BE  0E03               	movlw	3
   701   0011C0  6E41               	movwf	??_main^0,c
   702   0011C2  0E98               	movlw	152
   703   0011C4                     u2397:
   704   0011C4  2EE8               	decfsz	wreg,f,c
   705   0011C6  D7FE               	bra	u2397
   706   0011C8  2E41               	decfsz	??_main^0,f,c
   707   0011CA  D7FC               	bra	u2397
   708                           
   709                           ;Laboratorio_5.c: 38: TRISD = 0;
   710   0011CC  0E00               	movlw	0
   711   0011CE  6E95               	movwf	149,c	;volatile
   712                           
   713                           ;Laboratorio_5.c: 39: LATD = 0;
   714   0011D0  0E00               	movlw	0
   715   0011D2  6E8C               	movwf	140,c	;volatile
   716                           
   717                           ;Laboratorio_5.c: 40: TRISE = 0;
   718   0011D4  0E00               	movlw	0
   719   0011D6  6E96               	movwf	150,c	;volatile
   720                           
   721                           ;Laboratorio_5.c: 41: LATE = 0;
   722   0011D8  0E00               	movlw	0
   723   0011DA  6E8D               	movwf	141,c	;volatile
   724                           
   725                           ;Laboratorio_5.c: 43: RC0 = 0;
   726   0011DC  9082               	bcf	3970,0,c	;volatile
   727                           
   728                           ;Laboratorio_5.c: 47: TXSTA = 0b00100000;
   729   0011DE  0E20               	movlw	32
   730   0011E0  6EAC               	movwf	172,c	;volatile
   731                           
   732                           ;Laboratorio_5.c: 48: RCSTA = 0b10010000;
   733   0011E2  0E90               	movlw	144
   734   0011E4  6EAB               	movwf	171,c	;volatile
   735                           
   736                           ;Laboratorio_5.c: 50: BAUDCON = 0b00000000;
   737   0011E6  0E00               	movlw	0
   738   0011E8  6EB8               	movwf	184,c	;volatile
   739                           
   740                           ;Laboratorio_5.c: 52: SPBRG = 12;
   741   0011EA  0E0C               	movlw	12
   742   0011EC  6EAF               	movwf	175,c	;volatile
   743                           
   744                           ;Laboratorio_5.c: 57: RCIF = 0;
   745   0011EE  9A9E               	bcf	3998,5,c	;volatile
   746                           
   747                           ;Laboratorio_5.c: 58: RCIE = 1;
   748   0011F0  8A9D               	bsf	3997,5,c	;volatile
   749                           
   750                           ;Laboratorio_5.c: 60: IPEN = 0;
   751   0011F2  9ED0               	bcf	4048,7,c	;volatile
   752                           
   753                           ;Laboratorio_5.c: 61: PEIE = 1;
   754   0011F4  8CF2               	bsf	4082,6,c	;volatile
   755                           
   756                           ;Laboratorio_5.c: 65: T0CON=0b00000110;
   757   0011F6  0E06               	movlw	6
   758   0011F8  6ED5               	movwf	213,c	;volatile
   759                           
   760                           ;Laboratorio_5.c: 72: TMR0 = 49911;
   761   0011FA  0EC2               	movlw	194
   762   0011FC  6ED7               	movwf	215,c	;volatile
   763   0011FE  0EF7               	movlw	247
   764   001200  6ED6               	movwf	214,c	;volatile
   765                           
   766                           ;Laboratorio_5.c: 73: TMR0IF = 0;
   767   001202  94F2               	bcf	4082,2,c	;volatile
   768                           
   769                           ;Laboratorio_5.c: 74: TMR0IE = 1;
   770   001204  8AF2               	bsf	4082,5,c	;volatile
   771                           
   772                           ;Laboratorio_5.c: 77: GIE = 1;
   773   001206  8EF2               	bsf	4082,7,c	;volatile
   774                           
   775                           ;Laboratorio_5.c: 81: ADCON0 = 0b00000001;
   776   001208  0E01               	movlw	1
   777   00120A  6EC2               	movwf	194,c	;volatile
   778                           
   779                           ;Laboratorio_5.c: 82: ADCON1 = 14;
   780   00120C  0E0E               	movlw	14
   781   00120E  6EC1               	movwf	193,c	;volatile
   782                           
   783                           ;Laboratorio_5.c: 83: ADCON2 = 0b10001101;
   784   001210  0E8D               	movlw	141
   785   001212  6EC0               	movwf	192,c	;volatile
   786                           
   787                           ;Laboratorio_5.c: 89: TRISA = 0b00001111;
   788   001214  0E0F               	movlw	15
   789   001216  6E92               	movwf	146,c	;volatile
   790                           
   791                           ;Laboratorio_5.c: 92: TRISC2 = 0;
   792   001218  9494               	bcf	3988,2,c	;volatile
   793                           
   794                           ;Laboratorio_5.c: 93: LATC2 = 0;
   795   00121A  948B               	bcf	3979,2,c	;volatile
   796                           
   797                           ;Laboratorio_5.c: 94: LATA = 0;
   798   00121C  0E00               	movlw	0
   799   00121E  6E89               	movwf	137,c	;volatile
   800                           
   801                           ;Laboratorio_5.c: 96: ConfiguraLCD(4);
   802   001220  0E04               	movlw	4
   803   001222  EC9B  F00F         	call	_ConfiguraLCD
   804                           
   805                           ;Laboratorio_5.c: 97: InicializaLCD();
   806   001226  EC69  F00C         	call	_InicializaLCD	;wreg free
   807                           
   808                           ;Laboratorio_5.c: 99: DatoGuardado = LeerEEPROM(0X0);
   809   00122A  0E00               	movlw	0
   810   00122C  6E02               	movwf	(LeerEEPROM@dir+1)^0,c
   811   00122E  0E00               	movlw	0
   812   001230  6E01               	movwf	LeerEEPROM@dir^0,c
   813   001232  ECC4  F00F         	call	_LeerEEPROM	;wreg free
   814   001236  6E47               	movwf	_DatoGuardado^0,c
   815                           
   816                           ;Laboratorio_5.c: 100: MensajeLCD_Var("Data: ");
   817   001238  0E01               	movlw	low STR_1
   818   00123A  6E06               	movwf	MensajeLCD_Var@a^0,c
   819   00123C  ECF5  F00D         	call	_MensajeLCD_Var	;wreg free
   820                           
   821                           ;Laboratorio_5.c: 101: if (DatoGuardado < 10) EscribeLCD_n8(DatoGuardado, 1);
   822   001240  0E0A               	movlw	10
   823   001242  6047               	cpfslt	_DatoGuardado^0,c
   824   001244  D006               	goto	l2939
   825   001246  0E01               	movlw	1
   826   001248  6E0F               	movwf	EscribeLCD_n8@b^0,c
   827   00124A  5047               	movf	_DatoGuardado^0,w,c
   828   00124C  ECE3  F00A         	call	_EscribeLCD_n8
   829   001250  D005               	goto	l2941
   830   001252                     l2939:
   831                           
   832                           ;Laboratorio_5.c: 102: else EscribeLCD_n8(DatoGuardado, 2);
   833   001252  0E02               	movlw	2
   834   001254  6E0F               	movwf	EscribeLCD_n8@b^0,c
   835   001256  5047               	movf	_DatoGuardado^0,w,c
   836   001258  ECE3  F00A         	call	_EscribeLCD_n8
   837   00125C                     l2941:
   838                           
   839                           ;Laboratorio_5.c: 103: MensajeLCD_Var(" C");
   840   00125C  0E1D               	movlw	low STR_2
   841   00125E  6E06               	movwf	MensajeLCD_Var@a^0,c
   842   001260  ECF5  F00D         	call	_MensajeLCD_Var	;wreg free
   843                           
   844                           ;Laboratorio_5.c: 104: _delay((unsigned long)((1000)*(8000000/4000.0)));
   845   001264  0E0B               	movlw	11
   846   001266  6E42               	movwf	(??_main+1)^0,c
   847   001268  0E26               	movlw	38
   848   00126A  6E41               	movwf	??_main^0,c
   849   00126C  0E5E               	movlw	94
   850   00126E                     u2407:
   851   00126E  2EE8               	decfsz	wreg,f,c
   852   001270  D7FE               	bra	u2407
   853   001272  2E41               	decfsz	??_main^0,f,c
   854   001274  D7FC               	bra	u2407
   855   001276  2E42               	decfsz	(??_main+1)^0,f,c
   856   001278  D7FA               	bra	u2407
   857                           
   858                           ;Laboratorio_5.c: 106: TMR0ON = 1;
   859   00127A  8ED5               	bsf	4053,7,c	;volatile
   860   00127C                     l2947:
   861                           
   862                           ;Laboratorio_5.c: 109: Valores = LeerHT11();
   863   00127C  EC16  F00C         	call	_LeerHT11	;wreg free
   864   001280  C005  F045         	movff	?_LeerHT11,_Valores
   865   001284  C006  F046         	movff	?_LeerHT11+1,_Valores+1
   866                           
   867                           ;Laboratorio_5.c: 110: GuardarEEPROM(0x0, Valores[1]);
   868   001288  0E00               	movlw	0
   869   00128A  6E02               	movwf	(GuardarEEPROM@dir+1)^0,c
   870   00128C  0E00               	movlw	0
   871   00128E  6E01               	movwf	GuardarEEPROM@dir^0,c
   872   001290  EE20 F001          	lfsr	2,1
   873   001294  5045               	movf	_Valores^0,w,c
   874   001296  26D9               	addwf	fsr2l,f,c
   875   001298  5046               	movf	(_Valores+1)^0,w,c
   876   00129A  22DA               	addwfc	fsr2h,f,c
   877   00129C  50DF               	movf	indf2,w,c
   878   00129E  6E03               	movwf	GuardarEEPROM@data^0,c
   879   0012A0  EC65  F00F         	call	_GuardarEEPROM	;wreg free
   880                           
   881                           ;Laboratorio_5.c: 111: Potenciometro = Conversion();
   882   0012A4  ECBC  F00F         	call	_Conversion	;wreg free
   883   0012A8  C001  F043         	movff	?_Conversion,_Potenciometro
   884   0012AC  C002  F044         	movff	?_Conversion+1,_Potenciometro+1
   885                           
   886                           ;Laboratorio_5.c: 113: ConmutarLED(Valores[1]);
   887   0012B0  EE20 F001          	lfsr	2,1
   888   0012B4  5045               	movf	_Valores^0,w,c
   889   0012B6  26D9               	addwf	fsr2l,f,c
   890   0012B8  5046               	movf	(_Valores+1)^0,w,c
   891   0012BA  22DA               	addwfc	fsr2h,f,c
   892   0012BC  50DF               	movf	indf2,w,c
   893   0012BE  EC9E  F00D         	call	_ConmutarLED
   894                           
   895                           ;Laboratorio_5.c: 114: if (Potenciometro <= 512) LATA4 = 0;
   896   0012C2  0443               	decf	_Potenciometro^0,w,c
   897   0012C4  0E02               	movlw	2
   898   0012C6  5844               	subwfb	(_Potenciometro+1)^0,w,c
   899   0012C8  B0D8               	btfsc	status,0,c
   900   0012CA  D002               	goto	l295
   901   0012CC  9889               	bcf	3977,4,c	;volatile
   902   0012CE  D001               	goto	l296
   903   0012D0                     l295:
   904                           
   905                           ;Laboratorio_5.c: 115: else LATA4 = 1;
   906   0012D0  8889               	bsf	3977,4,c	;volatile
   907   0012D2                     l296:
   908                           
   909                           ;Laboratorio_5.c: 117: if (RA3 == 0){
   910   0012D2  B680               	btfsc	3968,3,c	;volatile
   911   0012D4  D01E               	goto	l2975
   912                           
   913                           ;Laboratorio_5.c: 119: if ((PORTA & 0b00000110) == 0b00000000){
   914   0012D6  CF80 F041          	movff	3968,??_main	;volatile
   915   0012DA  0E06               	movlw	6
   916   0012DC  1641               	andwf	??_main^0,f,c
   917   0012DE  A4D8               	btfss	status,2,c
   918   0012E0  D002               	goto	l2963
   919                           
   920                           ;Laboratorio_5.c: 120: UnitTemp = 'C';
   921   0012E2  0E43               	movlw	67
   922   0012E4  D014               	goto	L3
   923   0012E6                     l2963:
   924   0012E6  5080               	movf	128,w,c	;volatile
   925   0012E8  0B06               	andlw	6
   926   0012EA  0A02               	xorlw	2
   927   0012EC  A4D8               	btfss	status,2,c
   928   0012EE  D002               	goto	l2967
   929                           
   930                           ;Laboratorio_5.c: 122: UnitTemp = 'K';
   931   0012F0  0E4B               	movlw	75
   932   0012F2  D00D               	goto	L3
   933   0012F4                     l2967:
   934   0012F4  5080               	movf	128,w,c	;volatile
   935   0012F6  0B06               	andlw	6
   936   0012F8  0A04               	xorlw	4
   937   0012FA  A4D8               	btfss	status,2,c
   938   0012FC  D002               	goto	l2971
   939                           
   940                           ;Laboratorio_5.c: 124: UnitTemp = 'R';
   941   0012FE  0E52               	movlw	82
   942   001300  D006               	goto	L3
   943   001302                     l2971:
   944   001302  5080               	movf	128,w,c	;volatile
   945   001304  0B06               	andlw	6
   946   001306  0A06               	xorlw	6
   947   001308  A4D8               	btfss	status,2,c
   948   00130A  D00F               	goto	u2385
   949                           
   950                           ;Laboratorio_5.c: 126: UnitTemp = 'F';
   951   00130C  0E46               	movlw	70
   952   00130E                     L3:
   953   00130E  6E4B               	movwf	_UnitTemp^0,c
   954                           
   955                           ;Laboratorio_5.c: 127: };Laboratorio_5.c: 129: }else{
   956   001310  D00C               	goto	u2385
   957   001312                     l2975:
   958                           
   959                           ;Laboratorio_5.c: 130: LATC2 = 1^Existe_en_Arreglo(UnitTemp, "CKRF");
   960   001312  0E15               	movlw	low STR_3
   961   001314  6E04               	movwf	Existe_en_Arreglo@Arreglo^0,c
   962   001316  504B               	movf	_UnitTemp^0,w,c
   963   001318  EC1C  F00E         	call	_Existe_en_Arreglo
   964   00131C  6E41               	movwf	??_main^0,c
   965   00131E  3041               	rrcf	??_main^0,w,c
   966   001320  B0D8               	btfsc	status,0,c
   967   001322  D002               	goto	u2370
   968   001324  848B               	bsf	3979,2,c	;volatile
   969   001326  D001               	goto	u2385
   970   001328                     u2370:
   971   001328  948B               	bcf	3979,2,c	;volatile
   972   00132A                     u2385:
   973                           
   974                           ;Laboratorio_5.c: 131: };Laboratorio_5.c: 132: Subrutina_Main(UnitTemp);
   975   00132A  504B               	movf	_UnitTemp^0,w,c
   976   00132C  EC11  F004         	call	_Subrutina_Main
   977                           
   978                           ;Laboratorio_5.c: 134: _delay((unsigned long)((615)*(8000000/4000.0)));
   979   001330  0E07               	movlw	7
   980   001332  6E42               	movwf	(??_main+1)^0,c
   981   001334  0E3E               	movlw	62
   982   001336  6E41               	movwf	??_main^0,c
   983   001338  0E60               	movlw	96
   984   00133A                     u2417:
   985   00133A  2EE8               	decfsz	wreg,f,c
   986   00133C  D7FE               	bra	u2417
   987   00133E  2E41               	decfsz	??_main^0,f,c
   988   001340  D7FC               	bra	u2417
   989   001342  2E42               	decfsz	(??_main+1)^0,f,c
   990   001344  D7FA               	bra	u2417
   991   001346  D000               	nop2	
   992   001348  D799               	goto	l2947
   993   00134A                     __end_of_main:
   994                           	callstack 0
   995                           
   996 ;; *************** function _Subrutina_Main *****************
   997 ;; Defined at:
   998 ;;		line 138 in file "Laboratorio_5.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  Unidad          1    wreg     unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  Unidad          1   57[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0
  1013 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1015 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1016 ;;Total ram usage:        7 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 6
  1019 ;; This function calls:
  1020 ;;		_EnviarMedicion
  1021 ;;		_Imprimir
  1022 ;;		___ftadd
  1023 ;;		___ftmul
  1024 ;;		___lbtoft
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text1
  1031   000822                     __ptext1:
  1032                           	callstack 0
  1033   000822                     _Subrutina_Main:
  1034                           	callstack 24
  1035                           
  1036                           ;incstack = 0
  1037                           ;Subrutina_Main@Unidad stored from wreg
  1038   000822  6E3A               	movwf	Subrutina_Main@Unidad^0,c
  1039                           
  1040                           ;Laboratorio_5.c: 140: if (Unidad == 'K'){
  1041   000824  0E4B               	movlw	75
  1042   000826  183A               	xorwf	Subrutina_Main@Unidad^0,w,c
  1043   000828  A4D8               	btfss	status,2,c
  1044   00082A  D05B               	goto	l2857
  1045                           
  1046                           ;Laboratorio_5.c: 141: EnviarMedicion(Valores[1] + 273.16, Valores[0], 'K');
  1047   00082C  EE20 F001          	lfsr	2,1
  1048   000830  5045               	movf	_Valores^0,w,c
  1049   000832  26D9               	addwf	fsr2l,f,c
  1050   000834  5046               	movf	(_Valores+1)^0,w,c
  1051   000836  22DA               	addwfc	fsr2h,f,c
  1052   000838  50DF               	movf	indf2,w,c
  1053   00083A  EC78  F00F         	call	___lbtoft
  1054   00083E  C009  F01C         	movff	?___lbtoft,___ftadd@f1
  1055   000842  C00A  F01D         	movff	?___lbtoft+1,___ftadd@f1+1
  1056   000846  C00B  F01E         	movff	?___lbtoft+2,___ftadd@f1+2
  1057   00084A  0E94               	movlw	148
  1058   00084C  6E1F               	movwf	___ftadd@f2^0,c
  1059   00084E  0E88               	movlw	136
  1060   000850  6E20               	movwf	(___ftadd@f2+1)^0,c
  1061   000852  0E43               	movlw	67
  1062   000854  6E21               	movwf	(___ftadd@f2+2)^0,c
  1063   000856  EC09  F008         	call	___ftadd	;wreg free
  1064   00085A  C01C  F03B         	movff	?___ftadd,_Subrutina_Main$947
  1065   00085E  C01D  F03C         	movff	?___ftadd+1,_Subrutina_Main$947+1
  1066   000862  C01E  F03D         	movff	?___ftadd+2,_Subrutina_Main$947+2
  1067                           
  1068                           ;Laboratorio_5.c: 141: EnviarMedicion(Valores[1] + 273.16, Valores[0], 'K');
  1069   000866  C03B  F02E         	movff	_Subrutina_Main$947,EnviarMedicion@Temperatura
  1070   00086A  C03C  F02F         	movff	_Subrutina_Main$947+1,EnviarMedicion@Temperatura+1
  1071   00086E  C03D  F030         	movff	_Subrutina_Main$947+2,EnviarMedicion@Temperatura+2
  1072   000872  C045  FFD9         	movff	_Valores,fsr2l
  1073   000876  C046  FFDA         	movff	_Valores+1,fsr2h
  1074   00087A  50DF               	movf	indf2,w,c
  1075   00087C  6E31               	movwf	EnviarMedicion@Humedad^0,c
  1076   00087E  0E4B               	movlw	75
  1077   000880  6E32               	movwf	EnviarMedicion@TempUnity^0,c
  1078   000882  EC04  F007         	call	_EnviarMedicion	;wreg free
  1079                           
  1080                           ;Laboratorio_5.c: 142: Imprimir(Valores[1] + 273.16, Valores[0], 'K');
  1081   000886  EE20 F001          	lfsr	2,1
  1082   00088A  5045               	movf	_Valores^0,w,c
  1083   00088C  26D9               	addwf	fsr2l,f,c
  1084   00088E  5046               	movf	(_Valores+1)^0,w,c
  1085   000890  22DA               	addwfc	fsr2h,f,c
  1086   000892  50DF               	movf	indf2,w,c
  1087   000894  EC78  F00F         	call	___lbtoft
  1088   000898  C009  F01C         	movff	?___lbtoft,___ftadd@f1
  1089   00089C  C00A  F01D         	movff	?___lbtoft+1,___ftadd@f1+1
  1090   0008A0  C00B  F01E         	movff	?___lbtoft+2,___ftadd@f1+2
  1091   0008A4  0E94               	movlw	148
  1092   0008A6  6E1F               	movwf	___ftadd@f2^0,c
  1093   0008A8  0E88               	movlw	136
  1094   0008AA  6E20               	movwf	(___ftadd@f2+1)^0,c
  1095   0008AC  0E43               	movlw	67
  1096   0008AE  6E21               	movwf	(___ftadd@f2+2)^0,c
  1097   0008B0  EC09  F008         	call	___ftadd	;wreg free
  1098   0008B4  C01C  F03E         	movff	?___ftadd,_Subrutina_Main$948
  1099   0008B8  C01D  F03F         	movff	?___ftadd+1,_Subrutina_Main$948+1
  1100   0008BC  C01E  F040         	movff	?___ftadd+2,_Subrutina_Main$948+2
  1101                           
  1102                           ;Laboratorio_5.c: 142: Imprimir(Valores[1] + 273.16, Valores[0], 'K');
  1103   0008C0  C03E  F02E         	movff	_Subrutina_Main$948,Imprimir@Temperatura
  1104   0008C4  C03F  F02F         	movff	_Subrutina_Main$948+1,Imprimir@Temperatura+1
  1105   0008C8  C040  F030         	movff	_Subrutina_Main$948+2,Imprimir@Temperatura+2
  1106   0008CC  C045  FFD9         	movff	_Valores,fsr2l
  1107   0008D0  C046  FFDA         	movff	_Valores+1,fsr2h
  1108   0008D4  50DF               	movf	indf2,w,c
  1109   0008D6  6E31               	movwf	Imprimir@Humedad^0,c
  1110   0008D8  0E4B               	movlw	75
  1111   0008DA  6E32               	movwf	Imprimir@TempUnity^0,c
  1112   0008DC  ECA5  F009         	call	_Imprimir	;wreg free
  1113                           
  1114                           ;Laboratorio_5.c: 143: }else if (Unidad == 'R'){
  1115   0008E0  0012               	return	
  1116   0008E2                     l2857:
  1117   0008E2  0E52               	movlw	82
  1118   0008E4  183A               	xorwf	Subrutina_Main@Unidad^0,w,c
  1119   0008E6  A4D8               	btfss	status,2,c
  1120   0008E8  D077               	goto	l2863
  1121                           
  1122                           ;Laboratorio_5.c: 144: EnviarMedicion((Valores[1]*1.8) + 491.67, Valores[0], 'R');
  1123   0008EA  0E66               	movlw	102
  1124   0008EC  6E10               	movwf	___ftmul@f2^0,c
  1125   0008EE  0EE6               	movlw	230
  1126   0008F0  6E11               	movwf	(___ftmul@f2+1)^0,c
  1127   0008F2  0E3F               	movlw	63
  1128   0008F4  6E12               	movwf	(___ftmul@f2+2)^0,c
  1129   0008F6  EE20 F001          	lfsr	2,1
  1130   0008FA  5045               	movf	_Valores^0,w,c
  1131   0008FC  26D9               	addwf	fsr2l,f,c
  1132   0008FE  5046               	movf	(_Valores+1)^0,w,c
  1133   000900  22DA               	addwfc	fsr2h,f,c
  1134   000902  50DF               	movf	indf2,w,c
  1135   000904  EC78  F00F         	call	___lbtoft
  1136   000908  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1137   00090C  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1138   000910  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1139   000914  EC69  F00A         	call	___ftmul	;wreg free
  1140   000918  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1141   00091C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1142   000920  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1143   000924  0ED6               	movlw	214
  1144   000926  6E1F               	movwf	___ftadd@f2^0,c
  1145   000928  0EF5               	movlw	245
  1146   00092A  6E20               	movwf	(___ftadd@f2+1)^0,c
  1147   00092C  0E43               	movlw	67
  1148   00092E  6E21               	movwf	(___ftadd@f2+2)^0,c
  1149   000930  EC09  F008         	call	___ftadd	;wreg free
  1150   000934  C01C  F03B         	movff	?___ftadd,_Subrutina_Main$947
  1151   000938  C01D  F03C         	movff	?___ftadd+1,_Subrutina_Main$947+1
  1152   00093C  C01E  F03D         	movff	?___ftadd+2,_Subrutina_Main$947+2
  1153                           
  1154                           ;Laboratorio_5.c: 144: EnviarMedicion((Valores[1]*1.8) + 491.67, Valores[0], 'R');
  1155   000940  C03B  F02E         	movff	_Subrutina_Main$947,EnviarMedicion@Temperatura
  1156   000944  C03C  F02F         	movff	_Subrutina_Main$947+1,EnviarMedicion@Temperatura+1
  1157   000948  C03D  F030         	movff	_Subrutina_Main$947+2,EnviarMedicion@Temperatura+2
  1158   00094C  C045  FFD9         	movff	_Valores,fsr2l
  1159   000950  C046  FFDA         	movff	_Valores+1,fsr2h
  1160   000954  50DF               	movf	indf2,w,c
  1161   000956  6E31               	movwf	EnviarMedicion@Humedad^0,c
  1162   000958  0E52               	movlw	82
  1163   00095A  6E32               	movwf	EnviarMedicion@TempUnity^0,c
  1164   00095C  EC04  F007         	call	_EnviarMedicion	;wreg free
  1165                           
  1166                           ;Laboratorio_5.c: 145: Imprimir((Valores[1]*1.8) + 491.67, Valores[0], 'R');
  1167   000960  0E66               	movlw	102
  1168   000962  6E10               	movwf	___ftmul@f2^0,c
  1169   000964  0EE6               	movlw	230
  1170   000966  6E11               	movwf	(___ftmul@f2+1)^0,c
  1171   000968  0E3F               	movlw	63
  1172   00096A  6E12               	movwf	(___ftmul@f2+2)^0,c
  1173   00096C  EE20 F001          	lfsr	2,1
  1174   000970  5045               	movf	_Valores^0,w,c
  1175   000972  26D9               	addwf	fsr2l,f,c
  1176   000974  5046               	movf	(_Valores+1)^0,w,c
  1177   000976  22DA               	addwfc	fsr2h,f,c
  1178   000978  50DF               	movf	indf2,w,c
  1179   00097A  EC78  F00F         	call	___lbtoft
  1180   00097E  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1181   000982  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1182   000986  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1183   00098A  EC69  F00A         	call	___ftmul	;wreg free
  1184   00098E  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1185   000992  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1186   000996  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1187   00099A  0ED6               	movlw	214
  1188   00099C  6E1F               	movwf	___ftadd@f2^0,c
  1189   00099E  0EF5               	movlw	245
  1190   0009A0  6E20               	movwf	(___ftadd@f2+1)^0,c
  1191   0009A2  0E43               	movlw	67
  1192   0009A4  6E21               	movwf	(___ftadd@f2+2)^0,c
  1193   0009A6  EC09  F008         	call	___ftadd	;wreg free
  1194   0009AA  C01C  F03E         	movff	?___ftadd,_Subrutina_Main$948
  1195   0009AE  C01D  F03F         	movff	?___ftadd+1,_Subrutina_Main$948+1
  1196   0009B2  C01E  F040         	movff	?___ftadd+2,_Subrutina_Main$948+2
  1197                           
  1198                           ;Laboratorio_5.c: 145: Imprimir((Valores[1]*1.8) + 491.67, Valores[0], 'R');
  1199   0009B6  C03E  F02E         	movff	_Subrutina_Main$948,Imprimir@Temperatura
  1200   0009BA  C03F  F02F         	movff	_Subrutina_Main$948+1,Imprimir@Temperatura+1
  1201   0009BE  C040  F030         	movff	_Subrutina_Main$948+2,Imprimir@Temperatura+2
  1202   0009C2  C045  FFD9         	movff	_Valores,fsr2l
  1203   0009C6  C046  FFDA         	movff	_Valores+1,fsr2h
  1204   0009CA  50DF               	movf	indf2,w,c
  1205   0009CC  6E31               	movwf	Imprimir@Humedad^0,c
  1206   0009CE  0E52               	movlw	82
  1207   0009D0  6E32               	movwf	Imprimir@TempUnity^0,c
  1208   0009D2  ECA5  F009         	call	_Imprimir	;wreg free
  1209                           
  1210                           ;Laboratorio_5.c: 146: }else if (Unidad == 'F'){
  1211   0009D6  0012               	return	
  1212   0009D8                     l2863:
  1213   0009D8  0E46               	movlw	70
  1214   0009DA  183A               	xorwf	Subrutina_Main@Unidad^0,w,c
  1215   0009DC  A4D8               	btfss	status,2,c
  1216   0009DE  D077               	goto	l2869
  1217                           
  1218                           ;Laboratorio_5.c: 147: EnviarMedicion((Valores[1]*1.8) + 32, Valores[0], 'F');
  1219   0009E0  0E66               	movlw	102
  1220   0009E2  6E10               	movwf	___ftmul@f2^0,c
  1221   0009E4  0EE6               	movlw	230
  1222   0009E6  6E11               	movwf	(___ftmul@f2+1)^0,c
  1223   0009E8  0E3F               	movlw	63
  1224   0009EA  6E12               	movwf	(___ftmul@f2+2)^0,c
  1225   0009EC  EE20 F001          	lfsr	2,1
  1226   0009F0  5045               	movf	_Valores^0,w,c
  1227   0009F2  26D9               	addwf	fsr2l,f,c
  1228   0009F4  5046               	movf	(_Valores+1)^0,w,c
  1229   0009F6  22DA               	addwfc	fsr2h,f,c
  1230   0009F8  50DF               	movf	indf2,w,c
  1231   0009FA  EC78  F00F         	call	___lbtoft
  1232   0009FE  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1233   000A02  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1234   000A06  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1235   000A0A  EC69  F00A         	call	___ftmul	;wreg free
  1236   000A0E  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1237   000A12  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1238   000A16  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1239   000A1A  0E00               	movlw	0
  1240   000A1C  6E1F               	movwf	___ftadd@f2^0,c
  1241   000A1E  0E00               	movlw	0
  1242   000A20  6E20               	movwf	(___ftadd@f2+1)^0,c
  1243   000A22  0E42               	movlw	66
  1244   000A24  6E21               	movwf	(___ftadd@f2+2)^0,c
  1245   000A26  EC09  F008         	call	___ftadd	;wreg free
  1246   000A2A  C01C  F03B         	movff	?___ftadd,_Subrutina_Main$947
  1247   000A2E  C01D  F03C         	movff	?___ftadd+1,_Subrutina_Main$947+1
  1248   000A32  C01E  F03D         	movff	?___ftadd+2,_Subrutina_Main$947+2
  1249                           
  1250                           ;Laboratorio_5.c: 147: EnviarMedicion((Valores[1]*1.8) + 32, Valores[0], 'F');
  1251   000A36  C03B  F02E         	movff	_Subrutina_Main$947,EnviarMedicion@Temperatura
  1252   000A3A  C03C  F02F         	movff	_Subrutina_Main$947+1,EnviarMedicion@Temperatura+1
  1253   000A3E  C03D  F030         	movff	_Subrutina_Main$947+2,EnviarMedicion@Temperatura+2
  1254   000A42  C045  FFD9         	movff	_Valores,fsr2l
  1255   000A46  C046  FFDA         	movff	_Valores+1,fsr2h
  1256   000A4A  50DF               	movf	indf2,w,c
  1257   000A4C  6E31               	movwf	EnviarMedicion@Humedad^0,c
  1258   000A4E  0E46               	movlw	70
  1259   000A50  6E32               	movwf	EnviarMedicion@TempUnity^0,c
  1260   000A52  EC04  F007         	call	_EnviarMedicion	;wreg free
  1261                           
  1262                           ;Laboratorio_5.c: 148: Imprimir((Valores[1]*1.8) + 32, Valores[0], 'F');
  1263   000A56  0E66               	movlw	102
  1264   000A58  6E10               	movwf	___ftmul@f2^0,c
  1265   000A5A  0EE6               	movlw	230
  1266   000A5C  6E11               	movwf	(___ftmul@f2+1)^0,c
  1267   000A5E  0E3F               	movlw	63
  1268   000A60  6E12               	movwf	(___ftmul@f2+2)^0,c
  1269   000A62  EE20 F001          	lfsr	2,1
  1270   000A66  5045               	movf	_Valores^0,w,c
  1271   000A68  26D9               	addwf	fsr2l,f,c
  1272   000A6A  5046               	movf	(_Valores+1)^0,w,c
  1273   000A6C  22DA               	addwfc	fsr2h,f,c
  1274   000A6E  50DF               	movf	indf2,w,c
  1275   000A70  EC78  F00F         	call	___lbtoft
  1276   000A74  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1277   000A78  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1278   000A7C  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1279   000A80  EC69  F00A         	call	___ftmul	;wreg free
  1280   000A84  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1281   000A88  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1282   000A8C  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1283   000A90  0E00               	movlw	0
  1284   000A92  6E1F               	movwf	___ftadd@f2^0,c
  1285   000A94  0E00               	movlw	0
  1286   000A96  6E20               	movwf	(___ftadd@f2+1)^0,c
  1287   000A98  0E42               	movlw	66
  1288   000A9A  6E21               	movwf	(___ftadd@f2+2)^0,c
  1289   000A9C  EC09  F008         	call	___ftadd	;wreg free
  1290   000AA0  C01C  F03E         	movff	?___ftadd,_Subrutina_Main$948
  1291   000AA4  C01D  F03F         	movff	?___ftadd+1,_Subrutina_Main$948+1
  1292   000AA8  C01E  F040         	movff	?___ftadd+2,_Subrutina_Main$948+2
  1293                           
  1294                           ;Laboratorio_5.c: 148: Imprimir((Valores[1]*1.8) + 32, Valores[0], 'F');
  1295   000AAC  C03E  F02E         	movff	_Subrutina_Main$948,Imprimir@Temperatura
  1296   000AB0  C03F  F02F         	movff	_Subrutina_Main$948+1,Imprimir@Temperatura+1
  1297   000AB4  C040  F030         	movff	_Subrutina_Main$948+2,Imprimir@Temperatura+2
  1298   000AB8  C045  FFD9         	movff	_Valores,fsr2l
  1299   000ABC  C046  FFDA         	movff	_Valores+1,fsr2h
  1300   000AC0  50DF               	movf	indf2,w,c
  1301   000AC2  6E31               	movwf	Imprimir@Humedad^0,c
  1302   000AC4  0E46               	movlw	70
  1303   000AC6  6E32               	movwf	Imprimir@TempUnity^0,c
  1304   000AC8  ECA5  F009         	call	_Imprimir	;wreg free
  1305                           
  1306                           ;Laboratorio_5.c: 149: }else{
  1307   000ACC  0012               	return	
  1308   000ACE                     l2869:
  1309                           
  1310                           ;Laboratorio_5.c: 150: EnviarMedicion(Valores[1], Valores[0], 'C');
  1311   000ACE  EE20 F001          	lfsr	2,1
  1312   000AD2  5045               	movf	_Valores^0,w,c
  1313   000AD4  26D9               	addwf	fsr2l,f,c
  1314   000AD6  5046               	movf	(_Valores+1)^0,w,c
  1315   000AD8  22DA               	addwfc	fsr2h,f,c
  1316   000ADA  50DF               	movf	indf2,w,c
  1317   000ADC  EC78  F00F         	call	___lbtoft
  1318   000AE0  C009  F02E         	movff	?___lbtoft,EnviarMedicion@Temperatura
  1319   000AE4  C00A  F02F         	movff	?___lbtoft+1,EnviarMedicion@Temperatura+1
  1320   000AE8  C00B  F030         	movff	?___lbtoft+2,EnviarMedicion@Temperatura+2
  1321   000AEC  C045  FFD9         	movff	_Valores,fsr2l
  1322   000AF0  C046  FFDA         	movff	_Valores+1,fsr2h
  1323   000AF4  50DF               	movf	indf2,w,c
  1324   000AF6  6E31               	movwf	EnviarMedicion@Humedad^0,c
  1325   000AF8  0E43               	movlw	67
  1326   000AFA  6E32               	movwf	EnviarMedicion@TempUnity^0,c
  1327   000AFC  EC04  F007         	call	_EnviarMedicion	;wreg free
  1328                           
  1329                           ;Laboratorio_5.c: 151: Imprimir(Valores[1], Valores[0], 'C');
  1330   000B00  EE20 F001          	lfsr	2,1
  1331   000B04  5045               	movf	_Valores^0,w,c
  1332   000B06  26D9               	addwf	fsr2l,f,c
  1333   000B08  5046               	movf	(_Valores+1)^0,w,c
  1334   000B0A  22DA               	addwfc	fsr2h,f,c
  1335   000B0C  50DF               	movf	indf2,w,c
  1336   000B0E  EC78  F00F         	call	___lbtoft
  1337   000B12  C009  F02E         	movff	?___lbtoft,Imprimir@Temperatura
  1338   000B16  C00A  F02F         	movff	?___lbtoft+1,Imprimir@Temperatura+1
  1339   000B1A  C00B  F030         	movff	?___lbtoft+2,Imprimir@Temperatura+2
  1340   000B1E  C045  FFD9         	movff	_Valores,fsr2l
  1341   000B22  C046  FFDA         	movff	_Valores+1,fsr2h
  1342   000B26  50DF               	movf	indf2,w,c
  1343   000B28  6E31               	movwf	Imprimir@Humedad^0,c
  1344   000B2A  0E43               	movlw	67
  1345   000B2C  6E32               	movwf	Imprimir@TempUnity^0,c
  1346   000B2E  ECA5  F009         	call	_Imprimir	;wreg free
  1347   000B32  0012               	return		;funcret
  1348   000B34                     __end_of_Subrutina_Main:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function ___lbtoft *****************
  1352 ;; Defined at:
  1353 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbtoft.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  c               1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  c               1   11[COMRAM] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  3    8[COMRAM] float 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         3       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        4 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 2
  1374 ;; This function calls:
  1375 ;;		___ftpack
  1376 ;; This function is called by:
  1377 ;;		_Subrutina_Main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text2
  1382   001EF0                     __ptext2:
  1383                           	callstack 0
  1384   001EF0                     ___lbtoft:
  1385                           	callstack 27
  1386                           
  1387                           ;incstack = 0
  1388                           ;___lbtoft@c stored from wreg
  1389   001EF0  6E0C               	movwf	___lbtoft@c^0,c
  1390   001EF2  500C               	movf	___lbtoft@c^0,w,c
  1391   001EF4  6E01               	movwf	___ftpack@arg^0,c
  1392   001EF6  6A02               	clrf	(___ftpack@arg+1)^0,c
  1393   001EF8  6A03               	clrf	(___ftpack@arg+2)^0,c
  1394   001EFA  0E8E               	movlw	142
  1395   001EFC  6E04               	movwf	___ftpack@exp^0,c
  1396   001EFE  0E00               	movlw	0
  1397   001F00  6E05               	movwf	___ftpack@sign^0,c
  1398   001F02  ECBF  F00B         	call	___ftpack	;wreg free
  1399   001F06  C001  F009         	movff	?___ftpack,?___lbtoft
  1400   001F0A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1401   001F0E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1402   001F12  0012               	return		;funcret
  1403   001F14                     __end_of___lbtoft:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _Imprimir *****************
  1407 ;; Defined at:
  1408 ;;		line 251 in file "Laboratorio_5.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  Temperatura     3   45[COMRAM] float 
  1411 ;;  Humedad         1   48[COMRAM] unsigned char 
  1412 ;;  TempUnity       1   49[COMRAM] unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  decimal         3   50[COMRAM] float 
  1415 ;;  Decimales       2   55[COMRAM] int 
  1416 ;;  ValorF          2   53[COMRAM] int 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2   45[COMRAM] int 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         5       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:       12 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 5
  1433 ;; This function calls:
  1434 ;;		_BorraLCD
  1435 ;;		_ComandoLCD
  1436 ;;		_EscribeLCD_c
  1437 ;;		_EscribeLCD_n16
  1438 ;;		_EscribeLCD_n8
  1439 ;;		_MensajeLCD_Var
  1440 ;;		___awdiv
  1441 ;;		___awmod
  1442 ;;		___awtoft
  1443 ;;		___ftge
  1444 ;;		___ftmul
  1445 ;;		___ftsub
  1446 ;;		___fttol
  1447 ;; This function is called by:
  1448 ;;		_Subrutina_Main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text3
  1453   00134A                     __ptext3:
  1454                           	callstack 0
  1455   00134A                     _Imprimir:
  1456                           	callstack 24
  1457                           
  1458                           ;Laboratorio_5.c: 253: int ValorF = (int)(Temperatura);
  1459                           
  1460                           ;incstack = 0
  1461   00134A  C02E  F01C         	movff	Imprimir@Temperatura,___fttol@f1
  1462   00134E  C02F  F01D         	movff	Imprimir@Temperatura+1,___fttol@f1+1
  1463   001352  C030  F01E         	movff	Imprimir@Temperatura+2,___fttol@f1+2
  1464   001356  EC56  F00B         	call	___fttol	;wreg free
  1465   00135A  C01C  F036         	movff	?___fttol,Imprimir@ValorF
  1466   00135E  C01D  F037         	movff	?___fttol+1,Imprimir@ValorF+1
  1467                           
  1468                           ;Laboratorio_5.c: 254: float decimal = Temperatura - ValorF;
  1469   001362  C02E  F028         	movff	Imprimir@Temperatura,___ftsub@f1
  1470   001366  C02F  F029         	movff	Imprimir@Temperatura+1,___ftsub@f1+1
  1471   00136A  C030  F02A         	movff	Imprimir@Temperatura+2,___ftsub@f1+2
  1472   00136E  C036  F009         	movff	Imprimir@ValorF,___awtoft@c
  1473   001372  C037  F00A         	movff	Imprimir@ValorF+1,___awtoft@c+1
  1474   001376  ECC2  F00E         	call	___awtoft	;wreg free
  1475   00137A  C009  F02B         	movff	?___awtoft,___ftsub@f2
  1476   00137E  C00A  F02C         	movff	?___awtoft+1,___ftsub@f2+1
  1477   001382  C00B  F02D         	movff	?___awtoft+2,___ftsub@f2+2
  1478   001386  EC85  F00E         	call	___ftsub	;wreg free
  1479   00138A  C028  F033         	movff	?___ftsub,Imprimir@decimal
  1480   00138E  C029  F034         	movff	?___ftsub+1,Imprimir@decimal+1
  1481   001392  C02A  F035         	movff	?___ftsub+2,Imprimir@decimal+2
  1482                           
  1483                           ;Laboratorio_5.c: 255: int Decimales = (int)(decimal*100);
  1484   001396  0E00               	movlw	0
  1485   001398  6E10               	movwf	___ftmul@f2^0,c
  1486   00139A  0EC8               	movlw	200
  1487   00139C  6E11               	movwf	(___ftmul@f2+1)^0,c
  1488   00139E  0E42               	movlw	66
  1489   0013A0  6E12               	movwf	(___ftmul@f2+2)^0,c
  1490   0013A2  C033  F00D         	movff	Imprimir@decimal,___ftmul@f1
  1491   0013A6  C034  F00E         	movff	Imprimir@decimal+1,___ftmul@f1+1
  1492   0013AA  C035  F00F         	movff	Imprimir@decimal+2,___ftmul@f1+2
  1493   0013AE  EC69  F00A         	call	___ftmul	;wreg free
  1494   0013B2  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1495   0013B6  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1496   0013BA  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1497   0013BE  EC56  F00B         	call	___fttol	;wreg free
  1498   0013C2  C01C  F038         	movff	?___fttol,Imprimir@Decimales
  1499   0013C6  C01D  F039         	movff	?___fttol+1,Imprimir@Decimales+1
  1500                           
  1501                           ;Laboratorio_5.c: 257: BorraLCD();
  1502   0013CA  ECB2  F00F         	call	_BorraLCD	;wreg free
  1503                           
  1504                           ;Laboratorio_5.c: 259: MensajeLCD_Var("Temp: ");
  1505   0013CE  0E08               	movlw	low STR_4
  1506   0013D0  6E06               	movwf	MensajeLCD_Var@a^0,c
  1507   0013D2  ECF5  F00D         	call	_MensajeLCD_Var	;wreg free
  1508                           
  1509                           ;Laboratorio_5.c: 261: if (Temperatura < 10) EscribeLCD_n8(ValorF, 1);
  1510   0013D6  C02E  F001         	movff	Imprimir@Temperatura,___ftge@ff1
  1511   0013DA  C02F  F002         	movff	Imprimir@Temperatura+1,___ftge@ff1+1
  1512   0013DE  C030  F003         	movff	Imprimir@Temperatura+2,___ftge@ff1+2
  1513   0013E2  0E00               	movlw	0
  1514   0013E4  6E04               	movwf	___ftge@ff2^0,c
  1515   0013E6  0E20               	movlw	32
  1516   0013E8  6E05               	movwf	(___ftge@ff2+1)^0,c
  1517   0013EA  0E41               	movlw	65
  1518   0013EC  6E06               	movwf	(___ftge@ff2+2)^0,c
  1519   0013EE  ECF9  F00C         	call	___ftge	;wreg free
  1520   0013F2  B0D8               	btfsc	status,0,c
  1521   0013F4  D006               	goto	l2701
  1522   0013F6  0E01               	movlw	1
  1523   0013F8  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1524   0013FA  5036               	movf	Imprimir@ValorF^0,w,c
  1525   0013FC  ECE3  F00A         	call	_EscribeLCD_n8
  1526   001400  D01E               	goto	l2707
  1527   001402                     l2701:
  1528                           
  1529                           ;Laboratorio_5.c: 262: else if (Temperatura < 100) EscribeLCD_n8(ValorF, 2);
  1530   001402  C02E  F001         	movff	Imprimir@Temperatura,___ftge@ff1
  1531   001406  C02F  F002         	movff	Imprimir@Temperatura+1,___ftge@ff1+1
  1532   00140A  C030  F003         	movff	Imprimir@Temperatura+2,___ftge@ff1+2
  1533   00140E  0E00               	movlw	0
  1534   001410  6E04               	movwf	___ftge@ff2^0,c
  1535   001412  0EC8               	movlw	200
  1536   001414  6E05               	movwf	(___ftge@ff2+1)^0,c
  1537   001416  0E42               	movlw	66
  1538   001418  6E06               	movwf	(___ftge@ff2+2)^0,c
  1539   00141A  ECF9  F00C         	call	___ftge	;wreg free
  1540   00141E  B0D8               	btfsc	status,0,c
  1541   001420  D006               	goto	l2705
  1542   001422  0E02               	movlw	2
  1543   001424  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1544   001426  5036               	movf	Imprimir@ValorF^0,w,c
  1545   001428  ECE3  F00A         	call	_EscribeLCD_n8
  1546   00142C  D008               	goto	l2707
  1547   00142E                     l2705:
  1548                           
  1549                           ;Laboratorio_5.c: 263: else EscribeLCD_n16(ValorF, 3);
  1550   00142E  C036  F00D         	movff	Imprimir@ValorF,EscribeLCD_n16@a
  1551   001432  C037  F00E         	movff	Imprimir@ValorF+1,EscribeLCD_n16@a+1
  1552   001436  0E03               	movlw	3
  1553   001438  6E0F               	movwf	EscribeLCD_n16@b^0,c
  1554   00143A  EC9A  F005         	call	_EscribeLCD_n16	;wreg free
  1555   00143E                     l2707:
  1556                           
  1557                           ;Laboratorio_5.c: 265: if (Decimales != 0){
  1558   00143E  5038               	movf	Imprimir@Decimales^0,w,c
  1559   001440  1039               	iorwf	(Imprimir@Decimales+1)^0,w,c
  1560   001442  B4D8               	btfsc	status,2,c
  1561   001444  D026               	goto	l377
  1562                           
  1563                           ;Laboratorio_5.c: 266: EscribeLCD_c('.');
  1564   001446  0E2E               	movlw	46
  1565   001448  ECA7  F00F         	call	_EscribeLCD_c
  1566                           
  1567                           ;Laboratorio_5.c: 267: if (Decimales % 10 == 0) EscribeLCD_n8(Decimales/10, 1);
  1568   00144C  C038  F001         	movff	Imprimir@Decimales,___awmod@dividend
  1569   001450  C039  F002         	movff	Imprimir@Decimales+1,___awmod@dividend+1
  1570   001454  0E00               	movlw	0
  1571   001456  6E04               	movwf	(___awmod@divisor+1)^0,c
  1572   001458  0E0A               	movlw	10
  1573   00145A  6E03               	movwf	___awmod@divisor^0,c
  1574   00145C  EC33  F00D         	call	___awmod	;wreg free
  1575   001460  5001               	movf	?___awmod^0,w,c
  1576   001462  1002               	iorwf	(?___awmod+1)^0,w,c
  1577   001464  A4D8               	btfss	status,2,c
  1578   001466  D010               	goto	l2713
  1579   001468  0E01               	movlw	1
  1580   00146A  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1581   00146C  C038  F007         	movff	Imprimir@Decimales,___awdiv@dividend
  1582   001470  C039  F008         	movff	Imprimir@Decimales+1,___awdiv@dividend+1
  1583   001474  0E00               	movlw	0
  1584   001476  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1585   001478  0E0A               	movlw	10
  1586   00147A  6E09               	movwf	___awdiv@divisor^0,c
  1587   00147C  ECB7  F00C         	call	___awdiv	;wreg free
  1588   001480  5007               	movf	?___awdiv^0,w,c
  1589   001482  ECE3  F00A         	call	_EscribeLCD_n8
  1590   001486  D005               	goto	l377
  1591   001488                     l2713:
  1592                           
  1593                           ;Laboratorio_5.c: 268: else EscribeLCD_n8(Decimales, 2);
  1594   001488  0E02               	movlw	2
  1595   00148A  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1596   00148C  5038               	movf	Imprimir@Decimales^0,w,c
  1597   00148E  ECE3  F00A         	call	_EscribeLCD_n8
  1598   001492                     l377:
  1599                           
  1600                           ;Laboratorio_5.c: 269: };Laboratorio_5.c: 271: EscribeLCD_c(' ');
  1601   001492  0E20               	movlw	32
  1602   001494  ECA7  F00F         	call	_EscribeLCD_c
  1603                           
  1604                           ;Laboratorio_5.c: 272: EscribeLCD_c(TempUnity);
  1605   001498  5032               	movf	Imprimir@TempUnity^0,w,c
  1606   00149A  ECA7  F00F         	call	_EscribeLCD_c
  1607                           
  1608                           ;Laboratorio_5.c: 274: ComandoLCD(0xC0);
  1609   00149E  0EC0               	movlw	192
  1610   0014A0  ECF7  F00E         	call	_ComandoLCD
  1611                           
  1612                           ;Laboratorio_5.c: 275: MensajeLCD_Var("Hum: ");
  1613   0014A4  0E0F               	movlw	low STR_5
  1614   0014A6  6E06               	movwf	MensajeLCD_Var@a^0,c
  1615   0014A8  ECF5  F00D         	call	_MensajeLCD_Var	;wreg free
  1616                           
  1617                           ;Laboratorio_5.c: 276: if (Humedad < 10) EscribeLCD_n8(Humedad, 1);
  1618   0014AC  0E0A               	movlw	10
  1619   0014AE  6031               	cpfslt	Imprimir@Humedad^0,c
  1620   0014B0  D006               	goto	l2721
  1621   0014B2  0E01               	movlw	1
  1622   0014B4  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1623   0014B6  5031               	movf	Imprimir@Humedad^0,w,c
  1624   0014B8  ECE3  F00A         	call	_EscribeLCD_n8
  1625   0014BC  D005               	goto	l2723
  1626   0014BE                     l2721:
  1627                           
  1628                           ;Laboratorio_5.c: 277: else EscribeLCD_n8(Humedad, 2);
  1629   0014BE  0E02               	movlw	2
  1630   0014C0  6E0F               	movwf	EscribeLCD_n8@b^0,c
  1631   0014C2  5031               	movf	Imprimir@Humedad^0,w,c
  1632   0014C4  ECE3  F00A         	call	_EscribeLCD_n8
  1633   0014C8                     l2723:
  1634                           
  1635                           ;Laboratorio_5.c: 278: MensajeLCD_Var(" %");
  1636   0014C8  0E1A               	movlw	low STR_6
  1637   0014CA  6E06               	movwf	MensajeLCD_Var@a^0,c
  1638   0014CC  ECF5  F00D         	call	_MensajeLCD_Var	;wreg free
  1639   0014D0  0012               	return		;funcret
  1640   0014D2                     __end_of_Imprimir:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function ___ftge *****************
  1644 ;; Defined at:
  1645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftge.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  ff1             3    0[COMRAM] float 
  1648 ;;  ff2             3    3[COMRAM] float 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;		None               void
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1660 ;;      Params:         6       0       0       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1662 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1663 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1664 ;;Total ram usage:        9 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_Imprimir
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text4
  1675   0019F2                     __ptext4:
  1676                           	callstack 0
  1677   0019F2                     ___ftge:
  1678                           	callstack 27
  1679                           
  1680                           ;incstack = 0
  1681   0019F2  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  1682   0019F4  D00F               	goto	l2591
  1683   0019F6  0E00               	movlw	0
  1684   0019F8  6E07               	movwf	??___ftge^0,c
  1685   0019FA  0E00               	movlw	0
  1686   0019FC  6E08               	movwf	(??___ftge+1)^0,c
  1687   0019FE  0E80               	movlw	128
  1688   001A00  6E09               	movwf	(??___ftge+2)^0,c
  1689   001A02  5001               	movf	___ftge@ff1^0,w,c
  1690   001A04  5C07               	subwf	??___ftge^0,w,c
  1691   001A06  6E01               	movwf	___ftge@ff1^0,c
  1692   001A08  5002               	movf	(___ftge@ff1+1)^0,w,c
  1693   001A0A  5808               	subwfb	(??___ftge+1)^0,w,c
  1694   001A0C  6E02               	movwf	(___ftge@ff1+1)^0,c
  1695   001A0E  5003               	movf	(___ftge@ff1+2)^0,w,c
  1696   001A10  5809               	subwfb	(??___ftge+2)^0,w,c
  1697   001A12  6E03               	movwf	(___ftge@ff1+2)^0,c
  1698   001A14                     l2591:
  1699   001A14  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  1700   001A16  D00F               	goto	l2595
  1701   001A18  0E00               	movlw	0
  1702   001A1A  6E07               	movwf	??___ftge^0,c
  1703   001A1C  0E00               	movlw	0
  1704   001A1E  6E08               	movwf	(??___ftge+1)^0,c
  1705   001A20  0E80               	movlw	128
  1706   001A22  6E09               	movwf	(??___ftge+2)^0,c
  1707   001A24  5004               	movf	___ftge@ff2^0,w,c
  1708   001A26  5C07               	subwf	??___ftge^0,w,c
  1709   001A28  6E04               	movwf	___ftge@ff2^0,c
  1710   001A2A  5005               	movf	(___ftge@ff2+1)^0,w,c
  1711   001A2C  5808               	subwfb	(??___ftge+1)^0,w,c
  1712   001A2E  6E05               	movwf	(___ftge@ff2+1)^0,c
  1713   001A30  5006               	movf	(___ftge@ff2+2)^0,w,c
  1714   001A32  5809               	subwfb	(??___ftge+2)^0,w,c
  1715   001A34  6E06               	movwf	(___ftge@ff2+2)^0,c
  1716   001A36                     l2595:
  1717   001A36  0E00               	movlw	0
  1718   001A38  1A01               	xorwf	___ftge@ff1^0,f,c
  1719   001A3A  0E00               	movlw	0
  1720   001A3C  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  1721   001A3E  0E80               	movlw	128
  1722   001A40  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  1723   001A42  0E00               	movlw	0
  1724   001A44  1A04               	xorwf	___ftge@ff2^0,f,c
  1725   001A46  0E00               	movlw	0
  1726   001A48  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  1727   001A4A  0E80               	movlw	128
  1728   001A4C  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  1729   001A4E  5004               	movf	___ftge@ff2^0,w,c
  1730   001A50  5C01               	subwf	___ftge@ff1^0,w,c
  1731   001A52  5005               	movf	(___ftge@ff2+1)^0,w,c
  1732   001A54  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  1733   001A56  5006               	movf	(___ftge@ff2+2)^0,w,c
  1734   001A58  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  1735   001A5A  B0D8               	btfsc	status,0,c
  1736   001A5C  D002               	goto	l2601
  1737   001A5E  90D8               	bcf	status,0,c
  1738   001A60  0012               	return	
  1739   001A62                     l2601:
  1740   001A62  80D8               	bsf	status,0,c
  1741   001A64  0012               	return		;funcret
  1742   001A66                     __end_of___ftge:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _MensajeLCD_Var *****************
  1746 ;; Defined at:
  1747 ;;		line 364 in file "LibLCDXC8.h"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  a               1    5[COMRAM] PTR unsigned char 
  1750 ;;		 -> STR_6(3), STR_5(6), STR_4(7), STR_2(3), 
  1751 ;;		 -> STR_1(7), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  actual          1    9[COMRAM] unsigned char 
  1754 ;;  i               2   10[COMRAM] int 
  1755 ;;  longitud        2    7[COMRAM] int 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         1       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        7 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 4
  1772 ;; This function calls:
  1773 ;;		_EscribeLCD_c
  1774 ;;		_strlen
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;;		_Imprimir
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text5
  1782   001BEA                     __ptext5:
  1783                           	callstack 0
  1784   001BEA                     _MensajeLCD_Var:
  1785                           	callstack 24
  1786                           
  1787                           ;LibLCDXC8.h: 369: int i;;LibLCDXC8.h: 370: int longitud = strlen(a);
  1788                           
  1789                           ;incstack = 0
  1790   001BEA  C006  F001         	movff	MensajeLCD_Var@a,strlen@s
  1791   001BEE  EC3D  F00F         	call	_strlen	;wreg free
  1792   001BF2  C001  F008         	movff	?_strlen,MensajeLCD_Var@longitud
  1793   001BF6  C002  F009         	movff	?_strlen+1,MensajeLCD_Var@longitud+1
  1794                           
  1795                           ;LibLCDXC8.h: 371: for (i = 0; i < longitud; i++){
  1796   001BFA  0E00               	movlw	0
  1797   001BFC  6E0C               	movwf	(MensajeLCD_Var@i+1)^0,c
  1798   001BFE  0E00               	movlw	0
  1799   001C00  6E0B               	movwf	MensajeLCD_Var@i^0,c
  1800   001C02  D00F               	goto	l2433
  1801   001C04                     l2427:
  1802                           
  1803                           ;LibLCDXC8.h: 372: char actual = a[i];
  1804   001C04  5006               	movf	MensajeLCD_Var@a^0,w,c
  1805   001C06  240B               	addwf	MensajeLCD_Var@i^0,w,c
  1806   001C08  6E07               	movwf	??_MensajeLCD_Var^0,c
  1807   001C0A  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1808   001C0E                     	if	1	;There is more than 1 active tblptr byte
  1809   001C0E  0E08               	movlw	high __smallconst
  1810   001C10  6EF7               	movwf	tblptrh,c
  1811   001C12                     	endif
  1812   001C12                     	if	0	;tblptru may be non-zero
  1813   001C12                     	endif
  1814   001C12                     	if	0	;tblptru may be non-zero
  1815   001C12                     	endif
  1816   001C12  0008               	tblrd		*
  1817   001C14  CFF5 F00A          	movff	tablat,MensajeLCD_Var@actual
  1818                           
  1819                           ;LibLCDXC8.h: 373: EscribeLCD_c(actual);
  1820   001C18  500A               	movf	MensajeLCD_Var@actual^0,w,c
  1821   001C1A  ECA7  F00F         	call	_EscribeLCD_c
  1822   001C1E  4A0B               	infsnz	MensajeLCD_Var@i^0,f,c
  1823   001C20  2A0C               	incf	(MensajeLCD_Var@i+1)^0,f,c
  1824   001C22                     l2433:
  1825   001C22  5008               	movf	MensajeLCD_Var@longitud^0,w,c
  1826   001C24  5C0B               	subwf	MensajeLCD_Var@i^0,w,c
  1827   001C26  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
  1828   001C28  0A80               	xorlw	128
  1829   001C2A  6E07               	movwf	??_MensajeLCD_Var^0,c
  1830   001C2C  5009               	movf	(MensajeLCD_Var@longitud+1)^0,w,c
  1831   001C2E  0A80               	xorlw	128
  1832   001C30  5807               	subwfb	??_MensajeLCD_Var^0,w,c
  1833   001C32  B0D8               	btfsc	status,0,c
  1834   001C34  0012               	return	
  1835   001C36  D7E6               	goto	l2427
  1836   001C38                     __end_of_MensajeLCD_Var:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _EscribeLCD_n8 *****************
  1840 ;; Defined at:
  1841 ;;		line 146 in file "LibLCDXC8.h"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  a               1    wreg     unsigned char 
  1844 ;;  b               1   14[COMRAM] unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  a               1   18[COMRAM] unsigned char 
  1847 ;;  unidad          1   17[COMRAM] unsigned char 
  1848 ;;  decena          1   16[COMRAM] unsigned char 
  1849 ;;  centena         1   15[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         1       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1862 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        5 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 3
  1866 ;; This function calls:
  1867 ;;		_EnviaDato
  1868 ;;		_HabilitaLCD
  1869 ;;		_RetardoLCD
  1870 ;;		___lbdiv
  1871 ;;		___lbmod
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;;		_Imprimir
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text6
  1879   0015C6                     __ptext6:
  1880                           	callstack 0
  1881   0015C6                     _EscribeLCD_n8:
  1882                           	callstack 25
  1883                           
  1884                           ;incstack = 0
  1885                           ;EscribeLCD_n8@a stored from wreg
  1886   0015C6  6E13               	movwf	EscribeLCD_n8@a^0,c
  1887                           
  1888                           ;LibLCDXC8.h: 151: unsigned char centena,decena,unidad;;LibLCDXC8.h: 152: LATD0=1;
  1889   0015C8  808C               	bsf	3980,0,c	;volatile
  1890                           
  1891                           ;LibLCDXC8.h: 153: switch(b){
  1892   0015CA  D065               	goto	l2405
  1893   0015CC                     l2373:
  1894   0015CC  0E0A               	movlw	10
  1895   0015CE  6E01               	movwf	___lbmod@divisor^0,c
  1896   0015D0  5013               	movf	EscribeLCD_n8@a^0,w,c
  1897   0015D2  EC28  F00F         	call	___lbmod
  1898   0015D6  6E12               	movwf	EscribeLCD_n8@unidad^0,c
  1899                           
  1900                           ;LibLCDXC8.h: 155: EnviaDato(unidad+48);
  1901   0015D8  5012               	movf	EscribeLCD_n8@unidad^0,w,c
  1902   0015DA  0F30               	addlw	48
  1903   0015DC  EC41  F00E         	call	_EnviaDato
  1904                           
  1905                           ;LibLCDXC8.h: 156: HabilitaLCD();
  1906   0015E0  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  1907                           
  1908                           ;LibLCDXC8.h: 157: RetardoLCD(4);
  1909   0015E4  0E04               	movlw	4
  1910   0015E6  EC6B  F00D         	call	_RetardoLCD
  1911                           
  1912                           ;LibLCDXC8.h: 158: break;
  1913   0015EA  0012               	return	
  1914   0015EC                     l2379:
  1915   0015EC  0E0A               	movlw	10
  1916   0015EE  6E05               	movwf	___lbdiv@divisor^0,c
  1917   0015F0  0E64               	movlw	100
  1918   0015F2  6E01               	movwf	___lbmod@divisor^0,c
  1919   0015F4  5013               	movf	EscribeLCD_n8@a^0,w,c
  1920   0015F6  EC28  F00F         	call	___lbmod
  1921   0015FA  ECA5  F00E         	call	___lbdiv
  1922   0015FE  6E11               	movwf	EscribeLCD_n8@decena^0,c
  1923                           
  1924                           ;LibLCDXC8.h: 160: unidad=a%10;
  1925   001600  0E0A               	movlw	10
  1926   001602  6E01               	movwf	___lbmod@divisor^0,c
  1927   001604  5013               	movf	EscribeLCD_n8@a^0,w,c
  1928   001606  EC28  F00F         	call	___lbmod
  1929   00160A  6E12               	movwf	EscribeLCD_n8@unidad^0,c
  1930                           
  1931                           ;LibLCDXC8.h: 161: EnviaDato(decena+48);
  1932   00160C  5011               	movf	EscribeLCD_n8@decena^0,w,c
  1933   00160E  0F30               	addlw	48
  1934   001610  EC41  F00E         	call	_EnviaDato
  1935                           
  1936                           ;LibLCDXC8.h: 162: HabilitaLCD();
  1937   001614  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  1938                           
  1939                           ;LibLCDXC8.h: 163: RetardoLCD(4);
  1940   001618  0E04               	movlw	4
  1941   00161A  EC6B  F00D         	call	_RetardoLCD
  1942                           
  1943                           ;LibLCDXC8.h: 164: EnviaDato(unidad+48);
  1944   00161E  5012               	movf	EscribeLCD_n8@unidad^0,w,c
  1945   001620  0F30               	addlw	48
  1946   001622  EC41  F00E         	call	_EnviaDato
  1947                           
  1948                           ;LibLCDXC8.h: 165: HabilitaLCD();
  1949   001626  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  1950                           
  1951                           ;LibLCDXC8.h: 166: RetardoLCD(4);
  1952   00162A  0E04               	movlw	4
  1953   00162C  EC6B  F00D         	call	_RetardoLCD
  1954                           
  1955                           ;LibLCDXC8.h: 167: break;
  1956   001630  0012               	return	
  1957   001632                     l2389:
  1958   001632  0E64               	movlw	100
  1959   001634  6E05               	movwf	___lbdiv@divisor^0,c
  1960   001636  5013               	movf	EscribeLCD_n8@a^0,w,c
  1961   001638  ECA5  F00E         	call	___lbdiv
  1962   00163C  6E10               	movwf	EscribeLCD_n8@centena^0,c
  1963                           
  1964                           ;LibLCDXC8.h: 169: decena=(a%100)/10;
  1965   00163E  0E0A               	movlw	10
  1966   001640  6E05               	movwf	___lbdiv@divisor^0,c
  1967   001642  0E64               	movlw	100
  1968   001644  6E01               	movwf	___lbmod@divisor^0,c
  1969   001646  5013               	movf	EscribeLCD_n8@a^0,w,c
  1970   001648  EC28  F00F         	call	___lbmod
  1971   00164C  ECA5  F00E         	call	___lbdiv
  1972   001650  6E11               	movwf	EscribeLCD_n8@decena^0,c
  1973                           
  1974                           ;LibLCDXC8.h: 170: unidad=a%10;
  1975   001652  0E0A               	movlw	10
  1976   001654  6E01               	movwf	___lbmod@divisor^0,c
  1977   001656  5013               	movf	EscribeLCD_n8@a^0,w,c
  1978   001658  EC28  F00F         	call	___lbmod
  1979   00165C  6E12               	movwf	EscribeLCD_n8@unidad^0,c
  1980                           
  1981                           ;LibLCDXC8.h: 171: EnviaDato(centena+48);
  1982   00165E  5010               	movf	EscribeLCD_n8@centena^0,w,c
  1983   001660  0F30               	addlw	48
  1984   001662  EC41  F00E         	call	_EnviaDato
  1985                           
  1986                           ;LibLCDXC8.h: 172: HabilitaLCD();
  1987   001666  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  1988                           
  1989                           ;LibLCDXC8.h: 173: RetardoLCD(4);
  1990   00166A  0E04               	movlw	4
  1991   00166C  EC6B  F00D         	call	_RetardoLCD
  1992                           
  1993                           ;LibLCDXC8.h: 174: EnviaDato(decena+48);
  1994   001670  5011               	movf	EscribeLCD_n8@decena^0,w,c
  1995   001672  0F30               	addlw	48
  1996   001674  EC41  F00E         	call	_EnviaDato
  1997                           
  1998                           ;LibLCDXC8.h: 175: HabilitaLCD();
  1999   001678  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  2000                           
  2001                           ;LibLCDXC8.h: 176: RetardoLCD(4);
  2002   00167C  0E04               	movlw	4
  2003   00167E  EC6B  F00D         	call	_RetardoLCD
  2004                           
  2005                           ;LibLCDXC8.h: 177: EnviaDato(unidad+48);
  2006   001682  5012               	movf	EscribeLCD_n8@unidad^0,w,c
  2007   001684  0F30               	addlw	48
  2008   001686  EC41  F00E         	call	_EnviaDato
  2009                           
  2010                           ;LibLCDXC8.h: 178: HabilitaLCD();
  2011   00168A  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  2012                           
  2013                           ;LibLCDXC8.h: 179: RetardoLCD(4);
  2014   00168E  0E04               	movlw	4
  2015   001690  EC6B  F00D         	call	_RetardoLCD
  2016                           
  2017                           ;LibLCDXC8.h: 180: break;
  2018   001694  0012               	return	
  2019   001696                     l2405:
  2020   001696  500F               	movf	EscribeLCD_n8@b^0,w,c
  2021                           
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 3, Range of values is 1 to 3
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte           10     6 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028   001698  0A01               	xorlw	1	; case 1
  2029   00169A  B4D8               	btfsc	status,2,c
  2030   00169C  D797               	goto	l2373
  2031   00169E  0A03               	xorlw	3	; case 2
  2032   0016A0  B4D8               	btfsc	status,2,c
  2033   0016A2  D7A4               	goto	l2379
  2034   0016A4  0A01               	xorlw	1	; case 3
  2035   0016A6  A4D8               	btfss	status,2,c
  2036   0016A8  0012               	return	
  2037   0016AA  D7C3               	goto	l2389
  2038   0016AC                     __end_of_EscribeLCD_n8:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function ___lbmod *****************
  2042 ;; Defined at:
  2043 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  dividend        1    wreg     unsigned char 
  2046 ;;  divisor         1    0[COMRAM] unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  dividend        1    1[COMRAM] unsigned char 
  2049 ;;  rem             1    3[COMRAM] unsigned char 
  2050 ;;  counter         1    2[COMRAM] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      unsigned char 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2060 ;;      Params:         1       0       0       0       0       0       0       0       0
  2061 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2063 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2064 ;;Total ram usage:        4 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_EscribeLCD_n8
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text7
  2075   001E50                     __ptext7:
  2076                           	callstack 0
  2077   001E50                     ___lbmod:
  2078                           	callstack 26
  2079                           
  2080                           ;incstack = 0
  2081                           ;___lbmod@dividend stored from wreg
  2082   001E50  6E02               	movwf	___lbmod@dividend^0,c
  2083   001E52  0E08               	movlw	8
  2084   001E54  6E03               	movwf	___lbmod@counter^0,c
  2085   001E56  0E00               	movlw	0
  2086   001E58  6E04               	movwf	___lbmod@rem^0,c
  2087   001E5A                     l2303:
  2088   001E5A  90D8               	bcf	status,0,c
  2089   001E5C  3402               	rlcf	___lbmod@dividend^0,w,c
  2090   001E5E  3404               	rlcf	___lbmod@rem^0,w,c
  2091   001E60  6E04               	movwf	___lbmod@rem^0,c
  2092   001E62  90D8               	bcf	status,0,c
  2093   001E64  3602               	rlcf	___lbmod@dividend^0,f,c
  2094   001E66  5001               	movf	___lbmod@divisor^0,w,c
  2095   001E68  5C04               	subwf	___lbmod@rem^0,w,c
  2096   001E6A  A0D8               	btfss	status,0,c
  2097   001E6C  D002               	goto	l2311
  2098   001E6E  5001               	movf	___lbmod@divisor^0,w,c
  2099   001E70  5E04               	subwf	___lbmod@rem^0,f,c
  2100   001E72                     l2311:
  2101   001E72  2E03               	decfsz	___lbmod@counter^0,f,c
  2102   001E74  D7F2               	goto	l2303
  2103   001E76  5004               	movf	___lbmod@rem^0,w,c
  2104   001E78  0012               	return		;funcret
  2105   001E7A                     __end_of___lbmod:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function ___lbdiv *****************
  2109 ;; Defined at:
  2110 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  dividend        1    wreg     unsigned char 
  2113 ;;  divisor         1    4[COMRAM] unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  dividend        1    5[COMRAM] unsigned char 
  2116 ;;  quotient        1    7[COMRAM] unsigned char 
  2117 ;;  counter         1    6[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      unsigned char 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2127 ;;      Params:         1       0       0       0       0       0       0       0       0
  2128 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2130 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        4 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_EscribeLCD_n8
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text8
  2142   001D4A                     __ptext8:
  2143                           	callstack 0
  2144   001D4A                     ___lbdiv:
  2145                           	callstack 26
  2146                           
  2147                           ;incstack = 0
  2148                           ;___lbdiv@dividend stored from wreg
  2149   001D4A  6E06               	movwf	___lbdiv@dividend^0,c
  2150   001D4C  0E00               	movlw	0
  2151   001D4E  6E08               	movwf	___lbdiv@quotient^0,c
  2152   001D50  5005               	movf	___lbdiv@divisor^0,w,c
  2153   001D52  B4D8               	btfsc	status,2,c
  2154   001D54  D015               	goto	l2297
  2155   001D56  0E01               	movlw	1
  2156   001D58  6E07               	movwf	___lbdiv@counter^0,c
  2157   001D5A  D003               	goto	l2285
  2158   001D5C                     l2281:
  2159   001D5C  90D8               	bcf	status,0,c
  2160   001D5E  3605               	rlcf	___lbdiv@divisor^0,f,c
  2161   001D60  2A07               	incf	___lbdiv@counter^0,f,c
  2162   001D62                     l2285:
  2163   001D62  AE05               	btfss	___lbdiv@divisor^0,7,c
  2164   001D64  D7FB               	goto	l2281
  2165   001D66                     u1620:
  2166   001D66  90D8               	bcf	status,0,c
  2167   001D68  3608               	rlcf	___lbdiv@quotient^0,f,c
  2168   001D6A  5005               	movf	___lbdiv@divisor^0,w,c
  2169   001D6C  5C06               	subwf	___lbdiv@dividend^0,w,c
  2170   001D6E  A0D8               	btfss	status,0,c
  2171   001D70  D003               	goto	l2293
  2172   001D72  5005               	movf	___lbdiv@divisor^0,w,c
  2173   001D74  5E06               	subwf	___lbdiv@dividend^0,f,c
  2174   001D76  8008               	bsf	___lbdiv@quotient^0,0,c
  2175   001D78                     l2293:
  2176   001D78  90D8               	bcf	status,0,c
  2177   001D7A  3205               	rrcf	___lbdiv@divisor^0,f,c
  2178   001D7C  2E07               	decfsz	___lbdiv@counter^0,f,c
  2179   001D7E  D7F3               	goto	u1620
  2180   001D80                     l2297:
  2181   001D80  5008               	movf	___lbdiv@quotient^0,w,c
  2182   001D82  0012               	return		;funcret
  2183   001D84                     __end_of___lbdiv:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _EscribeLCD_n16 *****************
  2187 ;; Defined at:
  2188 ;;		line 184 in file "LibLCDXC8.h"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  a               2   12[COMRAM] unsigned int 
  2191 ;;  b               1   14[COMRAM] unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  centena         2   17[COMRAM] unsigned int 
  2194 ;;  millar          2   15[COMRAM] unsigned int 
  2195 ;;  unidad          1   20[COMRAM] unsigned char 
  2196 ;;  decena          1   19[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2206 ;;      Params:         3       0       0       0       0       0       0       0       0
  2207 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2209 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2210 ;;Total ram usage:        9 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 4
  2213 ;; This function calls:
  2214 ;;		_EscribeLCD_c
  2215 ;;		___lwdiv
  2216 ;;		___lwmod
  2217 ;; This function is called by:
  2218 ;;		_Imprimir
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text9
  2223   000B34                     __ptext9:
  2224                           	callstack 0
  2225   000B34                     _EscribeLCD_n16:
  2226                           	callstack 24
  2227                           
  2228                           ;LibLCDXC8.h: 189: unsigned char decena,unidad;;LibLCDXC8.h: 190: unsigned int centena,m
      +                          illar;;LibLCDXC8.h: 191: LATD0=1;
  2229                           
  2230                           ;incstack = 0
  2231   000B34  808C               	bsf	3980,0,c	;volatile
  2232                           
  2233                           ;LibLCDXC8.h: 192: switch(b){
  2234   000B36  D157               	goto	l2421
  2235   000B38                     l2409:
  2236   000B38  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2237   000B3C  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2238   000B40  0E00               	movlw	0
  2239   000B42  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2240   000B44  0E0A               	movlw	10
  2241   000B46  6E03               	movwf	___lwmod@divisor^0,c
  2242   000B48  EC64  F00E         	call	___lwmod	;wreg free
  2243   000B4C  5001               	movf	?___lwmod^0,w,c
  2244   000B4E  6E15               	movwf	EscribeLCD_n16@unidad^0,c
  2245                           
  2246                           ;LibLCDXC8.h: 194: EscribeLCD_c(unidad+48);
  2247   000B50  5015               	movf	EscribeLCD_n16@unidad^0,w,c
  2248   000B52  0F30               	addlw	48
  2249   000B54  ECA7  F00F         	call	_EscribeLCD_c
  2250                           
  2251                           ;LibLCDXC8.h: 195: break;
  2252   000B58  0012               	return	
  2253   000B5A                     l2411:
  2254   000B5A  0E00               	movlw	0
  2255   000B5C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2256   000B5E  0E64               	movlw	100
  2257   000B60  6E03               	movwf	___lwmod@divisor^0,c
  2258   000B62  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2259   000B66  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2260   000B6A  EC64  F00E         	call	___lwmod	;wreg free
  2261   000B6E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2262   000B72  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2263   000B76  0E00               	movlw	0
  2264   000B78  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2265   000B7A  0E0A               	movlw	10
  2266   000B7C  6E08               	movwf	___lwdiv@divisor^0,c
  2267   000B7E  ECCC  F00D         	call	___lwdiv	;wreg free
  2268   000B82  5006               	movf	?___lwdiv^0,w,c
  2269   000B84  6E14               	movwf	EscribeLCD_n16@decena^0,c
  2270                           
  2271                           ;LibLCDXC8.h: 197: unidad=a%10;
  2272   000B86  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2273   000B8A  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2274   000B8E  0E00               	movlw	0
  2275   000B90  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2276   000B92  0E0A               	movlw	10
  2277   000B94  6E03               	movwf	___lwmod@divisor^0,c
  2278   000B96  EC64  F00E         	call	___lwmod	;wreg free
  2279   000B9A  5001               	movf	?___lwmod^0,w,c
  2280   000B9C  6E15               	movwf	EscribeLCD_n16@unidad^0,c
  2281                           
  2282                           ;LibLCDXC8.h: 198: EscribeLCD_c(decena+48);
  2283   000B9E  5014               	movf	EscribeLCD_n16@decena^0,w,c
  2284   000BA0  0F30               	addlw	48
  2285   000BA2  ECA7  F00F         	call	_EscribeLCD_c
  2286                           
  2287                           ;LibLCDXC8.h: 199: EscribeLCD_c(unidad+48);
  2288   000BA6  5015               	movf	EscribeLCD_n16@unidad^0,w,c
  2289   000BA8  0F30               	addlw	48
  2290   000BAA  ECA7  F00F         	call	_EscribeLCD_c
  2291                           
  2292                           ;LibLCDXC8.h: 200: break;
  2293   000BAE  0012               	return	
  2294   000BB0                     l2413:
  2295   000BB0  0E03               	movlw	3
  2296   000BB2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2297   000BB4  0EE8               	movlw	232
  2298   000BB6  6E03               	movwf	___lwmod@divisor^0,c
  2299   000BB8  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2300   000BBC  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2301   000BC0  EC64  F00E         	call	___lwmod	;wreg free
  2302   000BC4  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2303   000BC8  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2304   000BCC  0E00               	movlw	0
  2305   000BCE  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2306   000BD0  0E64               	movlw	100
  2307   000BD2  6E08               	movwf	___lwdiv@divisor^0,c
  2308   000BD4  ECCC  F00D         	call	___lwdiv	;wreg free
  2309   000BD8  C006  F012         	movff	?___lwdiv,EscribeLCD_n16@centena
  2310   000BDC  C007  F013         	movff	?___lwdiv+1,EscribeLCD_n16@centena+1
  2311                           
  2312                           ;LibLCDXC8.h: 202: decena=(a%100)/10;
  2313   000BE0  0E00               	movlw	0
  2314   000BE2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2315   000BE4  0E64               	movlw	100
  2316   000BE6  6E03               	movwf	___lwmod@divisor^0,c
  2317   000BE8  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2318   000BEC  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2319   000BF0  EC64  F00E         	call	___lwmod	;wreg free
  2320   000BF4  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2321   000BF8  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2322   000BFC  0E00               	movlw	0
  2323   000BFE  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2324   000C00  0E0A               	movlw	10
  2325   000C02  6E08               	movwf	___lwdiv@divisor^0,c
  2326   000C04  ECCC  F00D         	call	___lwdiv	;wreg free
  2327   000C08  5006               	movf	?___lwdiv^0,w,c
  2328   000C0A  6E14               	movwf	EscribeLCD_n16@decena^0,c
  2329                           
  2330                           ;LibLCDXC8.h: 203: unidad=a%10;
  2331   000C0C  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2332   000C10  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2333   000C14  0E00               	movlw	0
  2334   000C16  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2335   000C18  0E0A               	movlw	10
  2336   000C1A  6E03               	movwf	___lwmod@divisor^0,c
  2337   000C1C  EC64  F00E         	call	___lwmod	;wreg free
  2338   000C20  5001               	movf	?___lwmod^0,w,c
  2339   000C22  6E15               	movwf	EscribeLCD_n16@unidad^0,c
  2340                           
  2341                           ;LibLCDXC8.h: 204: EscribeLCD_c(centena+48);
  2342   000C24  5012               	movf	EscribeLCD_n16@centena^0,w,c
  2343   000C26  0F30               	addlw	48
  2344   000C28  ECA7  F00F         	call	_EscribeLCD_c
  2345                           
  2346                           ;LibLCDXC8.h: 205: EscribeLCD_c(decena+48);
  2347   000C2C  5014               	movf	EscribeLCD_n16@decena^0,w,c
  2348   000C2E  0F30               	addlw	48
  2349   000C30  ECA7  F00F         	call	_EscribeLCD_c
  2350                           
  2351                           ;LibLCDXC8.h: 206: EscribeLCD_c(unidad+48);
  2352   000C34  5015               	movf	EscribeLCD_n16@unidad^0,w,c
  2353   000C36  0F30               	addlw	48
  2354   000C38  ECA7  F00F         	call	_EscribeLCD_c
  2355                           
  2356                           ;LibLCDXC8.h: 207: break;
  2357   000C3C  0012               	return	
  2358   000C3E                     l2415:
  2359   000C3E  0E27               	movlw	39
  2360   000C40  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2361   000C42  0E10               	movlw	16
  2362   000C44  6E03               	movwf	___lwmod@divisor^0,c
  2363   000C46  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2364   000C4A  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2365   000C4E  EC64  F00E         	call	___lwmod	;wreg free
  2366   000C52  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2367   000C56  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2368   000C5A  0E03               	movlw	3
  2369   000C5C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2370   000C5E  0EE8               	movlw	232
  2371   000C60  6E08               	movwf	___lwdiv@divisor^0,c
  2372   000C62  ECCC  F00D         	call	___lwdiv	;wreg free
  2373   000C66  C006  F010         	movff	?___lwdiv,EscribeLCD_n16@millar
  2374   000C6A  C007  F011         	movff	?___lwdiv+1,EscribeLCD_n16@millar+1
  2375                           
  2376                           ;LibLCDXC8.h: 209: centena=(a%1000)/100;
  2377   000C6E  0E03               	movlw	3
  2378   000C70  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2379   000C72  0EE8               	movlw	232
  2380   000C74  6E03               	movwf	___lwmod@divisor^0,c
  2381   000C76  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2382   000C7A  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2383   000C7E  EC64  F00E         	call	___lwmod	;wreg free
  2384   000C82  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2385   000C86  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2386   000C8A  0E00               	movlw	0
  2387   000C8C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2388   000C8E  0E64               	movlw	100
  2389   000C90  6E08               	movwf	___lwdiv@divisor^0,c
  2390   000C92  ECCC  F00D         	call	___lwdiv	;wreg free
  2391   000C96  C006  F012         	movff	?___lwdiv,EscribeLCD_n16@centena
  2392   000C9A  C007  F013         	movff	?___lwdiv+1,EscribeLCD_n16@centena+1
  2393                           
  2394                           ;LibLCDXC8.h: 210: decena=(a%100)/10;
  2395   000C9E  0E00               	movlw	0
  2396   000CA0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2397   000CA2  0E64               	movlw	100
  2398   000CA4  6E03               	movwf	___lwmod@divisor^0,c
  2399   000CA6  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2400   000CAA  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2401   000CAE  EC64  F00E         	call	___lwmod	;wreg free
  2402   000CB2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2403   000CB6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2404   000CBA  0E00               	movlw	0
  2405   000CBC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2406   000CBE  0E0A               	movlw	10
  2407   000CC0  6E08               	movwf	___lwdiv@divisor^0,c
  2408   000CC2  ECCC  F00D         	call	___lwdiv	;wreg free
  2409   000CC6  5006               	movf	?___lwdiv^0,w,c
  2410   000CC8  6E14               	movwf	EscribeLCD_n16@decena^0,c
  2411                           
  2412                           ;LibLCDXC8.h: 211: unidad=a%10;
  2413   000CCA  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2414   000CCE  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2415   000CD2  0E00               	movlw	0
  2416   000CD4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2417   000CD6  0E0A               	movlw	10
  2418   000CD8  6E03               	movwf	___lwmod@divisor^0,c
  2419   000CDA  EC64  F00E         	call	___lwmod	;wreg free
  2420   000CDE  5001               	movf	?___lwmod^0,w,c
  2421   000CE0  6E15               	movwf	EscribeLCD_n16@unidad^0,c
  2422                           
  2423                           ;LibLCDXC8.h: 212: EscribeLCD_c(millar+48);
  2424   000CE2  5010               	movf	EscribeLCD_n16@millar^0,w,c
  2425   000CE4  0F30               	addlw	48
  2426   000CE6  ECA7  F00F         	call	_EscribeLCD_c
  2427                           
  2428                           ;LibLCDXC8.h: 213: EscribeLCD_c(centena+48);
  2429   000CEA  5012               	movf	EscribeLCD_n16@centena^0,w,c
  2430   000CEC  0F30               	addlw	48
  2431   000CEE  ECA7  F00F         	call	_EscribeLCD_c
  2432                           
  2433                           ;LibLCDXC8.h: 214: EscribeLCD_c(decena+48);
  2434   000CF2  5014               	movf	EscribeLCD_n16@decena^0,w,c
  2435   000CF4  0F30               	addlw	48
  2436   000CF6  ECA7  F00F         	call	_EscribeLCD_c
  2437                           
  2438                           ;LibLCDXC8.h: 215: EscribeLCD_c(unidad+48);
  2439   000CFA  5015               	movf	EscribeLCD_n16@unidad^0,w,c
  2440   000CFC  0F30               	addlw	48
  2441   000CFE  ECA7  F00F         	call	_EscribeLCD_c
  2442                           
  2443                           ;LibLCDXC8.h: 216: break;
  2444   000D02  0012               	return	
  2445   000D04                     l2417:
  2446   000D04  C00D  F006         	movff	EscribeLCD_n16@a,___lwdiv@dividend
  2447   000D08  C00E  F007         	movff	EscribeLCD_n16@a+1,___lwdiv@dividend+1
  2448   000D0C  0E27               	movlw	39
  2449   000D0E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2450   000D10  0E10               	movlw	16
  2451   000D12  6E08               	movwf	___lwdiv@divisor^0,c
  2452   000D14  ECCC  F00D         	call	___lwdiv	;wreg free
  2453   000D18  5006               	movf	?___lwdiv^0,w,c
  2454   000D1A  0F30               	addlw	48
  2455   000D1C  ECA7  F00F         	call	_EscribeLCD_c
  2456                           
  2457                           ;LibLCDXC8.h: 218: millar=(a%10000)/1000;
  2458   000D20  0E27               	movlw	39
  2459   000D22  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2460   000D24  0E10               	movlw	16
  2461   000D26  6E03               	movwf	___lwmod@divisor^0,c
  2462   000D28  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2463   000D2C  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2464   000D30  EC64  F00E         	call	___lwmod	;wreg free
  2465   000D34  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2466   000D38  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2467   000D3C  0E03               	movlw	3
  2468   000D3E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2469   000D40  0EE8               	movlw	232
  2470   000D42  6E08               	movwf	___lwdiv@divisor^0,c
  2471   000D44  ECCC  F00D         	call	___lwdiv	;wreg free
  2472   000D48  C006  F010         	movff	?___lwdiv,EscribeLCD_n16@millar
  2473   000D4C  C007  F011         	movff	?___lwdiv+1,EscribeLCD_n16@millar+1
  2474                           
  2475                           ;LibLCDXC8.h: 219: centena=(a%1000)/100;
  2476   000D50  0E03               	movlw	3
  2477   000D52  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2478   000D54  0EE8               	movlw	232
  2479   000D56  6E03               	movwf	___lwmod@divisor^0,c
  2480   000D58  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2481   000D5C  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2482   000D60  EC64  F00E         	call	___lwmod	;wreg free
  2483   000D64  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2484   000D68  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2485   000D6C  0E00               	movlw	0
  2486   000D6E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2487   000D70  0E64               	movlw	100
  2488   000D72  6E08               	movwf	___lwdiv@divisor^0,c
  2489   000D74  ECCC  F00D         	call	___lwdiv	;wreg free
  2490   000D78  C006  F012         	movff	?___lwdiv,EscribeLCD_n16@centena
  2491   000D7C  C007  F013         	movff	?___lwdiv+1,EscribeLCD_n16@centena+1
  2492                           
  2493                           ;LibLCDXC8.h: 220: decena=(a%100)/10;
  2494   000D80  0E00               	movlw	0
  2495   000D82  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2496   000D84  0E64               	movlw	100
  2497   000D86  6E03               	movwf	___lwmod@divisor^0,c
  2498   000D88  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2499   000D8C  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2500   000D90  EC64  F00E         	call	___lwmod	;wreg free
  2501   000D94  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2502   000D98  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2503   000D9C  0E00               	movlw	0
  2504   000D9E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2505   000DA0  0E0A               	movlw	10
  2506   000DA2  6E08               	movwf	___lwdiv@divisor^0,c
  2507   000DA4  ECCC  F00D         	call	___lwdiv	;wreg free
  2508   000DA8  5006               	movf	?___lwdiv^0,w,c
  2509   000DAA  6E14               	movwf	EscribeLCD_n16@decena^0,c
  2510                           
  2511                           ;LibLCDXC8.h: 221: unidad=a%10;
  2512   000DAC  C00D  F001         	movff	EscribeLCD_n16@a,___lwmod@dividend
  2513   000DB0  C00E  F002         	movff	EscribeLCD_n16@a+1,___lwmod@dividend+1
  2514   000DB4  0E00               	movlw	0
  2515   000DB6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2516   000DB8  0E0A               	movlw	10
  2517   000DBA  6E03               	movwf	___lwmod@divisor^0,c
  2518   000DBC  EC64  F00E         	call	___lwmod	;wreg free
  2519   000DC0  5001               	movf	?___lwmod^0,w,c
  2520   000DC2  6E15               	movwf	EscribeLCD_n16@unidad^0,c
  2521                           
  2522                           ;LibLCDXC8.h: 222: EscribeLCD_c(millar+48);
  2523   000DC4  5010               	movf	EscribeLCD_n16@millar^0,w,c
  2524   000DC6  0F30               	addlw	48
  2525   000DC8  ECA7  F00F         	call	_EscribeLCD_c
  2526                           
  2527                           ;LibLCDXC8.h: 223: EscribeLCD_c(centena+48);
  2528   000DCC  5012               	movf	EscribeLCD_n16@centena^0,w,c
  2529   000DCE  0F30               	addlw	48
  2530   000DD0  ECA7  F00F         	call	_EscribeLCD_c
  2531                           
  2532                           ;LibLCDXC8.h: 224: EscribeLCD_c(decena+48);
  2533   000DD4  5014               	movf	EscribeLCD_n16@decena^0,w,c
  2534   000DD6  0F30               	addlw	48
  2535   000DD8  ECA7  F00F         	call	_EscribeLCD_c
  2536                           
  2537                           ;LibLCDXC8.h: 225: EscribeLCD_c(unidad+48);
  2538   000DDC  5015               	movf	EscribeLCD_n16@unidad^0,w,c
  2539   000DDE  0F30               	addlw	48
  2540   000DE0  ECA7  F00F         	call	_EscribeLCD_c
  2541                           
  2542                           ;LibLCDXC8.h: 226: break;
  2543   000DE4  0012               	return	
  2544   000DE6                     l2421:
  2545   000DE6  500F               	movf	EscribeLCD_n16@b^0,w,c
  2546                           
  2547                           ; Switch size 1, requested type "simple"
  2548                           ; Number of cases is 5, Range of values is 1 to 5
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte           16     9 (average)
  2552                           ;	Chosen strategy is simple_byte
  2553   000DE8  0A01               	xorlw	1	; case 1
  2554   000DEA  B4D8               	btfsc	status,2,c
  2555   000DEC  D6A5               	goto	l2409
  2556   000DEE  0A03               	xorlw	3	; case 2
  2557   000DF0  B4D8               	btfsc	status,2,c
  2558   000DF2  D6B3               	goto	l2411
  2559   000DF4  0A01               	xorlw	1	; case 3
  2560   000DF6  B4D8               	btfsc	status,2,c
  2561   000DF8  D6DB               	goto	l2413
  2562   000DFA  0A07               	xorlw	7	; case 4
  2563   000DFC  B4D8               	btfsc	status,2,c
  2564   000DFE  D71F               	goto	l2415
  2565   000E00  0A01               	xorlw	1	; case 5
  2566   000E02  A4D8               	btfss	status,2,c
  2567   000E04  0012               	return	
  2568   000E06  D77E               	goto	l2417
  2569   000E08                     __end_of_EscribeLCD_n16:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function ___lwmod *****************
  2573 ;; Defined at:
  2574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  dividend        2    0[COMRAM] unsigned int 
  2577 ;;  divisor         2    2[COMRAM] unsigned int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  counter         1    4[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    0[COMRAM] unsigned int 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         4       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        5 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_EscribeLCD_n16
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text10
  2604   001CC8                     __ptext10:
  2605                           	callstack 0
  2606   001CC8                     ___lwmod:
  2607                           	callstack 26
  2608                           
  2609                           ;incstack = 0
  2610   001CC8  5003               	movf	___lwmod@divisor^0,w,c
  2611   001CCA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2612   001CCC  B4D8               	btfsc	status,2,c
  2613   001CCE  D018               	goto	l883
  2614   001CD0  0E01               	movlw	1
  2615   001CD2  6E05               	movwf	___lwmod@counter^0,c
  2616   001CD4  D004               	goto	l2345
  2617   001CD6                     l2343:
  2618   001CD6  90D8               	bcf	status,0,c
  2619   001CD8  3603               	rlcf	___lwmod@divisor^0,f,c
  2620   001CDA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2621   001CDC  2A05               	incf	___lwmod@counter^0,f,c
  2622   001CDE                     l2345:
  2623   001CDE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2624   001CE0  D7FA               	goto	l2343
  2625   001CE2                     u1690:
  2626   001CE2  5003               	movf	___lwmod@divisor^0,w,c
  2627   001CE4  5C01               	subwf	___lwmod@dividend^0,w,c
  2628   001CE6  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2629   001CE8  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2630   001CEA  A0D8               	btfss	status,0,c
  2631   001CEC  D004               	goto	l2351
  2632   001CEE  5003               	movf	___lwmod@divisor^0,w,c
  2633   001CF0  5E01               	subwf	___lwmod@dividend^0,f,c
  2634   001CF2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2635   001CF4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2636   001CF6                     l2351:
  2637   001CF6  90D8               	bcf	status,0,c
  2638   001CF8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2639   001CFA  3203               	rrcf	___lwmod@divisor^0,f,c
  2640   001CFC  2E05               	decfsz	___lwmod@counter^0,f,c
  2641   001CFE  D7F1               	goto	u1690
  2642   001D00                     l883:
  2643   001D00  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2644   001D04  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2645   001D08  0012               	return		;funcret
  2646   001D0A                     __end_of___lwmod:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function ___lwdiv *****************
  2650 ;; Defined at:
  2651 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  dividend        2    5[COMRAM] unsigned int 
  2654 ;;  divisor         2    7[COMRAM] unsigned int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  quotient        2    9[COMRAM] unsigned int 
  2657 ;;  counter         1   11[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2    5[COMRAM] unsigned int 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2667 ;;      Params:         4       0       0       0       0       0       0       0       0
  2668 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2670 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2671 ;;Total ram usage:        7 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_EscribeLCD_n16
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text11
  2682   001B98                     __ptext11:
  2683                           	callstack 0
  2684   001B98                     ___lwdiv:
  2685                           	callstack 26
  2686                           
  2687                           ;incstack = 0
  2688   001B98  0E00               	movlw	0
  2689   001B9A  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  2690   001B9C  0E00               	movlw	0
  2691   001B9E  6E0A               	movwf	___lwdiv@quotient^0,c
  2692   001BA0  5008               	movf	___lwdiv@divisor^0,w,c
  2693   001BA2  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2694   001BA4  B4D8               	btfsc	status,2,c
  2695   001BA6  D01C               	goto	l873
  2696   001BA8  0E01               	movlw	1
  2697   001BAA  6E0C               	movwf	___lwdiv@counter^0,c
  2698   001BAC  D004               	goto	l2325
  2699   001BAE                     l2323:
  2700   001BAE  90D8               	bcf	status,0,c
  2701   001BB0  3608               	rlcf	___lwdiv@divisor^0,f,c
  2702   001BB2  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2703   001BB4  2A0C               	incf	___lwdiv@counter^0,f,c
  2704   001BB6                     l2325:
  2705   001BB6  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  2706   001BB8  D7FA               	goto	l2323
  2707   001BBA                     u1660:
  2708   001BBA  90D8               	bcf	status,0,c
  2709   001BBC  360A               	rlcf	___lwdiv@quotient^0,f,c
  2710   001BBE  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2711   001BC0  5008               	movf	___lwdiv@divisor^0,w,c
  2712   001BC2  5C06               	subwf	___lwdiv@dividend^0,w,c
  2713   001BC4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2714   001BC6  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2715   001BC8  A0D8               	btfss	status,0,c
  2716   001BCA  D005               	goto	l2335
  2717   001BCC  5008               	movf	___lwdiv@divisor^0,w,c
  2718   001BCE  5E06               	subwf	___lwdiv@dividend^0,f,c
  2719   001BD0  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2720   001BD2  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2721   001BD4  800A               	bsf	___lwdiv@quotient^0,0,c
  2722   001BD6                     l2335:
  2723   001BD6  90D8               	bcf	status,0,c
  2724   001BD8  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2725   001BDA  3208               	rrcf	___lwdiv@divisor^0,f,c
  2726   001BDC  2E0C               	decfsz	___lwdiv@counter^0,f,c
  2727   001BDE  D7ED               	goto	u1660
  2728   001BE0                     l873:
  2729   001BE0  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  2730   001BE4  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2731   001BE8  0012               	return		;funcret
  2732   001BEA                     __end_of___lwdiv:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _EscribeLCD_c *****************
  2736 ;; Defined at:
  2737 ;;		line 137 in file "LibLCDXC8.h"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  a               1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  a               1    4[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 3
  2758 ;; This function calls:
  2759 ;;		_EnviaDato
  2760 ;;		_HabilitaLCD
  2761 ;;		_RetardoLCD
  2762 ;; This function is called by:
  2763 ;;		_EscribeLCD_n16
  2764 ;;		_MensajeLCD_Var
  2765 ;;		_Imprimir
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text12
  2770   001F4E                     __ptext12:
  2771                           	callstack 0
  2772   001F4E                     _EscribeLCD_c:
  2773                           	callstack 24
  2774                           
  2775                           ;incstack = 0
  2776                           ;EscribeLCD_c@a stored from wreg
  2777   001F4E  6E05               	movwf	EscribeLCD_c@a^0,c
  2778                           
  2779                           ;LibLCDXC8.h: 141: LATD0=1;
  2780   001F50  808C               	bsf	3980,0,c	;volatile
  2781                           
  2782                           ;LibLCDXC8.h: 142: EnviaDato(a);
  2783   001F52  5005               	movf	EscribeLCD_c@a^0,w,c
  2784   001F54  EC41  F00E         	call	_EnviaDato
  2785                           
  2786                           ;LibLCDXC8.h: 143: HabilitaLCD();
  2787   001F58  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  2788                           
  2789                           ;LibLCDXC8.h: 144: RetardoLCD(4);
  2790   001F5C  0E04               	movlw	4
  2791   001F5E  EC6B  F00D         	call	_RetardoLCD
  2792   001F62  0012               	return		;funcret
  2793   001F64                     __end_of_EscribeLCD_c:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _ComandoLCD *****************
  2797 ;; Defined at:
  2798 ;;		line 124 in file "LibLCDXC8.h"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  a               1    wreg     unsigned char 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  a               1    4[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 4
  2819 ;; This function calls:
  2820 ;;		_BorraLCD
  2821 ;;		_CursorAInicio
  2822 ;;		_EnviaDato
  2823 ;;		_HabilitaLCD
  2824 ;;		_RetardoLCD
  2825 ;; This function is called by:
  2826 ;;		_Imprimir
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text13
  2831   001DEE                     __ptext13:
  2832                           	callstack 0
  2833   001DEE                     _ComandoLCD:
  2834                           	callstack 24
  2835                           
  2836                           ;incstack = 0
  2837                           ;ComandoLCD@a stored from wreg
  2838   001DEE  6E05               	movwf	ComandoLCD@a^0,c
  2839                           
  2840                           ;LibLCDXC8.h: 126: LATD0=0;
  2841   001DF0  908C               	bcf	3980,0,c	;volatile
  2842                           
  2843                           ;LibLCDXC8.h: 127: if(a==1)
  2844   001DF2  0405               	decf	ComandoLCD@a^0,w,c
  2845   001DF4  A4D8               	btfss	status,2,c
  2846   001DF6  D003               	goto	l2361
  2847                           
  2848                           ;LibLCDXC8.h: 128: BorraLCD();
  2849   001DF8  ECB2  F00F         	call	_BorraLCD	;wreg free
  2850   001DFC  0012               	return	
  2851   001DFE                     l2361:
  2852                           
  2853                           ;LibLCDXC8.h: 129: else if((a&0b11111110)==2)
  2854   001DFE  5005               	movf	ComandoLCD@a^0,w,c
  2855   001E00  0BFE               	andlw	254
  2856   001E02  0A02               	xorlw	2
  2857   001E04  A4D8               	btfss	status,2,c
  2858   001E06  D003               	goto	l2365
  2859                           
  2860                           ;LibLCDXC8.h: 130: CursorAInicio();
  2861   001E08  ECD9  F00F         	call	_CursorAInicio	;wreg free
  2862   001E0C  0012               	return	
  2863   001E0E                     l2365:
  2864                           
  2865                           ;LibLCDXC8.h: 131: else{;LibLCDXC8.h: 132: EnviaDato(a);
  2866   001E0E  5005               	movf	ComandoLCD@a^0,w,c
  2867   001E10  EC41  F00E         	call	_EnviaDato
  2868                           
  2869                           ;LibLCDXC8.h: 133: HabilitaLCD();
  2870   001E14  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  2871                           
  2872                           ;LibLCDXC8.h: 134: RetardoLCD(4);
  2873   001E18  0E04               	movlw	4
  2874   001E1A  EC6B  F00D         	call	_RetardoLCD
  2875   001E1E  0012               	return		;funcret
  2876   001E20                     __end_of_ComandoLCD:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _CursorAInicio *****************
  2880 ;; Defined at:
  2881 ;;		line 120 in file "LibLCDXC8.h"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_ComandoLCD
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text14
  2910   001FB2                     __ptext14:
  2911                           	callstack 0
  2912   001FB2                     _CursorAInicio:
  2913                           	callstack 26
  2914                           
  2915                           ;incstack = 0
  2916   001FB2  0012               	return		;funcret
  2917   001FB4                     __end_of_CursorAInicio:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _EnviarMedicion *****************
  2921 ;; Defined at:
  2922 ;;		line 191 in file "Laboratorio_5.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  Temperatura     3   45[COMRAM] float 
  2925 ;;  Humedad         1   48[COMRAM] unsigned char 
  2926 ;;  TempUnity       1   49[COMRAM] unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  decimal         3   50[COMRAM] float 
  2929 ;;  ValorF          2   55[COMRAM] int 
  2930 ;;  Decimales       2   53[COMRAM] int 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2940 ;;      Params:         5       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:       12 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 4
  2947 ;; This function calls:
  2948 ;;		_Transmitir
  2949 ;;		___awdiv
  2950 ;;		___awmod
  2951 ;;		___awtoft
  2952 ;;		___ftmul
  2953 ;;		___ftsub
  2954 ;;		___fttol
  2955 ;; This function is called by:
  2956 ;;		_Subrutina_Main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text15
  2961   000E08                     __ptext15:
  2962                           	callstack 0
  2963   000E08                     _EnviarMedicion:
  2964                           	callstack 25
  2965                           
  2966                           ;Laboratorio_5.c: 193: int ValorF = (int)(Temperatura);
  2967                           
  2968                           ;incstack = 0
  2969   000E08  C02E  F01C         	movff	EnviarMedicion@Temperatura,___fttol@f1
  2970   000E0C  C02F  F01D         	movff	EnviarMedicion@Temperatura+1,___fttol@f1+1
  2971   000E10  C030  F01E         	movff	EnviarMedicion@Temperatura+2,___fttol@f1+2
  2972   000E14  EC56  F00B         	call	___fttol	;wreg free
  2973   000E18  C01C  F038         	movff	?___fttol,EnviarMedicion@ValorF
  2974   000E1C  C01D  F039         	movff	?___fttol+1,EnviarMedicion@ValorF+1
  2975                           
  2976                           ;Laboratorio_5.c: 194: float decimal = Temperatura - ValorF;
  2977   000E20  C02E  F028         	movff	EnviarMedicion@Temperatura,___ftsub@f1
  2978   000E24  C02F  F029         	movff	EnviarMedicion@Temperatura+1,___ftsub@f1+1
  2979   000E28  C030  F02A         	movff	EnviarMedicion@Temperatura+2,___ftsub@f1+2
  2980   000E2C  C038  F009         	movff	EnviarMedicion@ValorF,___awtoft@c
  2981   000E30  C039  F00A         	movff	EnviarMedicion@ValorF+1,___awtoft@c+1
  2982   000E34  ECC2  F00E         	call	___awtoft	;wreg free
  2983   000E38  C009  F02B         	movff	?___awtoft,___ftsub@f2
  2984   000E3C  C00A  F02C         	movff	?___awtoft+1,___ftsub@f2+1
  2985   000E40  C00B  F02D         	movff	?___awtoft+2,___ftsub@f2+2
  2986   000E44  EC85  F00E         	call	___ftsub	;wreg free
  2987   000E48  C028  F033         	movff	?___ftsub,EnviarMedicion@decimal
  2988   000E4C  C029  F034         	movff	?___ftsub+1,EnviarMedicion@decimal+1
  2989   000E50  C02A  F035         	movff	?___ftsub+2,EnviarMedicion@decimal+2
  2990                           
  2991                           ;Laboratorio_5.c: 195: int Decimales = (int)(decimal*100);
  2992   000E54  0E00               	movlw	0
  2993   000E56  6E10               	movwf	___ftmul@f2^0,c
  2994   000E58  0EC8               	movlw	200
  2995   000E5A  6E11               	movwf	(___ftmul@f2+1)^0,c
  2996   000E5C  0E42               	movlw	66
  2997   000E5E  6E12               	movwf	(___ftmul@f2+2)^0,c
  2998   000E60  C033  F00D         	movff	EnviarMedicion@decimal,___ftmul@f1
  2999   000E64  C034  F00E         	movff	EnviarMedicion@decimal+1,___ftmul@f1+1
  3000   000E68  C035  F00F         	movff	EnviarMedicion@decimal+2,___ftmul@f1+2
  3001   000E6C  EC69  F00A         	call	___ftmul	;wreg free
  3002   000E70  C00D  F01C         	movff	?___ftmul,___fttol@f1
  3003   000E74  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  3004   000E78  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  3005   000E7C  EC56  F00B         	call	___fttol	;wreg free
  3006   000E80  C01C  F036         	movff	?___fttol,EnviarMedicion@Decimales
  3007   000E84  C01D  F037         	movff	?___fttol+1,EnviarMedicion@Decimales+1
  3008                           
  3009                           ;Laboratorio_5.c: 197: Transmitir('T');
  3010   000E88  0E54               	movlw	84
  3011   000E8A  ECD2  F00F         	call	_Transmitir
  3012                           
  3013                           ;Laboratorio_5.c: 198: Transmitir('e');
  3014   000E8E  0E65               	movlw	101
  3015   000E90  ECD2  F00F         	call	_Transmitir
  3016                           
  3017                           ;Laboratorio_5.c: 199: Transmitir('m');
  3018   000E94  0E6D               	movlw	109
  3019   000E96  ECD2  F00F         	call	_Transmitir
  3020                           
  3021                           ;Laboratorio_5.c: 200: Transmitir('p');
  3022   000E9A  0E70               	movlw	112
  3023   000E9C  ECD2  F00F         	call	_Transmitir
  3024                           
  3025                           ;Laboratorio_5.c: 201: Transmitir(':');
  3026   000EA0  0E3A               	movlw	58
  3027   000EA2  ECD2  F00F         	call	_Transmitir
  3028                           
  3029                           ;Laboratorio_5.c: 202: Transmitir(' ');
  3030   000EA6  0E20               	movlw	32
  3031   000EA8  ECD2  F00F         	call	_Transmitir
  3032                           
  3033                           ;Laboratorio_5.c: 204: if (ValorF < 10) Transmitir(ValorF + 48);
  3034   000EAC  BE39               	btfsc	(EnviarMedicion@ValorF+1)^0,7,c
  3035   000EAE  D006               	goto	u2060
  3036   000EB0  5039               	movf	(EnviarMedicion@ValorF+1)^0,w,c
  3037   000EB2  E109               	bnz	l2669
  3038   000EB4  0E0A               	movlw	10
  3039   000EB6  5C38               	subwf	EnviarMedicion@ValorF^0,w,c
  3040   000EB8  B0D8               	btfsc	status,0,c
  3041   000EBA  D005               	goto	l2669
  3042   000EBC                     u2060:
  3043   000EBC  5038               	movf	EnviarMedicion@ValorF^0,w,c
  3044   000EBE  0F30               	addlw	48
  3045   000EC0  ECD2  F00F         	call	_Transmitir
  3046   000EC4  D059               	goto	l2675
  3047   000EC6                     l2669:
  3048                           
  3049                           ;Laboratorio_5.c: 205: else if (ValorF < 100){
  3050   000EC6  BE39               	btfsc	(EnviarMedicion@ValorF+1)^0,7,c
  3051   000EC8  D006               	goto	u2070
  3052   000ECA  5039               	movf	(EnviarMedicion@ValorF+1)^0,w,c
  3053   000ECC  E121               	bnz	l2673
  3054   000ECE  0E64               	movlw	100
  3055   000ED0  5C38               	subwf	EnviarMedicion@ValorF^0,w,c
  3056   000ED2  B0D8               	btfsc	status,0,c
  3057   000ED4  D01D               	goto	l2673
  3058   000ED6                     u2070:
  3059                           
  3060                           ;Laboratorio_5.c: 206: Transmitir(ValorF/10 + 48);
  3061   000ED6  C038  F007         	movff	EnviarMedicion@ValorF,___awdiv@dividend
  3062   000EDA  C039  F008         	movff	EnviarMedicion@ValorF+1,___awdiv@dividend+1
  3063   000EDE  0E00               	movlw	0
  3064   000EE0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3065   000EE2  0E0A               	movlw	10
  3066   000EE4  6E09               	movwf	___awdiv@divisor^0,c
  3067   000EE6  ECB7  F00C         	call	___awdiv	;wreg free
  3068   000EEA  5007               	movf	?___awdiv^0,w,c
  3069   000EEC  0F30               	addlw	48
  3070   000EEE  ECD2  F00F         	call	_Transmitir
  3071                           
  3072                           ;Laboratorio_5.c: 207: Transmitir(ValorF%10 + 48);
  3073   000EF2  C038  F001         	movff	EnviarMedicion@ValorF,___awmod@dividend
  3074   000EF6  C039  F002         	movff	EnviarMedicion@ValorF+1,___awmod@dividend+1
  3075   000EFA  0E00               	movlw	0
  3076   000EFC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3077   000EFE  0E0A               	movlw	10
  3078   000F00  6E03               	movwf	___awmod@divisor^0,c
  3079   000F02  EC33  F00D         	call	___awmod	;wreg free
  3080   000F06  5001               	movf	?___awmod^0,w,c
  3081   000F08  0F30               	addlw	48
  3082   000F0A  ECD2  F00F         	call	_Transmitir
  3083                           
  3084                           ;Laboratorio_5.c: 208: }else{
  3085   000F0E  D034               	goto	l2675
  3086   000F10                     l2673:
  3087                           
  3088                           ;Laboratorio_5.c: 209: Transmitir(ValorF/100 + 48);
  3089   000F10  C038  F007         	movff	EnviarMedicion@ValorF,___awdiv@dividend
  3090   000F14  C039  F008         	movff	EnviarMedicion@ValorF+1,___awdiv@dividend+1
  3091   000F18  0E00               	movlw	0
  3092   000F1A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3093   000F1C  0E64               	movlw	100
  3094   000F1E  6E09               	movwf	___awdiv@divisor^0,c
  3095   000F20  ECB7  F00C         	call	___awdiv	;wreg free
  3096   000F24  5007               	movf	?___awdiv^0,w,c
  3097   000F26  0F30               	addlw	48
  3098   000F28  ECD2  F00F         	call	_Transmitir
  3099                           
  3100                           ;Laboratorio_5.c: 210: Transmitir((ValorF%100)/10 + 48);
  3101   000F2C  0E00               	movlw	0
  3102   000F2E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3103   000F30  0E64               	movlw	100
  3104   000F32  6E03               	movwf	___awmod@divisor^0,c
  3105   000F34  C038  F001         	movff	EnviarMedicion@ValorF,___awmod@dividend
  3106   000F38  C039  F002         	movff	EnviarMedicion@ValorF+1,___awmod@dividend+1
  3107   000F3C  EC33  F00D         	call	___awmod	;wreg free
  3108   000F40  C001  F007         	movff	?___awmod,___awdiv@dividend
  3109   000F44  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3110   000F48  0E00               	movlw	0
  3111   000F4A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3112   000F4C  0E0A               	movlw	10
  3113   000F4E  6E09               	movwf	___awdiv@divisor^0,c
  3114   000F50  ECB7  F00C         	call	___awdiv	;wreg free
  3115   000F54  5007               	movf	?___awdiv^0,w,c
  3116   000F56  0F30               	addlw	48
  3117   000F58  ECD2  F00F         	call	_Transmitir
  3118                           
  3119                           ;Laboratorio_5.c: 211: Transmitir(ValorF%10 + 48);
  3120   000F5C  C038  F001         	movff	EnviarMedicion@ValorF,___awmod@dividend
  3121   000F60  C039  F002         	movff	EnviarMedicion@ValorF+1,___awmod@dividend+1
  3122   000F64  0E00               	movlw	0
  3123   000F66  6E04               	movwf	(___awmod@divisor+1)^0,c
  3124   000F68  0E0A               	movlw	10
  3125   000F6A  6E03               	movwf	___awmod@divisor^0,c
  3126   000F6C  EC33  F00D         	call	___awmod	;wreg free
  3127   000F70  5001               	movf	?___awmod^0,w,c
  3128   000F72  0F30               	addlw	48
  3129   000F74  ECD2  F00F         	call	_Transmitir
  3130   000F78                     l2675:
  3131                           
  3132                           ;Laboratorio_5.c: 212: };Laboratorio_5.c: 213: if (Decimales != 0){
  3133   000F78  5036               	movf	EnviarMedicion@Decimales^0,w,c
  3134   000F7A  1037               	iorwf	(EnviarMedicion@Decimales+1)^0,w,c
  3135   000F7C  B4D8               	btfsc	status,2,c
  3136   000F7E  D03C               	goto	l2685
  3137                           
  3138                           ;Laboratorio_5.c: 214: Transmitir('.');
  3139   000F80  0E2E               	movlw	46
  3140   000F82  ECD2  F00F         	call	_Transmitir
  3141                           
  3142                           ;Laboratorio_5.c: 215: if (Decimales % 10 == 0) Transmitir((Decimales/10) + 48);
  3143   000F86  C036  F001         	movff	EnviarMedicion@Decimales,___awmod@dividend
  3144   000F8A  C037  F002         	movff	EnviarMedicion@Decimales+1,___awmod@dividend+1
  3145   000F8E  0E00               	movlw	0
  3146   000F90  6E04               	movwf	(___awmod@divisor+1)^0,c
  3147   000F92  0E0A               	movlw	10
  3148   000F94  6E03               	movwf	___awmod@divisor^0,c
  3149   000F96  EC33  F00D         	call	___awmod	;wreg free
  3150   000F9A  5001               	movf	?___awmod^0,w,c
  3151   000F9C  1002               	iorwf	(?___awmod+1)^0,w,c
  3152   000F9E  A4D8               	btfss	status,2,c
  3153   000FA0  D00F               	goto	l2683
  3154   000FA2  C036  F007         	movff	EnviarMedicion@Decimales,___awdiv@dividend
  3155   000FA6  C037  F008         	movff	EnviarMedicion@Decimales+1,___awdiv@dividend+1
  3156   000FAA  0E00               	movlw	0
  3157   000FAC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3158   000FAE  0E0A               	movlw	10
  3159   000FB0  6E09               	movwf	___awdiv@divisor^0,c
  3160   000FB2  ECB7  F00C         	call	___awdiv	;wreg free
  3161   000FB6  5007               	movf	?___awdiv^0,w,c
  3162   000FB8  0F30               	addlw	48
  3163   000FBA  ECD2  F00F         	call	_Transmitir
  3164   000FBE  D01C               	goto	l2685
  3165   000FC0                     l2683:
  3166                           
  3167                           ;Laboratorio_5.c: 216: else{;Laboratorio_5.c: 217: Transmitir((Decimales/10) + 48);
  3168   000FC0  C036  F007         	movff	EnviarMedicion@Decimales,___awdiv@dividend
  3169   000FC4  C037  F008         	movff	EnviarMedicion@Decimales+1,___awdiv@dividend+1
  3170   000FC8  0E00               	movlw	0
  3171   000FCA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3172   000FCC  0E0A               	movlw	10
  3173   000FCE  6E09               	movwf	___awdiv@divisor^0,c
  3174   000FD0  ECB7  F00C         	call	___awdiv	;wreg free
  3175   000FD4  5007               	movf	?___awdiv^0,w,c
  3176   000FD6  0F30               	addlw	48
  3177   000FD8  ECD2  F00F         	call	_Transmitir
  3178                           
  3179                           ;Laboratorio_5.c: 218: Transmitir((Decimales%10) + 48);
  3180   000FDC  C036  F001         	movff	EnviarMedicion@Decimales,___awmod@dividend
  3181   000FE0  C037  F002         	movff	EnviarMedicion@Decimales+1,___awmod@dividend+1
  3182   000FE4  0E00               	movlw	0
  3183   000FE6  6E04               	movwf	(___awmod@divisor+1)^0,c
  3184   000FE8  0E0A               	movlw	10
  3185   000FEA  6E03               	movwf	___awmod@divisor^0,c
  3186   000FEC  EC33  F00D         	call	___awmod	;wreg free
  3187   000FF0  5001               	movf	?___awmod^0,w,c
  3188   000FF2  0F30               	addlw	48
  3189   000FF4  ECD2  F00F         	call	_Transmitir
  3190   000FF8                     l2685:
  3191                           
  3192                           ;Laboratorio_5.c: 219: };Laboratorio_5.c: 220: };Laboratorio_5.c: 221: Transmitir(' ');
  3193   000FF8  0E20               	movlw	32
  3194   000FFA  ECD2  F00F         	call	_Transmitir
  3195                           
  3196                           ;Laboratorio_5.c: 222: Transmitir(TempUnity);
  3197   000FFE  5032               	movf	EnviarMedicion@TempUnity^0,w,c
  3198   001000  ECD2  F00F         	call	_Transmitir
  3199                           
  3200                           ;Laboratorio_5.c: 223: Transmitir(' ');
  3201   001004  0E20               	movlw	32
  3202   001006  ECD2  F00F         	call	_Transmitir
  3203                           
  3204                           ;Laboratorio_5.c: 224: Transmitir('\n');
  3205   00100A  0E0A               	movlw	10
  3206   00100C  ECD2  F00F         	call	_Transmitir
  3207   001010  0012               	return		;funcret
  3208   001012                     __end_of_EnviarMedicion:
  3209                           	callstack 0
  3210                           
  3211 ;; *************** function ___fttol *****************
  3212 ;; Defined at:
  3213 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  f1              3   27[COMRAM] float 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  lval            4   37[COMRAM] unsigned long 
  3218 ;;  exp1            1   41[COMRAM] unsigned char 
  3219 ;;  sign1           1   36[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  4   27[COMRAM] long 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         4       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3231 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3232 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3233 ;;Total ram usage:       15 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_EnviarMedicion
  3240 ;;		_Imprimir
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text16
  3245   0016AC                     __ptext16:
  3246                           	callstack 0
  3247   0016AC                     ___fttol:
  3248                           	callstack 27
  3249                           
  3250                           ;incstack = 0
  3251   0016AC  C01E  F020         	movff	___fttol@f1+2,??___fttol
  3252   0016B0  6A21               	clrf	(??___fttol+1)^0,c
  3253   0016B2  6A22               	clrf	(??___fttol+2)^0,c
  3254   0016B4  341D               	rlcf	(___fttol@f1+1)^0,w,c
  3255   0016B6  3620               	rlcf	??___fttol^0,f,c
  3256   0016B8  E301               	bnc	u1981
  3257   0016BA  8021               	bsf	(??___fttol+1)^0,0,c
  3258   0016BC                     u1981:
  3259   0016BC  5020               	movf	??___fttol^0,w,c
  3260   0016BE  6E2A               	movwf	___fttol@exp1^0,c
  3261   0016C0  502A               	movf	___fttol@exp1^0,w,c
  3262   0016C2  A4D8               	btfss	status,2,c
  3263   0016C4  D009               	goto	l2611
  3264   0016C6                     u1990:
  3265   0016C6  0E00               	movlw	0
  3266   0016C8  6E1C               	movwf	?___fttol^0,c
  3267   0016CA  0E00               	movlw	0
  3268   0016CC  6E1D               	movwf	(?___fttol+1)^0,c
  3269   0016CE  0E00               	movlw	0
  3270   0016D0  6E1E               	movwf	(?___fttol+2)^0,c
  3271   0016D2  0E00               	movlw	0
  3272   0016D4  6E1F               	movwf	(?___fttol+3)^0,c
  3273   0016D6  0012               	return	
  3274   0016D8                     l2611:
  3275   0016D8  0E17               	movlw	23
  3276   0016DA  6E20               	movwf	??___fttol^0,c
  3277   0016DC  C01C  F021         	movff	___fttol@f1,??___fttol+1
  3278   0016E0  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  3279   0016E4  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  3280   0016E8  2820               	incf	??___fttol^0,w,c
  3281   0016EA  6E24               	movwf	(??___fttol+4)^0,c
  3282   0016EC  D004               	goto	u2000
  3283   0016EE                     u2005:
  3284   0016EE  90D8               	bcf	status,0,c
  3285   0016F0  3223               	rrcf	(??___fttol+3)^0,f,c
  3286   0016F2  3222               	rrcf	(??___fttol+2)^0,f,c
  3287   0016F4  3221               	rrcf	(??___fttol+1)^0,f,c
  3288   0016F6                     u2000:
  3289   0016F6  2E24               	decfsz	(??___fttol+4)^0,f,c
  3290   0016F8  D7FA               	goto	u2005
  3291   0016FA  5021               	movf	(??___fttol+1)^0,w,c
  3292   0016FC  6E25               	movwf	___fttol@sign1^0,c
  3293   0016FE  8E1D               	bsf	(___fttol@f1+1)^0,7,c
  3294   001700  0EFF               	movlw	255
  3295   001702  161C               	andwf	___fttol@f1^0,f,c
  3296   001704  0EFF               	movlw	255
  3297   001706  161D               	andwf	(___fttol@f1+1)^0,f,c
  3298   001708  0E00               	movlw	0
  3299   00170A  161E               	andwf	(___fttol@f1+2)^0,f,c
  3300   00170C  501C               	movf	___fttol@f1^0,w,c
  3301   00170E  6E26               	movwf	___fttol@lval^0,c
  3302   001710  501D               	movf	(___fttol@f1+1)^0,w,c
  3303   001712  6E27               	movwf	(___fttol@lval+1)^0,c
  3304   001714  501E               	movf	(___fttol@f1+2)^0,w,c
  3305   001716  6E28               	movwf	(___fttol@lval+2)^0,c
  3306   001718  6A29               	clrf	(___fttol@lval+3)^0,c
  3307   00171A  0E8E               	movlw	142
  3308   00171C  5E2A               	subwf	___fttol@exp1^0,f,c
  3309   00171E  AE2A               	btfss	___fttol@exp1^0,7,c
  3310   001720  D00D               	goto	l2633
  3311   001722  502A               	movf	___fttol@exp1^0,w,c
  3312   001724  0A80               	xorlw	128
  3313   001726  0F8F               	addlw	143
  3314   001728  A0D8               	btfss	status,0,c
  3315   00172A  D7CD               	goto	u1990
  3316   00172C                     l2629:
  3317   00172C  90D8               	bcf	status,0,c
  3318   00172E  3229               	rrcf	(___fttol@lval+3)^0,f,c
  3319   001730  3228               	rrcf	(___fttol@lval+2)^0,f,c
  3320   001732  3227               	rrcf	(___fttol@lval+1)^0,f,c
  3321   001734  3226               	rrcf	___fttol@lval^0,f,c
  3322   001736  3E2A               	incfsz	___fttol@exp1^0,f,c
  3323   001738  D7F9               	goto	l2629
  3324   00173A  D00D               	goto	u2040
  3325   00173C                     l2633:
  3326   00173C  0E17               	movlw	23
  3327   00173E  642A               	cpfsgt	___fttol@exp1^0,c
  3328   001740  D007               	goto	l2641
  3329   001742  D7C1               	goto	u1990
  3330   001744                     l2639:
  3331   001744  90D8               	bcf	status,0,c
  3332   001746  3626               	rlcf	___fttol@lval^0,f,c
  3333   001748  3627               	rlcf	(___fttol@lval+1)^0,f,c
  3334   00174A  3628               	rlcf	(___fttol@lval+2)^0,f,c
  3335   00174C  3629               	rlcf	(___fttol@lval+3)^0,f,c
  3336   00174E  062A               	decf	___fttol@exp1^0,f,c
  3337   001750                     l2641:
  3338   001750  502A               	movf	___fttol@exp1^0,w,c
  3339   001752  A4D8               	btfss	status,2,c
  3340   001754  D7F7               	goto	l2639
  3341   001756                     u2040:
  3342   001756  5025               	movf	___fttol@sign1^0,w,c
  3343   001758  B4D8               	btfsc	status,2,c
  3344   00175A  D008               	goto	l2647
  3345   00175C  1E29               	comf	(___fttol@lval+3)^0,f,c
  3346   00175E  1E28               	comf	(___fttol@lval+2)^0,f,c
  3347   001760  1E27               	comf	(___fttol@lval+1)^0,f,c
  3348   001762  6C26               	negf	___fttol@lval^0,c
  3349   001764  0E00               	movlw	0
  3350   001766  2227               	addwfc	(___fttol@lval+1)^0,f,c
  3351   001768  2228               	addwfc	(___fttol@lval+2)^0,f,c
  3352   00176A  2229               	addwfc	(___fttol@lval+3)^0,f,c
  3353   00176C                     l2647:
  3354   00176C  C026  F01C         	movff	___fttol@lval,?___fttol
  3355   001770  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  3356   001774  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  3357   001778  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  3358   00177C  0012               	return		;funcret
  3359   00177E                     __end_of___fttol:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function ___ftsub *****************
  3363 ;; Defined at:
  3364 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftsub.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  f1              3   39[COMRAM] float 
  3367 ;;  f2              3   42[COMRAM] float 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  3   39[COMRAM] float 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3379 ;;      Params:         6       0       0       0       0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3382 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        6 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 3
  3386 ;; This function calls:
  3387 ;;		___ftadd
  3388 ;; This function is called by:
  3389 ;;		_EnviarMedicion
  3390 ;;		_Imprimir
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text17
  3395   001D0A                     __ptext17:
  3396                           	callstack 0
  3397   001D0A                     ___ftsub:
  3398                           	callstack 25
  3399                           
  3400                           ;incstack = 0
  3401   001D0A  502B               	movf	___ftsub@f2^0,w,c
  3402   001D0C  102C               	iorwf	(___ftsub@f2+1)^0,w,c
  3403   001D0E  102D               	iorwf	(___ftsub@f2+2)^0,w,c
  3404   001D10  B4D8               	btfsc	status,2,c
  3405   001D12  D006               	goto	l2491
  3406   001D14  0E00               	movlw	0
  3407   001D16  1A2B               	xorwf	___ftsub@f2^0,f,c
  3408   001D18  0E00               	movlw	0
  3409   001D1A  1A2C               	xorwf	(___ftsub@f2+1)^0,f,c
  3410   001D1C  0E80               	movlw	128
  3411   001D1E  1A2D               	xorwf	(___ftsub@f2+2)^0,f,c
  3412   001D20                     l2491:
  3413   001D20  C028  F01C         	movff	___ftsub@f1,___ftadd@f1
  3414   001D24  C029  F01D         	movff	___ftsub@f1+1,___ftadd@f1+1
  3415   001D28  C02A  F01E         	movff	___ftsub@f1+2,___ftadd@f1+2
  3416   001D2C  C02B  F01F         	movff	___ftsub@f2,___ftadd@f2
  3417   001D30  C02C  F020         	movff	___ftsub@f2+1,___ftadd@f2+1
  3418   001D34  C02D  F021         	movff	___ftsub@f2+2,___ftadd@f2+2
  3419   001D38  EC09  F008         	call	___ftadd	;wreg free
  3420   001D3C  C01C  F028         	movff	?___ftadd,?___ftsub
  3421   001D40  C01D  F029         	movff	?___ftadd+1,?___ftsub+1
  3422   001D44  C01E  F02A         	movff	?___ftadd+2,?___ftsub+2
  3423   001D48  0012               	return		;funcret
  3424   001D4A                     __end_of___ftsub:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function ___ftadd *****************
  3428 ;; Defined at:
  3429 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftadd.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  f1              3   27[COMRAM] float 
  3432 ;;  f2              3   30[COMRAM] float 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  exp1            1   38[COMRAM] unsigned char 
  3435 ;;  exp2            1   37[COMRAM] unsigned char 
  3436 ;;  sign            1   36[COMRAM] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  3   27[COMRAM] float 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3446 ;;      Params:         6       0       0       0       0       0       0       0       0
  3447 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3448 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3449 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3450 ;;Total ram usage:       12 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 2
  3453 ;; This function calls:
  3454 ;;		___ftpack
  3455 ;; This function is called by:
  3456 ;;		_Subrutina_Main
  3457 ;;		___ftsub
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text18
  3462   001012                     __ptext18:
  3463                           	callstack 0
  3464   001012                     ___ftadd:
  3465                           	callstack 27
  3466                           
  3467                           ;incstack = 0
  3468   001012  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  3469   001016  6A23               	clrf	(??___ftadd+1)^0,c
  3470   001018  6A24               	clrf	(??___ftadd+2)^0,c
  3471   00101A  341D               	rlcf	(___ftadd@f1+1)^0,w,c
  3472   00101C  3622               	rlcf	??___ftadd^0,f,c
  3473   00101E  E301               	bnc	u1401
  3474   001020  8023               	bsf	(??___ftadd+1)^0,0,c
  3475   001022                     u1401:
  3476   001022  5022               	movf	??___ftadd^0,w,c
  3477   001024  6E27               	movwf	___ftadd@exp1^0,c
  3478   001026  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  3479   00102A  6A23               	clrf	(??___ftadd+1)^0,c
  3480   00102C  6A24               	clrf	(??___ftadd+2)^0,c
  3481   00102E  3420               	rlcf	(___ftadd@f2+1)^0,w,c
  3482   001030  3622               	rlcf	??___ftadd^0,f,c
  3483   001032  E301               	bnc	u1411
  3484   001034  8023               	bsf	(??___ftadd+1)^0,0,c
  3485   001036                     u1411:
  3486   001036  5022               	movf	??___ftadd^0,w,c
  3487   001038  6E26               	movwf	___ftadd@exp2^0,c
  3488   00103A  5027               	movf	___ftadd@exp1^0,w,c
  3489   00103C  B4D8               	btfsc	status,2,c
  3490   00103E  D00A               	goto	u1440
  3491   001040  5026               	movf	___ftadd@exp2^0,w,c
  3492   001042  5C27               	subwf	___ftadd@exp1^0,w,c
  3493   001044  B0D8               	btfsc	status,0,c
  3494   001046  D00D               	goto	l2213
  3495   001048  5027               	movf	___ftadd@exp1^0,w,c
  3496   00104A  5C26               	subwf	___ftadd@exp2^0,w,c
  3497   00104C  6E22               	movwf	??___ftadd^0,c
  3498   00104E  0E18               	movlw	24
  3499   001050  6422               	cpfsgt	??___ftadd^0,c
  3500   001052  D007               	goto	l2213
  3501   001054                     u1440:
  3502   001054  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  3503   001058  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  3504   00105C  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  3505   001060  0012               	return	
  3506   001062                     l2213:
  3507   001062  5026               	movf	___ftadd@exp2^0,w,c
  3508   001064  B4D8               	btfsc	status,2,c
  3509   001066  D00A               	goto	u1470
  3510   001068  5027               	movf	___ftadd@exp1^0,w,c
  3511   00106A  5C26               	subwf	___ftadd@exp2^0,w,c
  3512   00106C  B0D8               	btfsc	status,0,c
  3513   00106E  D00D               	goto	l2219
  3514   001070  5026               	movf	___ftadd@exp2^0,w,c
  3515   001072  5C27               	subwf	___ftadd@exp1^0,w,c
  3516   001074  6E22               	movwf	??___ftadd^0,c
  3517   001076  0E18               	movlw	24
  3518   001078  6422               	cpfsgt	??___ftadd^0,c
  3519   00107A  D007               	goto	l2219
  3520   00107C                     u1470:
  3521   00107C  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  3522   001080  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  3523   001084  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  3524   001088  0012               	return	
  3525   00108A                     l2219:
  3526   00108A  0E06               	movlw	6
  3527   00108C  6E25               	movwf	___ftadd@sign^0,c
  3528   00108E  BE1E               	btfsc	(___ftadd@f1+2)^0,7,c
  3529   001090  8E25               	bsf	___ftadd@sign^0,7,c
  3530   001092  BE21               	btfsc	(___ftadd@f2+2)^0,7,c
  3531   001094  8C25               	bsf	___ftadd@sign^0,6,c
  3532   001096  8E1D               	bsf	(___ftadd@f1+1)^0,7,c
  3533   001098  0EFF               	movlw	255
  3534   00109A  161C               	andwf	___ftadd@f1^0,f,c
  3535   00109C  0EFF               	movlw	255
  3536   00109E  161D               	andwf	(___ftadd@f1+1)^0,f,c
  3537   0010A0  0E00               	movlw	0
  3538   0010A2  161E               	andwf	(___ftadd@f1+2)^0,f,c
  3539   0010A4  8E20               	bsf	(___ftadd@f2+1)^0,7,c
  3540   0010A6  0EFF               	movlw	255
  3541   0010A8  161F               	andwf	___ftadd@f2^0,f,c
  3542   0010AA  0EFF               	movlw	255
  3543   0010AC  1620               	andwf	(___ftadd@f2+1)^0,f,c
  3544   0010AE  0E00               	movlw	0
  3545   0010B0  1621               	andwf	(___ftadd@f2+2)^0,f,c
  3546   0010B2  5026               	movf	___ftadd@exp2^0,w,c
  3547   0010B4  5C27               	subwf	___ftadd@exp1^0,w,c
  3548   0010B6  B0D8               	btfsc	status,0,c
  3549   0010B8  D01B               	goto	l2245
  3550   0010BA                     u1500:
  3551   0010BA  90D8               	bcf	status,0,c
  3552   0010BC  361F               	rlcf	___ftadd@f2^0,f,c
  3553   0010BE  3620               	rlcf	(___ftadd@f2+1)^0,f,c
  3554   0010C0  3621               	rlcf	(___ftadd@f2+2)^0,f,c
  3555   0010C2  0626               	decf	___ftadd@exp2^0,f,c
  3556   0010C4  5027               	movf	___ftadd@exp1^0,w,c
  3557   0010C6  1826               	xorwf	___ftadd@exp2^0,w,c
  3558   0010C8  B4D8               	btfsc	status,2,c
  3559   0010CA  D00D               	goto	l2243
  3560   0010CC  0625               	decf	___ftadd@sign^0,f,c
  3561   0010CE  C025  F022         	movff	___ftadd@sign,??___ftadd
  3562   0010D2  0E07               	movlw	7
  3563   0010D4  1622               	andwf	??___ftadd^0,f,c
  3564   0010D6  B4D8               	btfsc	status,2,c
  3565   0010D8  D006               	goto	l2243
  3566   0010DA  D7EF               	goto	u1500
  3567   0010DC                     l2241:
  3568   0010DC  90D8               	bcf	status,0,c
  3569   0010DE  321E               	rrcf	(___ftadd@f1+2)^0,f,c
  3570   0010E0  321D               	rrcf	(___ftadd@f1+1)^0,f,c
  3571   0010E2  321C               	rrcf	___ftadd@f1^0,f,c
  3572   0010E4  2A27               	incf	___ftadd@exp1^0,f,c
  3573   0010E6                     l2243:
  3574   0010E6  5026               	movf	___ftadd@exp2^0,w,c
  3575   0010E8  1827               	xorwf	___ftadd@exp1^0,w,c
  3576   0010EA  B4D8               	btfsc	status,2,c
  3577   0010EC  D01F               	goto	u1570
  3578   0010EE  D7F6               	goto	l2241
  3579   0010F0                     l2245:
  3580   0010F0  5027               	movf	___ftadd@exp1^0,w,c
  3581   0010F2  5C26               	subwf	___ftadd@exp2^0,w,c
  3582   0010F4  B0D8               	btfsc	status,0,c
  3583   0010F6  D01A               	goto	u1570
  3584   0010F8                     u1540:
  3585   0010F8  90D8               	bcf	status,0,c
  3586   0010FA  361C               	rlcf	___ftadd@f1^0,f,c
  3587   0010FC  361D               	rlcf	(___ftadd@f1+1)^0,f,c
  3588   0010FE  361E               	rlcf	(___ftadd@f1+2)^0,f,c
  3589   001100  0627               	decf	___ftadd@exp1^0,f,c
  3590   001102  5027               	movf	___ftadd@exp1^0,w,c
  3591   001104  1826               	xorwf	___ftadd@exp2^0,w,c
  3592   001106  B4D8               	btfsc	status,2,c
  3593   001108  D00D               	goto	l2255
  3594   00110A  0625               	decf	___ftadd@sign^0,f,c
  3595   00110C  C025  F022         	movff	___ftadd@sign,??___ftadd
  3596   001110  0E07               	movlw	7
  3597   001112  1622               	andwf	??___ftadd^0,f,c
  3598   001114  B4D8               	btfsc	status,2,c
  3599   001116  D006               	goto	l2255
  3600   001118  D7EF               	goto	u1540
  3601   00111A                     l2253:
  3602   00111A  90D8               	bcf	status,0,c
  3603   00111C  3221               	rrcf	(___ftadd@f2+2)^0,f,c
  3604   00111E  3220               	rrcf	(___ftadd@f2+1)^0,f,c
  3605   001120  321F               	rrcf	___ftadd@f2^0,f,c
  3606   001122  2A26               	incf	___ftadd@exp2^0,f,c
  3607   001124                     l2255:
  3608   001124  5026               	movf	___ftadd@exp2^0,w,c
  3609   001126  1827               	xorwf	___ftadd@exp1^0,w,c
  3610   001128  A4D8               	btfss	status,2,c
  3611   00112A  D7F7               	goto	l2253
  3612   00112C                     u1570:
  3613   00112C  AE25               	btfss	___ftadd@sign^0,7,c
  3614   00112E  D00C               	goto	l724
  3615   001130  0EFF               	movlw	255
  3616   001132  1A1C               	xorwf	___ftadd@f1^0,f,c
  3617   001134  0EFF               	movlw	255
  3618   001136  1A1D               	xorwf	(___ftadd@f1+1)^0,f,c
  3619   001138  0EFF               	movlw	255
  3620   00113A  1A1E               	xorwf	(___ftadd@f1+2)^0,f,c
  3621   00113C  0E01               	movlw	1
  3622   00113E  261C               	addwf	___ftadd@f1^0,f,c
  3623   001140  0E00               	movlw	0
  3624   001142  221D               	addwfc	(___ftadd@f1+1)^0,f,c
  3625   001144  0E00               	movlw	0
  3626   001146  221E               	addwfc	(___ftadd@f1+2)^0,f,c
  3627   001148                     l724:
  3628   001148  AC25               	btfss	___ftadd@sign^0,6,c
  3629   00114A  D00C               	goto	l2261
  3630   00114C  0EFF               	movlw	255
  3631   00114E  1A1F               	xorwf	___ftadd@f2^0,f,c
  3632   001150  0EFF               	movlw	255
  3633   001152  1A20               	xorwf	(___ftadd@f2+1)^0,f,c
  3634   001154  0EFF               	movlw	255
  3635   001156  1A21               	xorwf	(___ftadd@f2+2)^0,f,c
  3636   001158  0E01               	movlw	1
  3637   00115A  261F               	addwf	___ftadd@f2^0,f,c
  3638   00115C  0E00               	movlw	0
  3639   00115E  2220               	addwfc	(___ftadd@f2+1)^0,f,c
  3640   001160  0E00               	movlw	0
  3641   001162  2221               	addwfc	(___ftadd@f2+2)^0,f,c
  3642   001164                     l2261:
  3643   001164  0E00               	movlw	0
  3644   001166  6E25               	movwf	___ftadd@sign^0,c
  3645   001168  501C               	movf	___ftadd@f1^0,w,c
  3646   00116A  261F               	addwf	___ftadd@f2^0,f,c
  3647   00116C  501D               	movf	(___ftadd@f1+1)^0,w,c
  3648   00116E  2220               	addwfc	(___ftadd@f2+1)^0,f,c
  3649   001170  501E               	movf	(___ftadd@f1+2)^0,w,c
  3650   001172  2221               	addwfc	(___ftadd@f2+2)^0,f,c
  3651   001174  AE21               	btfss	(___ftadd@f2+2)^0,7,c
  3652   001176  D00E               	goto	l2271
  3653   001178  0EFF               	movlw	255
  3654   00117A  1A1F               	xorwf	___ftadd@f2^0,f,c
  3655   00117C  0EFF               	movlw	255
  3656   00117E  1A20               	xorwf	(___ftadd@f2+1)^0,f,c
  3657   001180  0EFF               	movlw	255
  3658   001182  1A21               	xorwf	(___ftadd@f2+2)^0,f,c
  3659   001184  0E01               	movlw	1
  3660   001186  261F               	addwf	___ftadd@f2^0,f,c
  3661   001188  0E00               	movlw	0
  3662   00118A  2220               	addwfc	(___ftadd@f2+1)^0,f,c
  3663   00118C  0E00               	movlw	0
  3664   00118E  2221               	addwfc	(___ftadd@f2+2)^0,f,c
  3665   001190  0E01               	movlw	1
  3666   001192  6E25               	movwf	___ftadd@sign^0,c
  3667   001194                     l2271:
  3668   001194  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  3669   001198  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3670   00119C  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3671   0011A0  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  3672   0011A4  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  3673   0011A8  ECBF  F00B         	call	___ftpack	;wreg free
  3674   0011AC  C001  F01C         	movff	?___ftpack,?___ftadd
  3675   0011B0  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  3676   0011B4  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  3677   0011B8  0012               	return		;funcret
  3678   0011BA                     __end_of___ftadd:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function ___ftmul *****************
  3682 ;; Defined at:
  3683 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftmul.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  f1              3   12[COMRAM] float 
  3686 ;;  f2              3   15[COMRAM] float 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3689 ;;  sign            1   26[COMRAM] unsigned char 
  3690 ;;  cntr            1   25[COMRAM] unsigned char 
  3691 ;;  exp             1   21[COMRAM] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  3   12[COMRAM] float 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3701 ;;      Params:         6       0       0       0       0       0       0       0       0
  3702 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3703 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3704 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3705 ;;Total ram usage:       15 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 2
  3708 ;; This function calls:
  3709 ;;		___ftpack
  3710 ;; This function is called by:
  3711 ;;		_Subrutina_Main
  3712 ;;		_EnviarMedicion
  3713 ;;		_Imprimir
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text19
  3718   0014D2                     __ptext19:
  3719                           	callstack 0
  3720   0014D2                     ___ftmul:
  3721                           	callstack 27
  3722                           
  3723                           ;incstack = 0
  3724   0014D2  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3725   0014D6  6A14               	clrf	(??___ftmul+1)^0,c
  3726   0014D8  6A15               	clrf	(??___ftmul+2)^0,c
  3727   0014DA  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  3728   0014DC  3613               	rlcf	??___ftmul^0,f,c
  3729   0014DE  E301               	bnc	u1751
  3730   0014E0  8014               	bsf	(??___ftmul+1)^0,0,c
  3731   0014E2                     u1751:
  3732   0014E2  5013               	movf	??___ftmul^0,w,c
  3733   0014E4  6E16               	movwf	___ftmul@exp^0,c
  3734   0014E6  5016               	movf	___ftmul@exp^0,w,c
  3735   0014E8  A4D8               	btfss	status,2,c
  3736   0014EA  D007               	goto	l2445
  3737   0014EC  0E00               	movlw	0
  3738   0014EE  6E0D               	movwf	?___ftmul^0,c
  3739   0014F0  0E00               	movlw	0
  3740   0014F2  6E0E               	movwf	(?___ftmul+1)^0,c
  3741   0014F4  0E00               	movlw	0
  3742   0014F6  6E0F               	movwf	(?___ftmul+2)^0,c
  3743   0014F8  0012               	return	
  3744   0014FA                     l2445:
  3745   0014FA  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3746   0014FE  6A14               	clrf	(??___ftmul+1)^0,c
  3747   001500  6A15               	clrf	(??___ftmul+2)^0,c
  3748   001502  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  3749   001504  3613               	rlcf	??___ftmul^0,f,c
  3750   001506  E301               	bnc	u1771
  3751   001508  8014               	bsf	(??___ftmul+1)^0,0,c
  3752   00150A                     u1771:
  3753   00150A  5013               	movf	??___ftmul^0,w,c
  3754   00150C  6E1B               	movwf	___ftmul@sign^0,c
  3755   00150E  501B               	movf	___ftmul@sign^0,w,c
  3756   001510  A4D8               	btfss	status,2,c
  3757   001512  D007               	goto	l2451
  3758   001514  0E00               	movlw	0
  3759   001516  6E0D               	movwf	?___ftmul^0,c
  3760   001518  0E00               	movlw	0
  3761   00151A  6E0E               	movwf	(?___ftmul+1)^0,c
  3762   00151C  0E00               	movlw	0
  3763   00151E  6E0F               	movwf	(?___ftmul+2)^0,c
  3764   001520  0012               	return	
  3765   001522                     l2451:
  3766   001522  501B               	movf	___ftmul@sign^0,w,c
  3767   001524  0F7B               	addlw	123
  3768   001526  2616               	addwf	___ftmul@exp^0,f,c
  3769   001528  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3770   00152C  5012               	movf	(___ftmul@f2+2)^0,w,c
  3771   00152E  1A1B               	xorwf	___ftmul@sign^0,f,c
  3772   001530  0E80               	movlw	128
  3773   001532  161B               	andwf	___ftmul@sign^0,f,c
  3774   001534  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  3775   001536  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  3776   001538  0EFF               	movlw	255
  3777   00153A  1610               	andwf	___ftmul@f2^0,f,c
  3778   00153C  0EFF               	movlw	255
  3779   00153E  1611               	andwf	(___ftmul@f2+1)^0,f,c
  3780   001540  0E00               	movlw	0
  3781   001542  1612               	andwf	(___ftmul@f2+2)^0,f,c
  3782   001544  0E00               	movlw	0
  3783   001546  6E17               	movwf	___ftmul@f3_as_product^0,c
  3784   001548  0E00               	movlw	0
  3785   00154A  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  3786   00154C  0E00               	movlw	0
  3787   00154E  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  3788   001550  0E07               	movlw	7
  3789   001552  6E1A               	movwf	___ftmul@cntr^0,c
  3790   001554                     l2465:
  3791   001554  A00D               	btfss	___ftmul@f1^0,0,c
  3792   001556  D006               	goto	l2469
  3793   001558  5010               	movf	___ftmul@f2^0,w,c
  3794   00155A  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3795   00155C  5011               	movf	(___ftmul@f2+1)^0,w,c
  3796   00155E  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3797   001560  5012               	movf	(___ftmul@f2+2)^0,w,c
  3798   001562  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3799   001564                     l2469:
  3800   001564  90D8               	bcf	status,0,c
  3801   001566  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3802   001568  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3803   00156A  320D               	rrcf	___ftmul@f1^0,f,c
  3804   00156C  90D8               	bcf	status,0,c
  3805   00156E  3610               	rlcf	___ftmul@f2^0,f,c
  3806   001570  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  3807   001572  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  3808   001574  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3809   001576  D7EE               	goto	l2465
  3810   001578  0E09               	movlw	9
  3811   00157A  6E1A               	movwf	___ftmul@cntr^0,c
  3812   00157C                     l2475:
  3813   00157C  A00D               	btfss	___ftmul@f1^0,0,c
  3814   00157E  D006               	goto	l2479
  3815   001580  5010               	movf	___ftmul@f2^0,w,c
  3816   001582  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3817   001584  5011               	movf	(___ftmul@f2+1)^0,w,c
  3818   001586  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3819   001588  5012               	movf	(___ftmul@f2+2)^0,w,c
  3820   00158A  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3821   00158C                     l2479:
  3822   00158C  90D8               	bcf	status,0,c
  3823   00158E  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3824   001590  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3825   001592  320D               	rrcf	___ftmul@f1^0,f,c
  3826   001594  90D8               	bcf	status,0,c
  3827   001596  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  3828   001598  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  3829   00159A  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  3830   00159C  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3831   00159E  D7EE               	goto	l2475
  3832   0015A0  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3833   0015A4  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3834   0015A8  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3835   0015AC  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3836   0015B0  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3837   0015B4  ECBF  F00B         	call	___ftpack	;wreg free
  3838   0015B8  C001  F00D         	movff	?___ftpack,?___ftmul
  3839   0015BC  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3840   0015C0  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3841   0015C4  0012               	return		;funcret
  3842   0015C6                     __end_of___ftmul:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function ___awtoft *****************
  3846 ;; Defined at:
  3847 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awtoft.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  c               2    8[COMRAM] int 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  sign            1   11[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  3    8[COMRAM] float 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         3       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        4 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 2
  3868 ;; This function calls:
  3869 ;;		___ftpack
  3870 ;; This function is called by:
  3871 ;;		_EnviarMedicion
  3872 ;;		_Imprimir
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text20
  3877   001D84                     __ptext20:
  3878                           	callstack 0
  3879   001D84                     ___awtoft:
  3880                           	callstack 26
  3881                           
  3882                           ;incstack = 0
  3883   001D84  0E00               	movlw	0
  3884   001D86  6E0C               	movwf	___awtoft@sign^0,c
  3885   001D88  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  3886   001D8A  D006               	goto	l2583
  3887   001D8C  6C09               	negf	___awtoft@c^0,c
  3888   001D8E  1E0A               	comf	(___awtoft@c+1)^0,f,c
  3889   001D90  B0D8               	btfsc	status,0,c
  3890   001D92  2A0A               	incf	(___awtoft@c+1)^0,f,c
  3891   001D94  0E01               	movlw	1
  3892   001D96  6E0C               	movwf	___awtoft@sign^0,c
  3893   001D98                     l2583:
  3894   001D98  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3895   001D9C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3896   001DA0  6A03               	clrf	(___ftpack@arg+2)^0,c
  3897   001DA2  0E8E               	movlw	142
  3898   001DA4  6E04               	movwf	___ftpack@exp^0,c
  3899   001DA6  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3900   001DAA  ECBF  F00B         	call	___ftpack	;wreg free
  3901   001DAE  C001  F009         	movff	?___ftpack,?___awtoft
  3902   001DB2  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3903   001DB6  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3904   001DBA  0012               	return		;funcret
  3905   001DBC                     __end_of___awtoft:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function ___ftpack *****************
  3909 ;; Defined at:
  3910 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  arg             3    0[COMRAM] unsigned um
  3913 ;;  exp             1    3[COMRAM] unsigned char 
  3914 ;;  sign            1    4[COMRAM] unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  3    0[COMRAM] float 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3926 ;;      Params:         5       0       0       0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3928 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3929 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3930 ;;Total ram usage:        8 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		___awtoft
  3937 ;;		___ftadd
  3938 ;;		___ftmul
  3939 ;;		___lbtoft
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text21
  3944   00177E                     __ptext21:
  3945                           	callstack 0
  3946   00177E                     ___ftpack:
  3947                           	callstack 27
  3948                           
  3949                           ;incstack = 0
  3950   00177E  5004               	movf	___ftpack@exp^0,w,c
  3951   001780  B4D8               	btfsc	status,2,c
  3952   001782  D005               	goto	u1320
  3953   001784  5001               	movf	___ftpack@arg^0,w,c
  3954   001786  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  3955   001788  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  3956   00178A  A4D8               	btfss	status,2,c
  3957   00178C  D00C               	goto	l2153
  3958   00178E                     u1320:
  3959   00178E  0E00               	movlw	0
  3960   001790  6E01               	movwf	?___ftpack^0,c
  3961   001792  0E00               	movlw	0
  3962   001794  6E02               	movwf	(?___ftpack+1)^0,c
  3963   001796  0E00               	movlw	0
  3964   001798  6E03               	movwf	(?___ftpack+2)^0,c
  3965   00179A  0012               	return	
  3966   00179C                     l2151:
  3967   00179C  2A04               	incf	___ftpack@exp^0,f,c
  3968   00179E  90D8               	bcf	status,0,c
  3969   0017A0  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3970   0017A2  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3971   0017A4  3201               	rrcf	___ftpack@arg^0,f,c
  3972   0017A6                     l2153:
  3973   0017A6  0E00               	movlw	0
  3974   0017A8  1401               	andwf	___ftpack@arg^0,w,c
  3975   0017AA  6E06               	movwf	??___ftpack^0,c
  3976   0017AC  0E00               	movlw	0
  3977   0017AE  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3978   0017B0  6E07               	movwf	(??___ftpack+1)^0,c
  3979   0017B2  0EFE               	movlw	254
  3980   0017B4  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3981   0017B6  6E08               	movwf	(??___ftpack+2)^0,c
  3982   0017B8  5006               	movf	??___ftpack^0,w,c
  3983   0017BA  1007               	iorwf	(??___ftpack+1)^0,w,c
  3984   0017BC  1008               	iorwf	(??___ftpack+2)^0,w,c
  3985   0017BE  B4D8               	btfsc	status,2,c
  3986   0017C0  D00C               	goto	l2159
  3987   0017C2  D7EC               	goto	l2151
  3988   0017C4                     l2155:
  3989   0017C4  2A04               	incf	___ftpack@exp^0,f,c
  3990   0017C6  0E01               	movlw	1
  3991   0017C8  2601               	addwf	___ftpack@arg^0,f,c
  3992   0017CA  0E00               	movlw	0
  3993   0017CC  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  3994   0017CE  0E00               	movlw	0
  3995   0017D0  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  3996   0017D2  90D8               	bcf	status,0,c
  3997   0017D4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3998   0017D6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3999   0017D8  3201               	rrcf	___ftpack@arg^0,f,c
  4000   0017DA                     l2159:
  4001   0017DA  0E00               	movlw	0
  4002   0017DC  1401               	andwf	___ftpack@arg^0,w,c
  4003   0017DE  6E06               	movwf	??___ftpack^0,c
  4004   0017E0  0E00               	movlw	0
  4005   0017E2  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4006   0017E4  6E07               	movwf	(??___ftpack+1)^0,c
  4007   0017E6  0EFF               	movlw	255
  4008   0017E8  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4009   0017EA  6E08               	movwf	(??___ftpack+2)^0,c
  4010   0017EC  5006               	movf	??___ftpack^0,w,c
  4011   0017EE  1007               	iorwf	(??___ftpack+1)^0,w,c
  4012   0017F0  1008               	iorwf	(??___ftpack+2)^0,w,c
  4013   0017F2  B4D8               	btfsc	status,2,c
  4014   0017F4  D006               	goto	l2163
  4015   0017F6  D7E6               	goto	l2155
  4016   0017F8                     l2161:
  4017   0017F8  0604               	decf	___ftpack@exp^0,f,c
  4018   0017FA  90D8               	bcf	status,0,c
  4019   0017FC  3601               	rlcf	___ftpack@arg^0,f,c
  4020   0017FE  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  4021   001800  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  4022   001802                     l2163:
  4023   001802  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  4024   001804  D003               	goto	u1360
  4025   001806  0E02               	movlw	2
  4026   001808  6004               	cpfslt	___ftpack@exp^0,c
  4027   00180A  D7F6               	goto	l2161
  4028   00180C                     u1360:
  4029   00180C  A004               	btfss	___ftpack@exp^0,0,c
  4030   00180E  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  4031   001810  90D8               	bcf	status,0,c
  4032   001812  3204               	rrcf	___ftpack@exp^0,f,c
  4033   001814  5004               	movf	___ftpack@exp^0,w,c
  4034   001816  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  4035   001818  5005               	movf	___ftpack@sign^0,w,c
  4036   00181A  A4D8               	btfss	status,2,c
  4037   00181C  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  4038   00181E  C001  F001         	movff	___ftpack@arg,?___ftpack
  4039   001822  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4040   001826  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4041   00182A  0012               	return		;funcret
  4042   00182C                     __end_of___ftpack:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function ___awmod *****************
  4046 ;; Defined at:
  4047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  dividend        2    0[COMRAM] int 
  4050 ;;  divisor         2    2[COMRAM] int 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  sign            1    5[COMRAM] unsigned char 
  4053 ;;  counter         1    4[COMRAM] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  2    0[COMRAM] int 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4063 ;;      Params:         4       0       0       0       0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4066 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        6 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_EnviarMedicion
  4074 ;;		_Imprimir
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text22
  4079   001A66                     __ptext22:
  4080                           	callstack 0
  4081   001A66                     ___awmod:
  4082                           	callstack 27
  4083                           
  4084                           ;incstack = 0
  4085   001A66  0E00               	movlw	0
  4086   001A68  6E06               	movwf	___awmod@sign^0,c
  4087   001A6A  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  4088   001A6C  D006               	goto	l2547
  4089   001A6E  6C01               	negf	___awmod@dividend^0,c
  4090   001A70  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4091   001A72  B0D8               	btfsc	status,0,c
  4092   001A74  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4093   001A76  0E01               	movlw	1
  4094   001A78  6E06               	movwf	___awmod@sign^0,c
  4095   001A7A                     l2547:
  4096   001A7A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4097   001A7C  D004               	goto	l2551
  4098   001A7E  6C03               	negf	___awmod@divisor^0,c
  4099   001A80  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4100   001A82  B0D8               	btfsc	status,0,c
  4101   001A84  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4102   001A86                     l2551:
  4103   001A86  5003               	movf	___awmod@divisor^0,w,c
  4104   001A88  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4105   001A8A  B4D8               	btfsc	status,2,c
  4106   001A8C  D018               	goto	l2567
  4107   001A8E  0E01               	movlw	1
  4108   001A90  6E05               	movwf	___awmod@counter^0,c
  4109   001A92  D004               	goto	l2557
  4110   001A94                     l2555:
  4111   001A94  90D8               	bcf	status,0,c
  4112   001A96  3603               	rlcf	___awmod@divisor^0,f,c
  4113   001A98  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4114   001A9A  2A05               	incf	___awmod@counter^0,f,c
  4115   001A9C                     l2557:
  4116   001A9C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4117   001A9E  D7FA               	goto	l2555
  4118   001AA0                     u1910:
  4119   001AA0  5003               	movf	___awmod@divisor^0,w,c
  4120   001AA2  5C01               	subwf	___awmod@dividend^0,w,c
  4121   001AA4  5004               	movf	(___awmod@divisor+1)^0,w,c
  4122   001AA6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4123   001AA8  A0D8               	btfss	status,0,c
  4124   001AAA  D004               	goto	l2563
  4125   001AAC  5003               	movf	___awmod@divisor^0,w,c
  4126   001AAE  5E01               	subwf	___awmod@dividend^0,f,c
  4127   001AB0  5004               	movf	(___awmod@divisor+1)^0,w,c
  4128   001AB2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4129   001AB4                     l2563:
  4130   001AB4  90D8               	bcf	status,0,c
  4131   001AB6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4132   001AB8  3203               	rrcf	___awmod@divisor^0,f,c
  4133   001ABA  2E05               	decfsz	___awmod@counter^0,f,c
  4134   001ABC  D7F1               	goto	u1910
  4135   001ABE                     l2567:
  4136   001ABE  5006               	movf	___awmod@sign^0,w,c
  4137   001AC0  B4D8               	btfsc	status,2,c
  4138   001AC2  D004               	goto	l2571
  4139   001AC4  6C01               	negf	___awmod@dividend^0,c
  4140   001AC6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4141   001AC8  B0D8               	btfsc	status,0,c
  4142   001ACA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4143   001ACC                     l2571:
  4144   001ACC  C001  F001         	movff	___awmod@dividend,?___awmod
  4145   001AD0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4146   001AD4  0012               	return		;funcret
  4147   001AD6                     __end_of___awmod:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function ___awdiv *****************
  4151 ;; Defined at:
  4152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  dividend        2    6[COMRAM] int 
  4155 ;;  divisor         2    8[COMRAM] int 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  quotient        2   12[COMRAM] int 
  4158 ;;  sign            1   11[COMRAM] unsigned char 
  4159 ;;  counter         1   10[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    6[COMRAM] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         4       0       0       0       0       0       0       0       0
  4170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4172 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4173 ;;Total ram usage:        8 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_EnviarMedicion
  4180 ;;		_Imprimir
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text23
  4185   00196E                     __ptext23:
  4186                           	callstack 0
  4187   00196E                     ___awdiv:
  4188                           	callstack 27
  4189                           
  4190                           ;incstack = 0
  4191   00196E  0E00               	movlw	0
  4192   001970  6E0C               	movwf	___awdiv@sign^0,c
  4193   001972  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4194   001974  D006               	goto	l2503
  4195   001976  6C09               	negf	___awdiv@divisor^0,c
  4196   001978  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4197   00197A  B0D8               	btfsc	status,0,c
  4198   00197C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4199   00197E  0E01               	movlw	1
  4200   001980  6E0C               	movwf	___awdiv@sign^0,c
  4201   001982                     l2503:
  4202   001982  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  4203   001984  D006               	goto	l2509
  4204   001986  6C07               	negf	___awdiv@dividend^0,c
  4205   001988  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4206   00198A  B0D8               	btfsc	status,0,c
  4207   00198C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4208   00198E  0E01               	movlw	1
  4209   001990  1A0C               	xorwf	___awdiv@sign^0,f,c
  4210   001992                     l2509:
  4211   001992  0E00               	movlw	0
  4212   001994  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4213   001996  0E00               	movlw	0
  4214   001998  6E0D               	movwf	___awdiv@quotient^0,c
  4215   00199A  5009               	movf	___awdiv@divisor^0,w,c
  4216   00199C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4217   00199E  B4D8               	btfsc	status,2,c
  4218   0019A0  D01C               	goto	l2531
  4219   0019A2  0E01               	movlw	1
  4220   0019A4  6E0B               	movwf	___awdiv@counter^0,c
  4221   0019A6  D004               	goto	l2517
  4222   0019A8                     l2515:
  4223   0019A8  90D8               	bcf	status,0,c
  4224   0019AA  3609               	rlcf	___awdiv@divisor^0,f,c
  4225   0019AC  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4226   0019AE  2A0B               	incf	___awdiv@counter^0,f,c
  4227   0019B0                     l2517:
  4228   0019B0  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4229   0019B2  D7FA               	goto	l2515
  4230   0019B4                     u1850:
  4231   0019B4  90D8               	bcf	status,0,c
  4232   0019B6  360D               	rlcf	___awdiv@quotient^0,f,c
  4233   0019B8  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4234   0019BA  5009               	movf	___awdiv@divisor^0,w,c
  4235   0019BC  5C07               	subwf	___awdiv@dividend^0,w,c
  4236   0019BE  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4237   0019C0  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4238   0019C2  A0D8               	btfss	status,0,c
  4239   0019C4  D005               	goto	l2527
  4240   0019C6  5009               	movf	___awdiv@divisor^0,w,c
  4241   0019C8  5E07               	subwf	___awdiv@dividend^0,f,c
  4242   0019CA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4243   0019CC  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4244   0019CE  800D               	bsf	___awdiv@quotient^0,0,c
  4245   0019D0                     l2527:
  4246   0019D0  90D8               	bcf	status,0,c
  4247   0019D2  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4248   0019D4  3209               	rrcf	___awdiv@divisor^0,f,c
  4249   0019D6  2E0B               	decfsz	___awdiv@counter^0,f,c
  4250   0019D8  D7ED               	goto	u1850
  4251   0019DA                     l2531:
  4252   0019DA  500C               	movf	___awdiv@sign^0,w,c
  4253   0019DC  B4D8               	btfsc	status,2,c
  4254   0019DE  D004               	goto	l2535
  4255   0019E0  6C0D               	negf	___awdiv@quotient^0,c
  4256   0019E2  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4257   0019E4  B0D8               	btfsc	status,0,c
  4258   0019E6  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4259   0019E8                     l2535:
  4260   0019E8  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4261   0019EC  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4262   0019F0  0012               	return		;funcret
  4263   0019F2                     __end_of___awdiv:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _Transmitir *****************
  4267 ;; Defined at:
  4268 ;;		line 180 in file "Laboratorio_5.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  BufferT         1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  BufferT         1    0[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4285 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_EnviarMedicion
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text24
  4297   001FA4                     __ptext24:
  4298                           	callstack 0
  4299   001FA4                     _Transmitir:
  4300                           	callstack 27
  4301                           
  4302                           ;incstack = 0
  4303                           ;Transmitir@BufferT stored from wreg
  4304   001FA4  6E01               	movwf	Transmitir@BufferT^0,c
  4305   001FA6                     
  4306                           ;Laboratorio_5.c: 181: while(TRMT==0);
  4307   001FA6  A2AC               	btfss	4012,1,c	;volatile
  4308   001FA8  D7FE               	goto	l2435
  4309                           
  4310                           ;Laboratorio_5.c: 182: TXREG=BufferT;
  4311   001FAA  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  4312   001FAE  0012               	return		;funcret
  4313   001FB0                     __end_of_Transmitir:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _LeerHT11 *****************
  4317 ;; Defined at:
  4318 ;;		line 42 in file "LibDHT11.h"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  Retornar        2    8[COMRAM] PTR unsigned char 
  4323 ;;  contr           1    7[COMRAM] unsigned char 
  4324 ;;  i               1    0        unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2    4[COMRAM] PTR unsigned char 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         2       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        6 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 3
  4341 ;; This function calls:
  4342 ;;		_LeerByte
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text25
  4349   00182C                     __ptext25:
  4350                           	callstack 0
  4351   00182C                     _LeerHT11:
  4352                           	callstack 27
  4353                           
  4354                           ;LibDHT11.h: 43: unsigned char i,contr=0;
  4355                           
  4356                           ;incstack = 0
  4357   00182C  0E00               	movlw	0
  4358   00182E  6E08               	movwf	LeerHT11@contr^0,c
  4359                           
  4360                           ;LibDHT11.h: 44: unsigned char* Retornar;;LibDHT11.h: 45: TRISC0=0;
  4361   001830  9094               	bcf	3988,0,c	;volatile
  4362                           
  4363                           ;LibDHT11.h: 46: _delay((unsigned long)((18)*(8000000/4000.0)));
  4364   001832  0E2F               	movlw	47
  4365   001834  6E07               	movwf	??_LeerHT11^0,c
  4366   001836  0EC0               	movlw	192
  4367   001838                     u2427:
  4368   001838  2EE8               	decfsz	wreg,f,c
  4369   00183A  D7FE               	bra	u2427
  4370   00183C  2E07               	decfsz	??_LeerHT11^0,f,c
  4371   00183E  D7FC               	bra	u2427
  4372                           
  4373                           ;LibDHT11.h: 47: TRISC0=1;
  4374   001840  8094               	bsf	3988,0,c	;volatile
  4375   001842                     l251:
  4376   001842  B082               	btfsc	3970,0,c	;volatile
  4377   001844  D7FE               	goto	l251
  4378                           
  4379                           ;LibDHT11.h: 49: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4380   001846  0E1A               	movlw	26
  4381   001848                     u2437:
  4382   001848  2EE8               	decfsz	wreg,f,c
  4383   00184A  D7FE               	bra	u2437
  4384   00184C  D000               	nop2	
  4385                           
  4386                           ;LibDHT11.h: 50: if(RC0==0) contr++;
  4387   00184E  A082               	btfss	3970,0,c	;volatile
  4388   001850  2A08               	incf	LeerHT11@contr^0,f,c
  4389                           
  4390                           ;LibDHT11.h: 51: _delay((unsigned long)((80)*(8000000/4000000.0)));
  4391   001852  0E35               	movlw	53
  4392   001854                     u2447:
  4393   001854  2EE8               	decfsz	wreg,f,c
  4394   001856  D7FE               	bra	u2447
  4395   001858  F000               	nop	
  4396                           
  4397                           ;LibDHT11.h: 52: if(RC0==1) contr++;
  4398   00185A  B082               	btfsc	3970,0,c	;volatile
  4399   00185C  2A08               	incf	LeerHT11@contr^0,f,c
  4400   00185E                     l256:
  4401   00185E  B082               	btfsc	3970,0,c	;volatile
  4402   001860  D7FE               	goto	l256
  4403                           
  4404                           ;LibDHT11.h: 54: Retornar[0]=LeerByte();
  4405   001862  EC8A  F00F         	call	_LeerByte	;wreg free
  4406   001866  C009  FFD9         	movff	LeerHT11@Retornar,fsr2l
  4407   00186A  C00A  FFDA         	movff	LeerHT11@Retornar+1,fsr2h
  4408   00186E  6EDF               	movwf	indf2,c
  4409                           
  4410                           ;LibDHT11.h: 55: LeerByte();
  4411   001870  EC8A  F00F         	call	_LeerByte	;wreg free
  4412                           
  4413                           ;LibDHT11.h: 56: Retornar[1]=LeerByte();
  4414   001874  EE20 F001          	lfsr	2,1
  4415   001878  5009               	movf	LeerHT11@Retornar^0,w,c
  4416   00187A  26D9               	addwf	fsr2l,f,c
  4417   00187C  500A               	movf	(LeerHT11@Retornar+1)^0,w,c
  4418   00187E  22DA               	addwfc	fsr2h,f,c
  4419   001880  EC8A  F00F         	call	_LeerByte	;wreg free
  4420   001884  6EDF               	movwf	indf2,c
  4421                           
  4422                           ;LibDHT11.h: 57: LeerByte();
  4423   001886  EC8A  F00F         	call	_LeerByte	;wreg free
  4424                           
  4425                           ;LibDHT11.h: 58: Retornar[2]=LeerByte();
  4426   00188A  EE20 F002          	lfsr	2,2
  4427   00188E  5009               	movf	LeerHT11@Retornar^0,w,c
  4428   001890  26D9               	addwf	fsr2l,f,c
  4429   001892  500A               	movf	(LeerHT11@Retornar+1)^0,w,c
  4430   001894  22DA               	addwfc	fsr2h,f,c
  4431   001896  EC8A  F00F         	call	_LeerByte	;wreg free
  4432   00189A  6EDF               	movwf	indf2,c
  4433                           
  4434                           ;LibDHT11.h: 59: Temp = Retornar[1];
  4435   00189C  EE20 F001          	lfsr	2,1
  4436   0018A0  5009               	movf	LeerHT11@Retornar^0,w,c
  4437   0018A2  26D9               	addwf	fsr2l,f,c
  4438   0018A4  500A               	movf	(LeerHT11@Retornar+1)^0,w,c
  4439   0018A6  22DA               	addwfc	fsr2h,f,c
  4440   0018A8  50DF               	movf	indf2,w,c
  4441   0018AA  6E4A               	movwf	_Temp^0,c
  4442                           
  4443                           ;LibDHT11.h: 60: Hum = Retornar[0];
  4444   0018AC  C009  FFD9         	movff	LeerHT11@Retornar,fsr2l
  4445   0018B0  C00A  FFDA         	movff	LeerHT11@Retornar+1,fsr2h
  4446   0018B4  50DF               	movf	indf2,w,c
  4447   0018B6  6E49               	movwf	_Hum^0,c
  4448                           
  4449                           ;LibDHT11.h: 61: Che = Retornar[2];
  4450   0018B8  EE20 F002          	lfsr	2,2
  4451   0018BC  5009               	movf	LeerHT11@Retornar^0,w,c
  4452   0018BE  26D9               	addwf	fsr2l,f,c
  4453   0018C0  500A               	movf	(LeerHT11@Retornar+1)^0,w,c
  4454   0018C2  22DA               	addwfc	fsr2h,f,c
  4455   0018C4  50DF               	movf	indf2,w,c
  4456   0018C6  6E48               	movwf	_Che^0,c
  4457                           
  4458                           ;LibDHT11.h: 62: return Retornar;
  4459   0018C8  C009  F005         	movff	LeerHT11@Retornar,?_LeerHT11
  4460   0018CC  C00A  F006         	movff	LeerHT11@Retornar+1,?_LeerHT11+1
  4461   0018D0  0012               	return		;funcret
  4462   0018D2                     __end_of_LeerHT11:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _LeerByte *****************
  4466 ;; Defined at:
  4467 ;;		line 65 in file "LibDHT11.h"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  i               1    3[COMRAM] unsigned char 
  4472 ;;  res             1    2[COMRAM] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4482 ;;      Params:         0       0       0       0       0       0       0       0       0
  4483 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4484 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4485 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4486 ;;Total ram usage:        3 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 2
  4489 ;; This function calls:
  4490 ;;		_LeerBit
  4491 ;; This function is called by:
  4492 ;;		_LeerHT11
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text26
  4497   001F14                     __ptext26:
  4498                           	callstack 0
  4499   001F14                     _LeerByte:
  4500                           	callstack 27
  4501                           
  4502                           ;LibDHT11.h: 66: unsigned char res=0,i;
  4503                           
  4504                           ;incstack = 0
  4505   001F14  0E00               	movlw	0
  4506   001F16  6E03               	movwf	LeerByte@res^0,c
  4507                           
  4508                           ;LibDHT11.h: 67: for(i=8;i>0;i--){
  4509   001F18  0E08               	movlw	8
  4510   001F1A  6E04               	movwf	LeerByte@i^0,c
  4511   001F1C                     l1721:
  4512                           
  4513                           ;LibDHT11.h: 68: res=(res<<1) | LeerBit();
  4514   001F1C  EC10  F00F         	call	_LeerBit	;wreg free
  4515   001F20  6E02               	movwf	??_LeerByte^0,c
  4516   001F22  5003               	movf	LeerByte@res^0,w,c
  4517   001F24  2403               	addwf	LeerByte@res^0,w,c
  4518   001F26  1002               	iorwf	??_LeerByte^0,w,c
  4519   001F28  6E03               	movwf	LeerByte@res^0,c
  4520   001F2A  0604               	decf	LeerByte@i^0,f,c
  4521   001F2C  5004               	movf	LeerByte@i^0,w,c
  4522   001F2E  A4D8               	btfss	status,2,c
  4523   001F30  D7F5               	goto	l1721
  4524                           
  4525                           ;LibDHT11.h: 69: };LibDHT11.h: 70: return res;
  4526   001F32  5003               	movf	LeerByte@res^0,w,c
  4527   001F34  0012               	return		;funcret
  4528   001F36                     __end_of_LeerByte:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _LeerBit *****************
  4532 ;; Defined at:
  4533 ;;		line 73 in file "LibDHT11.h"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  res             1    0[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      unsigned char 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0
  4548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4550 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4551 ;;Total ram usage:        1 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_LeerByte
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text27
  4562   001E20                     __ptext27:
  4563                           	callstack 0
  4564   001E20                     _LeerBit:
  4565                           	callstack 27
  4566                           
  4567                           ;LibDHT11.h: 74: unsigned char res=0;
  4568                           
  4569                           ;incstack = 0
  4570   001E20  0E00               	movlw	0
  4571   001E22  6E01               	movwf	LeerBit@res^0,c
  4572   001E24                     l267:
  4573   001E24  A082               	btfss	3970,0,c	;volatile
  4574   001E26  D7FE               	goto	l267
  4575                           
  4576                           ;LibDHT11.h: 76: _delay((unsigned long)((13)*(8000000/4000000.0)));
  4577   001E28  0E08               	movlw	8
  4578   001E2A                     u2457:
  4579   001E2A  2EE8               	decfsz	wreg,f,c
  4580   001E2C  D7FE               	bra	u2457
  4581   001E2E  D000               	nop2	
  4582                           
  4583                           ;LibDHT11.h: 77: if(RC0==1) res=0;
  4584   001E30  A082               	btfss	3970,0,c	;volatile
  4585   001E32  D002               	goto	l1491
  4586   001E34  0E00               	movlw	0
  4587   001E36  6E01               	movwf	LeerBit@res^0,c
  4588   001E38                     l1491:
  4589                           
  4590                           ;LibDHT11.h: 78: _delay((unsigned long)((22)*(8000000/4000000.0)));
  4591   001E38  0E0E               	movlw	14
  4592   001E3A                     u2467:
  4593   001E3A  2EE8               	decfsz	wreg,f,c
  4594   001E3C  D7FE               	bra	u2467
  4595   001E3E  D000               	nop2	
  4596                           
  4597                           ;LibDHT11.h: 79: if(RC0==1){
  4598   001E40  A082               	btfss	3970,0,c	;volatile
  4599   001E42  D004               	goto	u490
  4600                           
  4601                           ;LibDHT11.h: 80: res=1;
  4602   001E44  0E01               	movlw	1
  4603   001E46  6E01               	movwf	LeerBit@res^0,c
  4604   001E48                     l272:
  4605   001E48  B082               	btfsc	3970,0,c	;volatile
  4606   001E4A  D7FE               	goto	l272
  4607   001E4C                     u490:
  4608                           
  4609                           ;LibDHT11.h: 82: };LibDHT11.h: 83: return res;
  4610   001E4C  5001               	movf	LeerBit@res^0,w,c
  4611   001E4E  0012               	return		;funcret
  4612   001E50                     __end_of_LeerBit:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _LeerEEPROM *****************
  4616 ;; Defined at:
  4617 ;;		line 281 in file "Laboratorio_5.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  dir             2    0[COMRAM] int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      unsigned char 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4631 ;;      Params:         2       0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4634 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:        2 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 1
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text28
  4646   001F88                     __ptext28:
  4647                           	callstack 0
  4648   001F88                     _LeerEEPROM:
  4649                           	callstack 29
  4650                           
  4651                           ;Laboratorio_5.c: 282: EEADR = dir;
  4652                           
  4653                           ;incstack = 0
  4654   001F88  C001  FFA9         	movff	LeerEEPROM@dir,4009	;volatile
  4655                           
  4656                           ;Laboratorio_5.c: 283: EEPGD = 0;
  4657   001F8C  9EA6               	bcf	4006,7,c	;volsfr
  4658                           
  4659                           ;Laboratorio_5.c: 284: CFGS = 0;
  4660   001F8E  9CA6               	bcf	4006,6,c	;volsfr
  4661                           
  4662                           ;Laboratorio_5.c: 285: RD = 1;
  4663   001F90  80A6               	bsf	4006,0,c	;volsfr
  4664                           
  4665                           ;Laboratorio_5.c: 286: return EEDATA;
  4666   001F92  50A8               	movf	168,w,c	;volatile
  4667   001F94  0012               	return		;funcret
  4668   001F96                     __end_of_LeerEEPROM:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _InicializaLCD *****************
  4672 ;; Defined at:
  4673 ;;		line 72 in file "LibLCDXC8.h"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 4
  4694 ;; This function calls:
  4695 ;;		_BorraLCD
  4696 ;;		_EnviaDato
  4697 ;;		_HabilitaLCD
  4698 ;;		_RetardoLCD
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text29
  4705   0018D2                     __ptext29:
  4706                           	callstack 0
  4707   0018D2                     _InicializaLCD:
  4708                           	callstack 26
  4709                           
  4710                           ;LibLCDXC8.h: 74: LATD0=0;
  4711                           
  4712                           ;incstack = 0
  4713   0018D2  908C               	bcf	3980,0,c	;volatile
  4714                           
  4715                           ;LibLCDXC8.h: 75: if(interfaz==4)
  4716   0018D4  0E04               	movlw	4
  4717   0018D6  184C               	xorwf	_interfaz^0,w,c
  4718   0018D8  A4D8               	btfss	status,2,c
  4719   0018DA  D004               	goto	l2735
  4720                           
  4721                           ;LibLCDXC8.h: 76: LATD=(LATD & 0b00001111) | 0x30;
  4722   0018DC  508C               	movf	140,w,c	;volatile
  4723   0018DE  0B0F               	andlw	15
  4724   0018E0  0930               	iorlw	48
  4725   0018E2  D001               	goto	L4
  4726   0018E4                     l2735:
  4727                           
  4728                           ;LibLCDXC8.h: 77: else;LibLCDXC8.h: 78: LATD=0x3F;
  4729   0018E4  0E3F               	movlw	63
  4730   0018E6                     L4:
  4731   0018E6  6E8C               	movwf	140,c	;volatile
  4732                           
  4733                           ;LibLCDXC8.h: 79: HabilitaLCD();
  4734   0018E8  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4735                           
  4736                           ;LibLCDXC8.h: 80: RetardoLCD(1);
  4737   0018EC  0E01               	movlw	1
  4738   0018EE  EC6B  F00D         	call	_RetardoLCD
  4739                           
  4740                           ;LibLCDXC8.h: 81: if(interfaz==4)
  4741   0018F2  0E04               	movlw	4
  4742   0018F4  184C               	xorwf	_interfaz^0,w,c
  4743   0018F6  A4D8               	btfss	status,2,c
  4744   0018F8  D004               	goto	l2745
  4745                           
  4746                           ;LibLCDXC8.h: 82: LATD=(LATD & 0b00001111) | 0x30;
  4747   0018FA  508C               	movf	140,w,c	;volatile
  4748   0018FC  0B0F               	andlw	15
  4749   0018FE  0930               	iorlw	48
  4750   001900  D001               	goto	L5
  4751   001902                     l2745:
  4752                           
  4753                           ;LibLCDXC8.h: 83: else;LibLCDXC8.h: 84: LATD=0x3F;
  4754   001902  0E3F               	movlw	63
  4755   001904                     L5:
  4756   001904  6E8C               	movwf	140,c	;volatile
  4757                           
  4758                           ;LibLCDXC8.h: 85: HabilitaLCD();
  4759   001906  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4760                           
  4761                           ;LibLCDXC8.h: 86: RetardoLCD(3);
  4762   00190A  0E03               	movlw	3
  4763   00190C  EC6B  F00D         	call	_RetardoLCD
  4764                           
  4765                           ;LibLCDXC8.h: 87: if(interfaz==4)
  4766   001910  0E04               	movlw	4
  4767   001912  184C               	xorwf	_interfaz^0,w,c
  4768   001914  A4D8               	btfss	status,2,c
  4769   001916  D004               	goto	l2755
  4770                           
  4771                           ;LibLCDXC8.h: 88: LATD=(LATD & 0b00001111) | 0x30;
  4772   001918  508C               	movf	140,w,c	;volatile
  4773   00191A  0B0F               	andlw	15
  4774   00191C  0930               	iorlw	48
  4775   00191E  D001               	goto	L6
  4776   001920                     l2755:
  4777                           
  4778                           ;LibLCDXC8.h: 89: else;LibLCDXC8.h: 90: LATD=0x3F;
  4779   001920  0E3F               	movlw	63
  4780   001922                     L6:
  4781   001922  6E8C               	movwf	140,c	;volatile
  4782                           
  4783                           ;LibLCDXC8.h: 91: HabilitaLCD();
  4784   001924  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4785                           
  4786                           ;LibLCDXC8.h: 92: RetardoLCD(4);
  4787   001928  0E04               	movlw	4
  4788   00192A  EC6B  F00D         	call	_RetardoLCD
  4789                           
  4790                           ;LibLCDXC8.h: 93: if(interfaz==4){
  4791   00192E  0E04               	movlw	4
  4792   001930  184C               	xorwf	_interfaz^0,w,c
  4793   001932  A4D8               	btfss	status,2,c
  4794   001934  D011               	goto	l2775
  4795                           
  4796                           ;LibLCDXC8.h: 94: LATD=(LATD & 0b00001111) | 0x20;
  4797   001936  508C               	movf	140,w,c	;volatile
  4798   001938  0B0F               	andlw	15
  4799   00193A  0920               	iorlw	32
  4800   00193C  6E8C               	movwf	140,c	;volatile
  4801                           
  4802                           ;LibLCDXC8.h: 95: HabilitaLCD();
  4803   00193E  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4804                           
  4805                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  4806   001942  0E04               	movlw	4
  4807   001944  EC6B  F00D         	call	_RetardoLCD
  4808                           
  4809                           ;LibLCDXC8.h: 97: EnviaDato(0x2F);
  4810   001948  0E2F               	movlw	47
  4811   00194A  EC41  F00E         	call	_EnviaDato
  4812                           
  4813                           ;LibLCDXC8.h: 98: HabilitaLCD();
  4814   00194E  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4815                           
  4816                           ;LibLCDXC8.h: 99: RetardoLCD(4);
  4817   001952  0E04               	movlw	4
  4818   001954  EC6B  F00D         	call	_RetardoLCD
  4819   001958                     l2775:
  4820                           
  4821                           ;LibLCDXC8.h: 100: };LibLCDXC8.h: 101: BorraLCD();
  4822   001958  ECB2  F00F         	call	_BorraLCD	;wreg free
  4823                           
  4824                           ;LibLCDXC8.h: 102: EnviaDato(0xF);
  4825   00195C  0E0F               	movlw	15
  4826   00195E  EC41  F00E         	call	_EnviaDato
  4827                           
  4828                           ;LibLCDXC8.h: 103: HabilitaLCD();
  4829   001962  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4830                           
  4831                           ;LibLCDXC8.h: 104: RetardoLCD(4);
  4832   001966  0E04               	movlw	4
  4833   001968  EC6B  F00D         	call	_RetardoLCD
  4834   00196C  0012               	return		;funcret
  4835   00196E                     __end_of_InicializaLCD:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _BorraLCD *****************
  4839 ;; Defined at:
  4840 ;;		line 113 in file "LibLCDXC8.h"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4857 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 3
  4861 ;; This function calls:
  4862 ;;		_EnviaDato
  4863 ;;		_HabilitaLCD
  4864 ;;		_RetardoLCD
  4865 ;; This function is called by:
  4866 ;;		_InicializaLCD
  4867 ;;		_ComandoLCD
  4868 ;;		_Imprimir
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text30
  4873   001F64                     __ptext30:
  4874                           	callstack 0
  4875   001F64                     _BorraLCD:
  4876                           	callstack 24
  4877                           
  4878                           ;LibLCDXC8.h: 115: LATD0=0;
  4879                           
  4880                           ;incstack = 0
  4881   001F64  908C               	bcf	3980,0,c	;volatile
  4882                           
  4883                           ;LibLCDXC8.h: 116: EnviaDato(0x01);
  4884   001F66  0E01               	movlw	1
  4885   001F68  EC41  F00E         	call	_EnviaDato
  4886                           
  4887                           ;LibLCDXC8.h: 117: HabilitaLCD();
  4888   001F6C  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4889                           
  4890                           ;LibLCDXC8.h: 118: RetardoLCD(2);
  4891   001F70  0E02               	movlw	2
  4892   001F72  EC6B  F00D         	call	_RetardoLCD
  4893   001F76  0012               	return		;funcret
  4894   001F78                     __end_of_BorraLCD:
  4895                           	callstack 0
  4896                           
  4897 ;; *************** function _EnviaDato *****************
  4898 ;; Defined at:
  4899 ;;		line 60 in file "LibLCDXC8.h"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  a               1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  a               1    3[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0
  4914 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4916 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4917 ;;Total ram usage:        2 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 2
  4920 ;; This function calls:
  4921 ;;		_HabilitaLCD
  4922 ;;		_RetardoLCD
  4923 ;; This function is called by:
  4924 ;;		_InicializaLCD
  4925 ;;		_BorraLCD
  4926 ;;		_ComandoLCD
  4927 ;;		_EscribeLCD_c
  4928 ;;		_EscribeLCD_n8
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text31
  4933   001C82                     __ptext31:
  4934                           	callstack 0
  4935   001C82                     _EnviaDato:
  4936                           	callstack 24
  4937                           
  4938                           ;incstack = 0
  4939                           ;EnviaDato@a stored from wreg
  4940   001C82  6E04               	movwf	EnviaDato@a^0,c
  4941                           
  4942                           ;LibLCDXC8.h: 61: if(interfaz==4){
  4943   001C84  0E04               	movlw	4
  4944   001C86  184C               	xorwf	_interfaz^0,w,c
  4945   001C88  A4D8               	btfss	status,2,c
  4946   001C8A  D017               	goto	l2139
  4947                           
  4948                           ;LibLCDXC8.h: 62: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4949   001C8C  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  4950   001C90  0EF0               	movlw	240
  4951   001C92  1603               	andwf	??_EnviaDato^0,f,c
  4952   001C94  508C               	movf	140,w,c	;volatile
  4953   001C96  0B0F               	andlw	15
  4954   001C98  1003               	iorwf	??_EnviaDato^0,w,c
  4955   001C9A  6E8C               	movwf	140,c	;volatile
  4956                           
  4957                           ;LibLCDXC8.h: 63: HabilitaLCD();
  4958   001C9C  ECCB  F00F         	call	_HabilitaLCD	;wreg free
  4959                           
  4960                           ;LibLCDXC8.h: 64: RetardoLCD(1);
  4961   001CA0  0E01               	movlw	1
  4962   001CA2  EC6B  F00D         	call	_RetardoLCD
  4963                           
  4964                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | (a<<4);
  4965   001CA6  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  4966   001CAA  3A03               	swapf	??_EnviaDato^0,f,c
  4967   001CAC  0EF0               	movlw	240
  4968   001CAE  1603               	andwf	??_EnviaDato^0,f,c
  4969   001CB0  508C               	movf	140,w,c	;volatile
  4970   001CB2  0B0F               	andlw	15
  4971   001CB4  1003               	iorwf	??_EnviaDato^0,w,c
  4972   001CB6  6E8C               	movwf	140,c	;volatile
  4973                           
  4974                           ;LibLCDXC8.h: 68: }else if(interfaz==8){
  4975   001CB8  0012               	return	
  4976   001CBA                     l2139:
  4977   001CBA  0E08               	movlw	8
  4978   001CBC  184C               	xorwf	_interfaz^0,w,c
  4979   001CBE  A4D8               	btfss	status,2,c
  4980   001CC0  0012               	return	
  4981                           
  4982                           ;LibLCDXC8.h: 69: LATD=a;
  4983   001CC2  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  4984   001CC6  0012               	return		;funcret
  4985   001CC8                     __end_of_EnviaDato:
  4986                           	callstack 0
  4987                           
  4988 ;; *************** function _RetardoLCD *****************
  4989 ;; Defined at:
  4990 ;;		line 413 in file "LibLCDXC8.h"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  a               1    wreg     unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  a               1    1[COMRAM] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0
  5005 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5007 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5008 ;;Total ram usage:        2 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_EnviaDato
  5015 ;;		_InicializaLCD
  5016 ;;		_BorraLCD
  5017 ;;		_ComandoLCD
  5018 ;;		_EscribeLCD_c
  5019 ;;		_EscribeLCD_n8
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text32
  5024   001AD6                     __ptext32:
  5025                           	callstack 0
  5026   001AD6                     _RetardoLCD:
  5027                           	callstack 25
  5028                           
  5029                           ;incstack = 0
  5030                           ;RetardoLCD@a stored from wreg
  5031   001AD6  6E02               	movwf	RetardoLCD@a^0,c
  5032                           
  5033                           ;LibLCDXC8.h: 414: switch(a){
  5034   001AD8  D023               	goto	l2127
  5035   001ADA                     l2117:
  5036   001ADA  0E27               	movlw	39
  5037   001ADC  6E01               	movwf	??_RetardoLCD^0,c
  5038   001ADE  0EF5               	movlw	245
  5039   001AE0                     u2477:
  5040   001AE0  2EE8               	decfsz	wreg,f,c
  5041   001AE2  D7FE               	bra	u2477
  5042   001AE4  2E01               	decfsz	??_RetardoLCD^0,f,c
  5043   001AE6  D7FC               	bra	u2477
  5044   001AE8  F000               	nop	
  5045                           
  5046                           ;LibLCDXC8.h: 417: break;
  5047   001AEA  0012               	return	
  5048   001AEC                     l2119:
  5049   001AEC  0E03               	movlw	3
  5050   001AEE  6E01               	movwf	??_RetardoLCD^0,c
  5051   001AF0  0E98               	movlw	152
  5052   001AF2                     u2487:
  5053   001AF2  2EE8               	decfsz	wreg,f,c
  5054   001AF4  D7FE               	bra	u2487
  5055   001AF6  2E01               	decfsz	??_RetardoLCD^0,f,c
  5056   001AF8  D7FC               	bra	u2487
  5057                           
  5058                           ;LibLCDXC8.h: 419: _delay((unsigned long)((640)*(8000000/4000000.0)));
  5059   001AFA  0EB6               	movlw	182
  5060   001AFC                     u2497:
  5061   001AFC  D000               	nop2	
  5062   001AFE  D000               	nop2	
  5063   001B00  2EE8               	decfsz	wreg,f,c
  5064   001B02  D7FC               	bra	u2497
  5065   001B04  D000               	nop2	
  5066   001B06  D000               	nop2	
  5067   001B08  D000               	nop2	
  5068                           
  5069                           ;LibLCDXC8.h: 421: break;
  5070   001B0A  0012               	return	
  5071   001B0C                     l2121:
  5072   001B0C  0E42               	movlw	66
  5073   001B0E                     u2507:
  5074   001B0E  2EE8               	decfsz	wreg,f,c
  5075   001B10  D7FE               	bra	u2507
  5076   001B12  D000               	nop2	
  5077                           
  5078                           ;LibLCDXC8.h: 424: break;
  5079   001B14  0012               	return	
  5080   001B16                     l2123:
  5081   001B16  0E1A               	movlw	26
  5082   001B18                     u2517:
  5083   001B18  2EE8               	decfsz	wreg,f,c
  5084   001B1A  D7FE               	bra	u2517
  5085   001B1C  D000               	nop2	
  5086                           
  5087                           ;LibLCDXC8.h: 427: break;
  5088   001B1E  0012               	return	
  5089   001B20                     l2127:
  5090   001B20  5002               	movf	RetardoLCD@a^0,w,c
  5091                           
  5092                           ; Switch size 1, requested type "simple"
  5093                           ; Number of cases is 4, Range of values is 1 to 4
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte           13     7 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098   001B22  0A01               	xorlw	1	; case 1
  5099   001B24  B4D8               	btfsc	status,2,c
  5100   001B26  D7D9               	goto	l2117
  5101   001B28  0A03               	xorlw	3	; case 2
  5102   001B2A  B4D8               	btfsc	status,2,c
  5103   001B2C  D7DF               	goto	l2119
  5104   001B2E  0A01               	xorlw	1	; case 3
  5105   001B30  B4D8               	btfsc	status,2,c
  5106   001B32  D7EC               	goto	l2121
  5107   001B34  0A07               	xorlw	7	; case 4
  5108   001B36  A4D8               	btfss	status,2,c
  5109   001B38  0012               	return	
  5110   001B3A  D7ED               	goto	l2123
  5111   001B3C                     __end_of_RetardoLCD:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _HabilitaLCD *****************
  5115 ;; Defined at:
  5116 ;;		line 106 in file "LibLCDXC8.h"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 1
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_EnviaDato
  5141 ;;		_InicializaLCD
  5142 ;;		_BorraLCD
  5143 ;;		_ComandoLCD
  5144 ;;		_EscribeLCD_c
  5145 ;;		_EscribeLCD_n8
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text33
  5150   001F96                     __ptext33:
  5151                           	callstack 0
  5152   001F96                     _HabilitaLCD:
  5153                           	callstack 25
  5154                           
  5155                           ;LibLCDXC8.h: 108: LATD1=1;
  5156                           
  5157                           ;incstack = 0
  5158   001F96  828C               	bsf	3980,1,c	;volatile
  5159                           
  5160                           ;LibLCDXC8.h: 109: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5161   001F98  0E1A               	movlw	26
  5162   001F9A                     u2527:
  5163   001F9A  2EE8               	decfsz	wreg,f,c
  5164   001F9C  D7FE               	bra	u2527
  5165   001F9E  D000               	nop2	
  5166                           
  5167                           ;LibLCDXC8.h: 111: LATD1=0;
  5168   001FA0  928C               	bcf	3980,1,c	;volatile
  5169   001FA2  0012               	return		;funcret
  5170   001FA4                     __end_of_HabilitaLCD:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _GuardarEEPROM *****************
  5174 ;; Defined at:
  5175 ;;		line 289 in file "Laboratorio_5.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  dir             2    0[COMRAM] int 
  5178 ;;  data            1    2[COMRAM] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5190 ;;      Params:         3       0       0       0       0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5193 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5194 ;;Total ram usage:        3 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text34
  5205   001ECA                     __ptext34:
  5206                           	callstack 0
  5207   001ECA                     _GuardarEEPROM:
  5208                           	callstack 29
  5209                           
  5210                           ;Laboratorio_5.c: 290: EEADR = dir;
  5211                           
  5212                           ;incstack = 0
  5213   001ECA  C001  FFA9         	movff	GuardarEEPROM@dir,4009	;volatile
  5214                           
  5215                           ;Laboratorio_5.c: 291: EEDATA = data;
  5216   001ECE  C003  FFA8         	movff	GuardarEEPROM@data,4008	;volatile
  5217                           
  5218                           ;Laboratorio_5.c: 292: EEPGD = 0;
  5219   001ED2  9EA6               	bcf	4006,7,c	;volsfr
  5220                           
  5221                           ;Laboratorio_5.c: 293: CFGS = 0;
  5222   001ED4  9CA6               	bcf	4006,6,c	;volsfr
  5223                           
  5224                           ;Laboratorio_5.c: 294: WREN = 1;
  5225   001ED6  84A6               	bsf	4006,2,c	;volsfr
  5226                           
  5227                           ;Laboratorio_5.c: 296: GIE = 0;
  5228   001ED8  9EF2               	bcf	4082,7,c	;volatile
  5229                           
  5230                           ;Laboratorio_5.c: 299: EECON2 = 0x55;
  5231   001EDA  0E55               	movlw	85
  5232   001EDC  6EA7               	movwf	167,c	;volsfr
  5233                           
  5234                           ;Laboratorio_5.c: 300: EECON2 = 0X0AA;
  5235   001EDE  0EAA               	movlw	170
  5236   001EE0  6EA7               	movwf	167,c	;volsfr
  5237                           
  5238                           ;Laboratorio_5.c: 301: WR = 1;
  5239   001EE2  82A6               	bsf	4006,1,c	;volsfr
  5240                           
  5241                           ;Laboratorio_5.c: 303: GIE = 1;
  5242   001EE4  8EF2               	bsf	4082,7,c	;volatile
  5243   001EE6                     l388:
  5244   001EE6  A8A1               	btfss	4001,4,c	;volatile
  5245   001EE8  D7FE               	goto	l388
  5246                           
  5247                           ;Laboratorio_5.c: 305: EEIF = 0;
  5248   001EEA  98A1               	bcf	4001,4,c	;volatile
  5249                           
  5250                           ;Laboratorio_5.c: 306: WREN = 0;
  5251   001EEC  94A6               	bcf	4006,2,c	;volsfr
  5252   001EEE  0012               	return		;funcret
  5253   001EF0                     __end_of_GuardarEEPROM:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _Existe_en_Arreglo *****************
  5257 ;; Defined at:
  5258 ;;		line 155 in file "Laboratorio_5.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  Elemento        1    wreg     unsigned char 
  5261 ;;  Arreglo         1    3[COMRAM] PTR unsigned char 
  5262 ;;		 -> STR_3(5), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  Elemento        1    5[COMRAM] unsigned char 
  5265 ;;  i               2    7[COMRAM] int 
  5266 ;;  Contenido       1    6[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         1       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        6 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 2
  5283 ;; This function calls:
  5284 ;;		_strlen
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text35
  5291   001C38                     __ptext35:
  5292                           	callstack 0
  5293   001C38                     _Existe_en_Arreglo:
  5294                           	callstack 28
  5295                           
  5296                           ;incstack = 0
  5297                           ;Existe_en_Arreglo@Elemento stored from wreg
  5298   001C38  6E06               	movwf	Existe_en_Arreglo@Elemento^0,c
  5299                           
  5300                           ;Laboratorio_5.c: 157: unsigned char Contenido = 0;
  5301   001C3A  0E00               	movlw	0
  5302   001C3C  6E07               	movwf	Existe_en_Arreglo@Contenido^0,c
  5303                           
  5304                           ;Laboratorio_5.c: 158: for (int i = 0; i < strlen(Arreglo); i++){
  5305   001C3E  0E00               	movlw	0
  5306   001C40  6E09               	movwf	(Existe_en_Arreglo@i+1)^0,c
  5307   001C42  0E00               	movlw	0
  5308   001C44  6E08               	movwf	Existe_en_Arreglo@i^0,c
  5309   001C46  D011               	goto	l2845
  5310   001C48                     l2839:
  5311                           
  5312                           ;Laboratorio_5.c: 159: if (Arreglo[i] == Elemento){
  5313   001C48  5004               	movf	Existe_en_Arreglo@Arreglo^0,w,c
  5314   001C4A  2408               	addwf	Existe_en_Arreglo@i^0,w,c
  5315   001C4C  6E05               	movwf	??_Existe_en_Arreglo^0,c
  5316   001C4E  C005  FFF6         	movff	??_Existe_en_Arreglo,tblptrl
  5317   001C52                     	if	1	;There is more than 1 active tblptr byte
  5318   001C52  0E08               	movlw	high __smallconst
  5319   001C54  6EF7               	movwf	tblptrh,c
  5320   001C56                     	endif
  5321   001C56                     	if	0	;tblptru may be non-zero
  5322   001C56                     	endif
  5323   001C56                     	if	0	;tblptru may be non-zero
  5324   001C56                     	endif
  5325   001C56  0008               	tblrd		*
  5326   001C58  50F5               	movf	tablat,w,c
  5327   001C5A  1806               	xorwf	Existe_en_Arreglo@Elemento^0,w,c
  5328   001C5C  A4D8               	btfss	status,2,c
  5329   001C5E  D003               	goto	l2843
  5330                           
  5331                           ;Laboratorio_5.c: 160: Contenido = 1;
  5332   001C60  0E01               	movlw	1
  5333   001C62  6E07               	movwf	Existe_en_Arreglo@Contenido^0,c
  5334                           
  5335                           ;Laboratorio_5.c: 161: break;
  5336   001C64  D00C               	goto	u2260
  5337   001C66                     l2843:
  5338   001C66  4A08               	infsnz	Existe_en_Arreglo@i^0,f,c
  5339   001C68  2A09               	incf	(Existe_en_Arreglo@i+1)^0,f,c
  5340   001C6A                     l2845:
  5341   001C6A  C004  F001         	movff	Existe_en_Arreglo@Arreglo,strlen@s
  5342   001C6E  EC3D  F00F         	call	_strlen	;wreg free
  5343   001C72  5001               	movf	?_strlen^0,w,c
  5344   001C74  5C08               	subwf	Existe_en_Arreglo@i^0,w,c
  5345   001C76  5002               	movf	(?_strlen+1)^0,w,c
  5346   001C78  5809               	subwfb	(Existe_en_Arreglo@i+1)^0,w,c
  5347   001C7A  A0D8               	btfss	status,0,c
  5348   001C7C  D7E5               	goto	l2839
  5349   001C7E                     u2260:
  5350                           
  5351                           ;Laboratorio_5.c: 162: };Laboratorio_5.c: 163: }return Contenido;
  5352   001C7E  5007               	movf	Existe_en_Arreglo@Contenido^0,w,c
  5353   001C80  0012               	return		;funcret
  5354   001C82                     __end_of_Existe_en_Arreglo:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _strlen *****************
  5358 ;; Defined at:
  5359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  s               1    0[COMRAM] PTR const unsigned char 
  5362 ;;		 -> STR_6(3), STR_5(6), STR_4(7), STR_3(5), 
  5363 ;;		 -> STR_2(3), STR_1(7), 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  5366 ;;		 -> STR_6(3), STR_5(6), STR_4(7), STR_3(5), 
  5367 ;;		 -> STR_2(3), STR_1(7), 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    0[COMRAM] unsigned int 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         2       0       0       0       0       0       0       0       0
  5378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5380 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5381 ;;Total ram usage:        3 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 1
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_MensajeLCD_Var
  5388 ;;		_Existe_en_Arreglo
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text36
  5393   001E7A                     __ptext36:
  5394                           	callstack 0
  5395   001E7A                     _strlen:
  5396                           	callstack 26
  5397                           
  5398                           ;incstack = 0
  5399   001E7A  C001  F003         	movff	strlen@s,strlen@cp
  5400   001E7E  D001               	goto	l2199
  5401   001E80                     l2197:
  5402   001E80  2A03               	incf	strlen@cp^0,f,c
  5403   001E82                     l2199:
  5404   001E82  C003  FFF6         	movff	strlen@cp,tblptrl
  5405   001E86                     	if	1	;There is more than 1 active tblptr byte
  5406   001E86  0E08               	movlw	high __smallconst
  5407   001E88  6EF7               	movwf	tblptrh,c
  5408   001E8A                     	endif
  5409   001E8A                     	if	0	;tblptru may be non-zero
  5410   001E8A                     	endif
  5411   001E8A                     	if	0	;tblptru may be non-zero
  5412   001E8A                     	endif
  5413   001E8A  0008               	tblrd		*
  5414   001E8C  50F5               	movf	tablat,w,c
  5415   001E8E  0900               	iorlw	0
  5416   001E90  A4D8               	btfss	status,2,c
  5417   001E92  D7F6               	goto	l2197
  5418   001E94  5001               	movf	strlen@s^0,w,c
  5419   001E96  5C03               	subwf	strlen@cp^0,w,c
  5420   001E98  6E01               	movwf	?_strlen^0,c
  5421   001E9A  6A02               	clrf	(?_strlen+1)^0,c
  5422   001E9C  BE01               	btfsc	?_strlen^0,7,c
  5423   001E9E  0602               	decf	(?_strlen+1)^0,f,c
  5424   001EA0  0012               	return		;funcret
  5425   001EA2                     __end_of_strlen:
  5426                           	callstack 0
  5427                           
  5428 ;; *************** function _Conversion *****************
  5429 ;; Defined at:
  5430 ;;		line 185 in file "Laboratorio_5.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  2    0[COMRAM] unsigned int 
  5437 ;; Registers used:
  5438 ;;		None
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5444 ;;      Params:         2       0       0       0       0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used: 1
  5450 ;; Hardware stack levels required when called: 1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text37
  5459   001F78                     __ptext37:
  5460                           	callstack 0
  5461   001F78                     _Conversion:
  5462                           	callstack 29
  5463                           
  5464                           ;Laboratorio_5.c: 186: GO=1;
  5465                           
  5466                           ;incstack = 0
  5467   001F78  82C2               	bsf	4034,1,c	;volatile
  5468   001F7A                     l340:
  5469   001F7A  B2C2               	btfsc	4034,1,c	;volatile
  5470   001F7C  D7FE               	goto	l340
  5471                           
  5472                           ;Laboratorio_5.c: 188: return ADRES;
  5473   001F7E  CFC3 F001          	movff	4035,?_Conversion	;volatile
  5474   001F82  CFC4 F002          	movff	4036,?_Conversion+1	;volatile
  5475   001F86  0012               	return		;funcret
  5476   001F88                     __end_of_Conversion:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _ConmutarLED *****************
  5480 ;; Defined at:
  5481 ;;		line 239 in file "Laboratorio_5.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  Valor           1    wreg     unsigned char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  Valor           1    0[COMRAM] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  2   82[None  ] int 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5498 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:        1 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 1
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_main
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text38
  5510   001B3C                     __ptext38:
  5511                           	callstack 0
  5512   001B3C                     _ConmutarLED:
  5513                           	callstack 29
  5514                           
  5515                           ;incstack = 0
  5516                           ;ConmutarLED@Valor stored from wreg
  5517   001B3C  6E01               	movwf	ConmutarLED@Valor^0,c
  5518                           
  5519                           ;Laboratorio_5.c: 241: if (Valor < 22) LATE=0b00000000;
  5520   001B3E  0E16               	movlw	22
  5521   001B40  6001               	cpfslt	ConmutarLED@Valor^0,c
  5522   001B42  D003               	goto	l1925
  5523   001B44  0E00               	movlw	0
  5524   001B46  6E8D               	movwf	141,c	;volatile
  5525   001B48  0012               	return	
  5526   001B4A                     l1925:
  5527                           
  5528                           ;Laboratorio_5.c: 242: else if(Valor < 25) LATE=0b00000101;
  5529   001B4A  0E19               	movlw	25
  5530   001B4C  6001               	cpfslt	ConmutarLED@Valor^0,c
  5531   001B4E  D003               	goto	l1929
  5532   001B50  0E05               	movlw	5
  5533   001B52  6E8D               	movwf	141,c	;volatile
  5534   001B54  0012               	return	
  5535   001B56                     l1929:
  5536                           
  5537                           ;Laboratorio_5.c: 243: else if(Valor < 28) LATE=0b00000100;
  5538   001B56  0E1C               	movlw	28
  5539   001B58  6001               	cpfslt	ConmutarLED@Valor^0,c
  5540   001B5A  D003               	goto	l1933
  5541   001B5C  0E04               	movlw	4
  5542   001B5E  6E8D               	movwf	141,c	;volatile
  5543   001B60  0012               	return	
  5544   001B62                     l1933:
  5545                           
  5546                           ;Laboratorio_5.c: 244: else if(Valor < 31) LATE=0b00000110;
  5547   001B62  0E1F               	movlw	31
  5548   001B64  6001               	cpfslt	ConmutarLED@Valor^0,c
  5549   001B66  D003               	goto	l1937
  5550   001B68  0E06               	movlw	6
  5551   001B6A  6E8D               	movwf	141,c	;volatile
  5552   001B6C  0012               	return	
  5553   001B6E                     l1937:
  5554                           
  5555                           ;Laboratorio_5.c: 245: else if(Valor < 34) LATE=0b00000010;
  5556   001B6E  0E22               	movlw	34
  5557   001B70  6001               	cpfslt	ConmutarLED@Valor^0,c
  5558   001B72  D003               	goto	l1941
  5559   001B74  0E02               	movlw	2
  5560   001B76  6E8D               	movwf	141,c	;volatile
  5561   001B78  0012               	return	
  5562   001B7A                     l1941:
  5563                           
  5564                           ;Laboratorio_5.c: 246: else if(Valor < 37) LATE=0b00000011;
  5565   001B7A  0E25               	movlw	37
  5566   001B7C  6001               	cpfslt	ConmutarLED@Valor^0,c
  5567   001B7E  D003               	goto	l1945
  5568   001B80  0E03               	movlw	3
  5569   001B82  6E8D               	movwf	141,c	;volatile
  5570   001B84  0012               	return	
  5571   001B86                     l1945:
  5572                           
  5573                           ;Laboratorio_5.c: 247: else if(Valor < 40) LATE=0b00000001;
  5574   001B86  0E28               	movlw	40
  5575   001B88  6001               	cpfslt	ConmutarLED@Valor^0,c
  5576   001B8A  D003               	goto	l1949
  5577   001B8C  0E01               	movlw	1
  5578   001B8E  6E8D               	movwf	141,c	;volatile
  5579   001B90  0012               	return	
  5580   001B92                     l1949:
  5581                           
  5582                           ;Laboratorio_5.c: 248: else LATE=0b00000111;
  5583   001B92  0E07               	movlw	7
  5584   001B94  6E8D               	movwf	141,c	;volatile
  5585   001B96  0012               	return		;funcret
  5586   001B98                     __end_of_ConmutarLED:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _ConfiguraLCD *****************
  5590 ;; Defined at:
  5591 ;;		line 56 in file "LibLCDXC8.h"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  a               1    wreg     unsigned char 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  a               1    0[COMRAM] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5608 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        1 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text39
  5620   001F36                     __ptext39:
  5621                           	callstack 0
  5622   001F36                     _ConfiguraLCD:
  5623                           	callstack 29
  5624                           
  5625                           ;incstack = 0
  5626                           ;ConfiguraLCD@a stored from wreg
  5627   001F36  6E01               	movwf	ConfiguraLCD@a^0,c
  5628                           
  5629                           ;LibLCDXC8.h: 57: if(a==4 | a ==8)
  5630   001F38  0E04               	movlw	4
  5631   001F3A  1801               	xorwf	ConfiguraLCD@a^0,w,c
  5632   001F3C  B4D8               	btfsc	status,2,c
  5633   001F3E  D004               	goto	u930
  5634   001F40  0E08               	movlw	8
  5635   001F42  1801               	xorwf	ConfiguraLCD@a^0,w,c
  5636   001F44  A4D8               	btfss	status,2,c
  5637   001F46  0012               	return	
  5638   001F48                     u930:
  5639                           
  5640                           ;LibLCDXC8.h: 58: interfaz=a;
  5641   001F48  C001  F04C         	movff	ConfiguraLCD@a,_interfaz
  5642   001F4C  0012               	return		;funcret
  5643   001F4E                     __end_of_ConfiguraLCD:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _Recepcion_TMR *****************
  5647 ;; Defined at:
  5648 ;;		line 167 in file "Laboratorio_5.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used: 1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		Interrupt level 2
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	intcode
  5676   000008                     __pintcode:
  5677                           	callstack 0
  5678   000008                     _Recepcion_TMR:
  5679                           	callstack 24
  5680                           
  5681                           ;incstack = 0
  5682   000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5683   00000A  ED51  F00F         	call	int_func,f	;refresh shadow registers
  5684                           
  5685                           	psect	intcode_body
  5686   001EA2                     __pintcode_body:
  5687                           	callstack 24
  5688   001EA2                     int_func:
  5689                           	callstack 24
  5690   001EA2  0006               	pop		; remove dummy address from shadow register refresh
  5691                           
  5692                           ;Laboratorio_5.c: 169: if (RCIF == 1){
  5693   001EA4  AA9E               	btfss	3998,5,c	;volatile
  5694   001EA6  D003               	goto	i2l329
  5695                           
  5696                           ;Laboratorio_5.c: 170: UnitTemp = RCREG;
  5697   001EA8  CFAE F04B          	movff	4014,_UnitTemp	;volatile
  5698                           
  5699                           ;Laboratorio_5.c: 171: RCIF = 0;
  5700   001EAC  9A9E               	bcf	3998,5,c	;volatile
  5701   001EAE                     i2l329:
  5702                           
  5703                           ;Laboratorio_5.c: 173: }if (TMR0IF == 1){
  5704   001EAE  A4F2               	btfss	4082,2,c	;volatile
  5705   001EB0  D00A               	goto	i2u128_45
  5706                           
  5707                           ;Laboratorio_5.c: 174: TMR0 = 49911;
  5708   001EB2  0EC2               	movlw	194
  5709   001EB4  6ED7               	movwf	215,c	;volatile
  5710   001EB6  0EF7               	movlw	247
  5711   001EB8  6ED6               	movwf	214,c	;volatile
  5712                           
  5713                           ;Laboratorio_5.c: 175: TMR0IF = 0;
  5714   001EBA  94F2               	bcf	4082,2,c	;volatile
  5715                           
  5716                           ;Laboratorio_5.c: 176: LATA5 = 1^LATA5;
  5717   001EBC  BA89               	btfsc	3977,5,c	;volatile
  5718   001EBE  D002               	goto	i2u127_40
  5719   001EC0  8A89               	bsf	3977,5,c	;volatile
  5720   001EC2  D001               	goto	i2u128_45
  5721   001EC4                     i2u127_40:
  5722   001EC4  9A89               	bcf	3977,5,c	;volatile
  5723   001EC6                     i2u128_45:
  5724   001EC6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5725   001EC8  0011               	retfie		f
  5726   001ECA                     __end_of_Recepcion_TMR:
  5727                           	callstack 0
  5728                           
  5729                           	psect	rparam
  5730   000000                     
  5731                           	psect	temp
  5732   00004D                     btemp:
  5733                           	callstack 0
  5734   00004D                     	ds	1
  5735   000000                     int$flags	set	btemp
  5736   000000                     wtemp8	set	btemp+1
  5737   000000                     ttemp5	set	btemp+1
  5738   000000                     ttemp6	set	btemp+4
  5739   000000                     ttemp7	set	btemp+8
  5740                           
  5741                           	psect	idloc
  5742                           
  5743                           ;Config register IDLOC0 @ 0x200000
  5744                           ;	unspecified, using default values
  5745   200000                     	org	2097152
  5746   200000  FF                 	db	255
  5747                           
  5748                           ;Config register IDLOC1 @ 0x200001
  5749                           ;	unspecified, using default values
  5750   200001                     	org	2097153
  5751   200001  FF                 	db	255
  5752                           
  5753                           ;Config register IDLOC2 @ 0x200002
  5754                           ;	unspecified, using default values
  5755   200002                     	org	2097154
  5756   200002  FF                 	db	255
  5757                           
  5758                           ;Config register IDLOC3 @ 0x200003
  5759                           ;	unspecified, using default values
  5760   200003                     	org	2097155
  5761   200003  FF                 	db	255
  5762                           
  5763                           ;Config register IDLOC4 @ 0x200004
  5764                           ;	unspecified, using default values
  5765   200004                     	org	2097156
  5766   200004  FF                 	db	255
  5767                           
  5768                           ;Config register IDLOC5 @ 0x200005
  5769                           ;	unspecified, using default values
  5770   200005                     	org	2097157
  5771   200005  FF                 	db	255
  5772                           
  5773                           ;Config register IDLOC6 @ 0x200006
  5774                           ;	unspecified, using default values
  5775   200006                     	org	2097158
  5776   200006  FF                 	db	255
  5777                           
  5778                           ;Config register IDLOC7 @ 0x200007
  5779                           ;	unspecified, using default values
  5780   200007                     	org	2097159
  5781   200007  FF                 	db	255
  5782                           
  5783                           	psect	config
  5784                           
  5785                           ;Config register CONFIG1L @ 0x300000
  5786                           ;	unspecified, using default values
  5787                           ;	PLL Prescaler Selection bits
  5788                           ;	PLLDIV = 0x0, unprogrammed default
  5789                           ;	System Clock Postscaler Selection bits
  5790                           ;	CPUDIV = 0x0, unprogrammed default
  5791                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5792                           ;	USBDIV = 0x0, unprogrammed default
  5793   300000                     	org	3145728
  5794   300000  00                 	db	0
  5795                           
  5796                           ;Config register CONFIG1H @ 0x300001
  5797                           ;	Oscillator Selection bits
  5798                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5799                           ;	Fail-Safe Clock Monitor Enable bit
  5800                           ;	FCMEN = 0x0, unprogrammed default
  5801                           ;	Internal/External Oscillator Switchover bit
  5802                           ;	IESO = 0x0, unprogrammed default
  5803   300001                     	org	3145729
  5804   300001  09                 	db	9
  5805                           
  5806                           ;Config register CONFIG2L @ 0x300002
  5807                           ;	unspecified, using default values
  5808                           ;	Power-up Timer Enable bit
  5809                           ;	PWRT = 0x1, unprogrammed default
  5810                           ;	Brown-out Reset Enable bits
  5811                           ;	BOR = 0x3, unprogrammed default
  5812                           ;	Brown-out Reset Voltage bits
  5813                           ;	BORV = 0x3, unprogrammed default
  5814                           ;	USB Voltage Regulator Enable bit
  5815                           ;	VREGEN = 0x0, unprogrammed default
  5816   300002                     	org	3145730
  5817   300002  1F                 	db	31
  5818                           
  5819                           ;Config register CONFIG2H @ 0x300003
  5820                           ;	unspecified, using default values
  5821                           ;	Watchdog Timer Enable bit
  5822                           ;	WDT = 0x1, unprogrammed default
  5823                           ;	Watchdog Timer Postscale Select bits
  5824                           ;	WDTPS = 0xF, unprogrammed default
  5825   300003                     	org	3145731
  5826   300003  1F                 	db	31
  5827                           
  5828                           ; Padding undefined space
  5829   300004                     	org	3145732
  5830   300004  FF                 	db	255
  5831                           
  5832                           ;Config register CONFIG3H @ 0x300005
  5833                           ;	CCP2 MUX bit
  5834                           ;	CCP2MX = 0x1, unprogrammed default
  5835                           ;	PORTB A/D Enable bit
  5836                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5837                           ;	Low-Power Timer 1 Oscillator Enable bit
  5838                           ;	LPT1OSC = 0x0, unprogrammed default
  5839                           ;	MCLR Pin Enable bit
  5840                           ;	MCLRE = 0x1, unprogrammed default
  5841   300005                     	org	3145733
  5842   300005  81                 	db	129
  5843                           
  5844                           ;Config register CONFIG4L @ 0x300006
  5845                           ;	Stack Full/Underflow Reset Enable bit
  5846                           ;	STVREN = 0x1, unprogrammed default
  5847                           ;	Single-Supply ICSP Enable bit
  5848                           ;	LVP = OFF, Single-Supply ICSP disabled
  5849                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5850                           ;	ICPRT = 0x0, unprogrammed default
  5851                           ;	Extended Instruction Set Enable bit
  5852                           ;	XINST = 0x0, unprogrammed default
  5853                           ;	Background Debugger Enable bit
  5854                           ;	DEBUG = 0x1, unprogrammed default
  5855   300006                     	org	3145734
  5856   300006  81                 	db	129
  5857                           
  5858                           ; Padding undefined space
  5859   300007                     	org	3145735
  5860   300007  FF                 	db	255
  5861                           
  5862                           ;Config register CONFIG5L @ 0x300008
  5863                           ;	unspecified, using default values
  5864                           ;	Code Protection bit
  5865                           ;	CP0 = 0x1, unprogrammed default
  5866                           ;	Code Protection bit
  5867                           ;	CP1 = 0x1, unprogrammed default
  5868                           ;	Code Protection bit
  5869                           ;	CP2 = 0x1, unprogrammed default
  5870                           ;	Code Protection bit
  5871                           ;	CP3 = 0x1, unprogrammed default
  5872   300008                     	org	3145736
  5873   300008  0F                 	db	15
  5874                           
  5875                           ;Config register CONFIG5H @ 0x300009
  5876                           ;	unspecified, using default values
  5877                           ;	Boot Block Code Protection bit
  5878                           ;	CPB = 0x1, unprogrammed default
  5879                           ;	Data EEPROM Code Protection bit
  5880                           ;	CPD = 0x1, unprogrammed default
  5881   300009                     	org	3145737
  5882   300009  C0                 	db	192
  5883                           
  5884                           ;Config register CONFIG6L @ 0x30000A
  5885                           ;	unspecified, using default values
  5886                           ;	Write Protection bit
  5887                           ;	WRT0 = 0x1, unprogrammed default
  5888                           ;	Write Protection bit
  5889                           ;	WRT1 = 0x1, unprogrammed default
  5890                           ;	Write Protection bit
  5891                           ;	WRT2 = 0x1, unprogrammed default
  5892                           ;	Write Protection bit
  5893                           ;	WRT3 = 0x1, unprogrammed default
  5894   30000A                     	org	3145738
  5895   30000A  0F                 	db	15
  5896                           
  5897                           ;Config register CONFIG6H @ 0x30000B
  5898                           ;	unspecified, using default values
  5899                           ;	Configuration Register Write Protection bit
  5900                           ;	WRTC = 0x1, unprogrammed default
  5901                           ;	Boot Block Write Protection bit
  5902                           ;	WRTB = 0x1, unprogrammed default
  5903                           ;	Data EEPROM Write Protection bit
  5904                           ;	WRTD = 0x1, unprogrammed default
  5905   30000B                     	org	3145739
  5906   30000B  E0                 	db	224
  5907                           
  5908                           ;Config register CONFIG7L @ 0x30000C
  5909                           ;	unspecified, using default values
  5910                           ;	Table Read Protection bit
  5911                           ;	EBTR0 = 0x1, unprogrammed default
  5912                           ;	Table Read Protection bit
  5913                           ;	EBTR1 = 0x1, unprogrammed default
  5914                           ;	Table Read Protection bit
  5915                           ;	EBTR2 = 0x1, unprogrammed default
  5916                           ;	Table Read Protection bit
  5917                           ;	EBTR3 = 0x1, unprogrammed default
  5918   30000C                     	org	3145740
  5919   30000C  0F                 	db	15
  5920                           
  5921                           ;Config register CONFIG7H @ 0x30000D
  5922                           ;	unspecified, using default values
  5923                           ;	Boot Block Table Read Protection bit
  5924                           ;	EBTRB = 0x1, unprogrammed default
  5925   30000D                     	org	3145741
  5926   30000D  40                 	db	64
  5927                           tosu	equ	0xFFF
  5928                           tosh	equ	0xFFE
  5929                           tosl	equ	0xFFD
  5930                           stkptr	equ	0xFFC
  5931                           pclatu	equ	0xFFB
  5932                           pclath	equ	0xFFA
  5933                           pcl	equ	0xFF9
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           indf0	equ	0xFEF
  5941                           postinc0	equ	0xFEE
  5942                           postdec0	equ	0xFED
  5943                           preinc0	equ	0xFEC
  5944                           plusw0	equ	0xFEB
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           indf1	equ	0xFE7
  5949                           postinc1	equ	0xFE6
  5950                           postdec1	equ	0xFE5
  5951                           preinc1	equ	0xFE4
  5952                           plusw1	equ	0xFE3
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           bsr	equ	0xFE0
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           preinc2	equ	0xFDC
  5960                           plusw2	equ	0xFDB
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      76
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[3]), STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[5]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[3]), STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[5]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 

    Existe_en_Arreglo@Arreglo	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    Valores	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__LeerHT11	PTR unsigned char  size(2) Largest target is 0

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[3]), STR_5(CODE[6]), STR_4(CODE[7]), STR_2(CODE[3]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Subrutina_Main
    _Subrutina_Main->_EnviarMedicion
    _Subrutina_Main->_Imprimir
    ___lbtoft->___ftpack
    _Imprimir->___ftsub
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___awdiv
    ___lbdiv->___lbmod
    _EscribeLCD_n16->___lwdiv
    ___lwdiv->___lwmod
    _EscribeLCD_c->_EnviaDato
    _ComandoLCD->_EnviaDato
    _EnviarMedicion->___ftsub
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___lbtoft
    ___awtoft->___ftpack
    ___awdiv->___awmod
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _Existe_en_Arreglo->_strlen

Critical Paths under _Recepcion_TMR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Recepcion_TMR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Recepcion_TMR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Recepcion_TMR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Recepcion_TMR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Recepcion_TMR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Recepcion_TMR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Recepcion_TMR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Recepcion_TMR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   58967
                                             64 COMRAM     2     2      0
                       _ConfiguraLCD
                        _ConmutarLED
                         _Conversion
                      _EscribeLCD_n8
                  _Existe_en_Arreglo
                      _GuardarEEPROM
                      _InicializaLCD
                         _LeerEEPROM
                           _LeerHT11
                     _MensajeLCD_Var
                     _Subrutina_Main
 ---------------------------------------------------------------------------------
 (1) _Subrutina_Main                                       7     7      0   54788
                                             57 COMRAM     7     7      0
                     _EnviarMedicion
                           _Imprimir
                            ___ftadd
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Imprimir                                            12     7      5   25657
                                             45 COMRAM    12     7      5
                           _BorraLCD
                         _ComandoLCD
                       _EscribeLCD_c
                     _EscribeLCD_n16
                      _EscribeLCD_n8
                     _MensajeLCD_Var
                            ___awdiv
                            ___awmod
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (3) _MensajeLCD_Var                                       7     6      1     890
                                              5 COMRAM     7     6      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_n8                                        5     4      1    1939
                                             14 COMRAM     5     4      1
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___awdiv (ARG)
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_n16                                       9     6      3    4927
                                             12 COMRAM     9     6      3
                       _EscribeLCD_c
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    2287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1682
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _ComandoLCD                                           1     1      0     286
                                              4 COMRAM     1     1      0
                           _BorraLCD
                      _CursorAInicio
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _CursorAInicio                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnviarMedicion                                      12     7      5   16977
                                             45 COMRAM    12     7      5
                         _Transmitir
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     556
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5371
                                             39 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4874
                                             27 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4210
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3087
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1212
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerHT11                                             7     5      2     232
                                              4 COMRAM     6     4      2
                           _LeerByte
 ---------------------------------------------------------------------------------
 (2) _LeerByte                                             3     3      0      75
                                              1 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (3) _LeerBit                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerEEPROM                                           2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (5) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (5) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GuardarEEPROM                                        3     0      3     196
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Existe_en_Arreglo                                    6     5      1     454
                                              3 COMRAM     6     5      1
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2     242
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConmutarLED                                          1     1      0     105
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Recepcion_TMR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
   _ConmutarLED
   _Conversion
   _EscribeLCD_n8
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
     ___awdiv (ARG)
       ___awmod (ARG)
     ___lbdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _Existe_en_Arreglo
     _strlen
   _GuardarEEPROM
   _InicializaLCD
     _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerEEPROM
   _LeerHT11
     _LeerByte
       _LeerBit
   _MensajeLCD_Var
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _strlen
   _Subrutina_Main
     _EnviarMedicion
       _Transmitir
       ___awdiv
       ___awmod
       ___awtoft
         ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftsub
         ___awtoft (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
       ___fttol
         ___ftmul (ARG)
       ___lbtoft (ARG)
     _Imprimir
       _BorraLCD
       _ComandoLCD
         _BorraLCD
         _CursorAInicio
         _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _EscribeLCD_c
       _EscribeLCD_n16
         _EscribeLCD_c
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _EscribeLCD_n8
       _MensajeLCD_Var
       ___awdiv
       ___awmod
       ___awtoft
       ___ftge
       ___ftmul
       ___ftsub
       ___fttol
       ___lbtoft (ARG)
     ___ftadd
     ___ftmul
     ___lbtoft

 _Recepcion_TMR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      38        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      4C       1       80.9%
BITBIGSFRlll        20      0       0      36        0.0%
BITBIGSFRhhhlh      1A      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhlhhl      B      0       0      24        0.0%
BITBIGSFRhhlhlh      8      0       0      26        0.0%
BITBIGSFRhhlhhl      7      0       0      25        0.0%
BITBIGSFRlhl         6      0       0      34        0.0%
BITBIGSFRhhlll       6      0       0      30        0.0%
BITBIGSFRhhllhl      4      0       0      28        0.0%
BITBIGSFRhll         4      0       0      32        0.0%
BITBIGSFRhhlhhh      2      0       0      23        0.0%
BITBIGSFRhhllhl      2      0       0      29        0.0%
BITBIGSFRhhllhh      1      0       0      27        0.0%
BITBIGSFRllh         1      0       0      35        0.0%
BITBIGSFRlhh         1      0       0      33        0.0%
BITBIGSFRhlh         1      0       0      31        0.0%
BITBIGSFRhhhll       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      37        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 01 16:07:26 2023

         Transmitir@BufferT 0001                          _GO 007E11                          _RD 007D30  
                        _WR 007D31                ___awdiv@sign 000C                  EnviaDato@a 0004  
             ??_ConmutarLED 0001                ___ftadd@exp1 0027                ___ftadd@exp2 0026  
              ___ftadd@sign 0025               _InicializaLCD 18D2                         l251 1842  
                       l340 1F7A                         l272 1E48                         l256 185E  
                       l267 1E24                         l295 12D0                         l296 12D2  
                       l377 1492                         l388 1EE6                         l724 1148  
                       l873 1BE0                         l883 1D00                         _GIE 007F97  
                       _RA3 007C03                         _RC0 007C10                         u490 1E4C  
                       u930 1F48                         _Che 0048                         _Hum 0049  
              ___awmod@sign 0006                         wreg 000FE8      __end_of_EnviarMedicion 1012  
                      l2121 1B0C                        l2123 1B16                        l2117 1ADA  
                      l2213 1062                        l2119 1AEC                        l2127 1B20  
                      l2151 179C                        l2311 1E72                        l2303 1E5A  
                      l2161 17F8                        l2153 17A6                        l2241 10DC  
                      l2139 1CBA                        l2163 1802                        l2155 17C4  
                      l2243 10E6                        l2219 108A                        l2323 1BAE  
                      l2411 0B5A                        l2261 1164                        l2253 111A  
                      l2245 10F0                        l2325 1BB6                        l2413 0BB0  
                      l2421 0DE6                        l2405 1696                        l2503 1982  
                      l2159 17DA                        l2271 1194                        l2255 1124  
                      l2335 1BD6                        l2351 1CF6                        l2343 1CD6  
                      l2415 0C3E                        l1721 1F1C                        l2361 1DFE  
                      l2345 1CDE                        l2417 0D04                        l2409 0B38  
                      l2281 1D5C                        l2433 1C22                        l2601 1A62  
                      l1491 1E38                        l2435 1FA6                        l2515 19A8  
                      l2531 19DA                        l2451 1522                        l2611 16D8  
                      l2427 1C04                        l2197 1E80                        l2517 19B0  
                      l2509 1992                        l2445 14FA                        l2365 1E0E  
                      l2293 1D78                        l2285 1D62                        l2373 15CC  
                      l2701 1402                        l2199 1E82                        l2535 19E8  
                      l2527 19D0                        l2551 1A86                        l2465 1554  
                      l2641 1750                        l2633 173C                        l2297 1D80  
                      l2721 14BE                        l2713 1488                        l2705 142E  
                      l2571 1ACC                        l2563 1AB4                        l2555 1A94  
                      l2547 1A7A                        l2475 157C                        l2491 1D20  
                      l2379 15EC                        l2723 14C8                        l2707 143E  
                      l1941 1B7A                        l1933 1B62                        l1925 1B4A  
                      l2557 1A9C                        l2469 1564                        l2629 172C  
                      l2389 1632                        l2735 18E4                        l2567 1ABE  
                      l2583 1D98                        l2479 158C                        l2647 176C  
                      l2639 1744                        l2591 1A14                        l1945 1B86  
                      l1937 1B6E                        l1929 1B56                        l2745 1902  
                      l2673 0F10                        l2843 1C66                        l2755 1920  
                      l2683 0FC0                        l2675 0F78                        l2595 1A36  
                      l1949 1B92                        l2845 1C6A                        l2685 0FF8  
                      l2669 0EC6                        l2941 125C                        l2839 1C48  
                      l2775 1958                        l2863 09D8                        l2857 08E2  
                      l2971 1302                        l2963 12E6                        l2947 127C  
                      l2939 1252                        l2869 0ACE                        l2967 12F4  
                      l2975 1312                        _CFGS 007D36                        _EEIF 007D0C  
                      STR_1 0801                        STR_2 081D                        STR_3 0815  
                      STR_4 0808                        STR_5 080F                        STR_6 081A  
                      u2000 16F6                        u2005 16EE                        u1320 178E  
                      u2040 1756                        u1401 1022                        u1411 1036  
                      u1500 10BA                        u2060 0EBC                        _LATA 000F89  
                      u2070 0ED6                        u1360 180C                        u1440 1054  
                      _LATD 000F8C                        _LATE 000F8D                        u2260 1C7E  
                      u1540 10F8                        u1620 1D66                        u1470 107C  
                      u2407 126E                        u2417 133A                        u1570 112C  
                      u2370 1328                        u2507 1B0E                        u2427 1838  
                      u1660 1BBA                        u2517 1B18                        u2437 1848  
                      u1910 1AA0                        u2527 1F9A                        u2447 1854  
                      u1751 14E2                        _IPEN 007E87                        u2457 1E2A  
                      u2385 132A                        u1850 19B4                        u1690 1CE2  
                      u2467 1E3A                        u1771 150A                        u2477 1AE0  
                      u2397 11C4                        u2487 1AF2                        u2497 1AFC  
                      _PEIE 007F96                        u1981 16BC                        u1990 16C6  
                      _RCIE 007CED                        _RCIF 007CF5                        _TMR0 000FD6  
                      _TRMT 007D61                        _WREN 007D32              ??_EscribeLCD_c 0005  
                      _Temp 004A             Imprimir@Humedad 0031     EnviarMedicion@TempUnity 0032  
                      _main 11BA                ___ftpack@arg 0001                ___ftpack@exp 0004  
                      fsr2h 000FDA                        indf2 000FDF                        fsr2l 000FD9  
                      btemp 004D              _Subrutina_Main 0822                        start 000E  
             _GuardarEEPROM 1ECA                ___ftmul@cntr 001A             __end_of_LeerBit 1E50  
              ___param_bank 000000                ___ftmul@sign 001B             Imprimir@decimal 0033  
      MensajeLCD_Var@actual 000A                ___fttol@exp1 002A                ___fttol@lval 0026  
            ?_InicializaLCD 0001                       ?_main 0001             __end_of___awdiv 19F2  
           __end_of___lbdiv 1D84                       _ADRES 000FC3                       _EEADR 000FA9  
           __end_of___ftadd 11BA             __end_of___awmod 1AD6                  _ComandoLCD 1DEE  
             EscribeLCD_c@a 0005             __end_of___lbmod 1E7A                       _EEPGD 007D37  
           __end_of___ftmul 15C6                       _T0CON 000FD5             ___awdiv@divisor 0009  
           __end_of___ftsub 1D4A             __end_of___fttol 177E                       _LATA4 007C4C  
                     _LATA5 007C4D                       _LATC2 007C5A                       _LATD0 007C60  
                     _LATD1 007C61                  _LeerEEPROM 1F88             __end_of___lwdiv 1BEA  
           __end_of___lwmod 1D0A                       i2l329 1EAE             ___awdiv@counter 000B  
                     _RCREG 000FAE                       _RCSTA 000FAB                       _SPBRG 000FAF  
                     _PORTA 000F80                       _TRISA 000F92                       _TRISD 000F95  
                     _TRISE 000F96                       _TXREG 000FAD                       _TXSTA 000FAC  
           ??_EscribeLCD_n8 0010             ?_EnviarMedicion 002E        Subrutina_Main@Unidad 003A  
             ___awtoft@sign 000C         __end_of_ConmutarLED 1B98               ___ftpack@sign 0005  
      EscribeLCD_n16@decena 0014                       tablat 000FF5                  _Conversion 1F78  
               _HabilitaLCD 1F96        EscribeLCD_n16@millar 0010      __end_of_Subrutina_Main 0B34  
                     ttemp5 004E                       ttemp6 0051                       ttemp7 0055  
                     status 000FD8                       wtemp8 004E        EscribeLCD_n16@unidad 0015  
           ___lbdiv@divisor 0005             ___lbdiv@counter 0007              ?_GuardarEEPROM 0001  
          __end_of_BorraLCD 1F78            __end_of_LeerHT11 18D2             __initialization 1DBC  
          __end_of_LeerByte 1F36                __end_of_main 134A               _CursorAInicio 1FB2  
         Imprimir@Decimales 0038            __end_of_Imprimir 14D2                      ??_main 0041  
      __end_of_ConfiguraLCD 1F4E               ___fttol@sign1 0025               __activetblptr 000002  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    _EEDATA 000FA8                      _EECON2 000FA7              EscribeLCD_n8@a 0013  
            EscribeLCD_n8@b 000F            ___awdiv@dividend 0007            __end_of___awtoft 1DBC  
          __end_of___ftpack 182C            __end_of___lbtoft 1F14                      _OSCCON 000FD3  
                    _TMR0IE 007F95                      _TMR0IF 007F92                      _TMR0ON 007EAF  
           ?_Subrutina_Main 0001                      _TRISC0 007CA0                      _TRISC2 007CA2  
                 ??_LeerBit 0001                  _RetardoLCD 1AD6           _Existe_en_Arreglo 1C38  
          ??_EscribeLCD_n16 0010        EscribeLCD_n8@centena 0010          ?_Existe_en_Arreglo 0004  
            ?_CursorAInicio 0001                      ___ftge 19F2            GuardarEEPROM@dir 0001  
                 ??___awdiv 000B                   ??___lbdiv 0006                   ??___ftadd 0022  
                 ??___awmod 0005                   ??___lbmod 0002                   ??___ftmul 0013  
                 ??___ftsub 002E                   ??___fttol 0020                   ??___lwdiv 000A  
              _DatoGuardado 0047                   ??___lwmod 0005             ??_InicializaLCD 0005  
                    clear_0 1DDA            ___awdiv@quotient 000D             ___awmod@divisor 0003  
                    isa$std 000001             ___awmod@counter 0005         ??_Existe_en_Arreglo 0005  
      __end_of_EscribeLCD_c 1F64                 ?_ComandoLCD 0001                      _strlen 1E7A  
               _ConmutarLED 1B3C       EscribeLCD_n16@centena 0012                 ?_LeerEEPROM 0001  
     ___ftmul@f3_as_product 0017           Imprimir@TempUnity 0032                __pdataCOMRAM 004B  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  _Transmitir 1FA4            ___lbdiv@dividend 0006  
               ?_Conversion 0001             ___lbmod@divisor 0001                  __accesstop 0060  
   __end_of__initialization 1DE0             ___lbmod@counter 0003   __end_of_Existe_en_Arreglo 1C82  
                ___ftadd@f1 001C                  ___ftadd@f2 001F             ??_GuardarEEPROM 0004  
                ___ftge@ff1 0001                  ___ftge@ff2 0004               ___rparam_used 000001  
                ___awtoft@c 0009                  ___lbtoft@c 000C                  ___ftmul@f1 000D  
                ___ftmul@f2 0010                  ___ftsub@f1 0028                  ___ftsub@f2 002B  
                ___fttol@f1 001C              __pcstackCOMRAM 0001               _Recepcion_TMR 0008  
         __end_of_EnviaDato 1CC8            ___lbdiv@quotient 0008                   ?_BorraLCD 0001  
                 ?_LeerHT11 0005              _MensajeLCD_Var 1BEA                   ?_LeerByte 0001  
           MensajeLCD_Var@a 0006             MensajeLCD_Var@i 000B      MensajeLCD_Var@longitud 0008  
               ?_RetardoLCD 0001                   ?_Imprimir 002E                 RetardoLCD@a 0002  
           ??_CursorAInicio 0001              ?_Recepcion_TMR 0001                     ?___ftge 0001  
          ConmutarLED@Valor 0001                     _BAUDCON 000FB8             EscribeLCD_n16@a 000D  
           EscribeLCD_n16@b 000F                   ?___awtoft 0009                   ?___ftpack 0001  
                 ?___lbtoft 0009            ??_EnviarMedicion 0033                     ?_strlen 0001  
    __end_of_MensajeLCD_Var 1C38                  ??_BorraLCD 0005                  ??_LeerHT11 0007  
               ?_Transmitir 0001                  ??_LeerByte 0002        EnviarMedicion@ValorF 0038  
              ?_HabilitaLCD 0001                     _LeerBit 1E20                _ConfiguraLCD 1F36  
                ??_Imprimir 0033                     __Hparam 0000                     __Lparam 0000  
 Existe_en_Arreglo@Elemento 0006                     _Valores 0045                     ___awdiv 196E  
                   ___lbdiv 1D4A                     ___ftadd 1012                     ___awmod 1A66  
                   ___lbmod 1E50                     ___ftmul 14D2                     ___ftsub 1D0A  
                   ___fttol 16AC                     ___lwdiv 1B98                     ___lwmod 1CC8  
              __psmallconst 0800           GuardarEEPROM@data 0003                     __pcinit 1DBC  
                ??___awtoft 000C                  ??___ftpack 0006                  ??___lbtoft 000C  
                   __ramtop 0800                     __ptext0 11BA                     __ptext1 0822  
                   __ptext2 1EF0                     __ptext3 134A                     __ptext4 19F2  
                   __ptext5 1BEA                     __ptext6 15C6                     __ptext7 1E50  
                   __ptext8 1D4A                     __ptext9 0B34          Existe_en_Arreglo@i 0008  
          ___awmod@dividend 0001             ?_MensajeLCD_Var 0006            ??_Subrutina_Main 003A  
     __end_of_EscribeLCD_n8 16AC              __pintcode_body 1EA2        end_of_initialization 1DE0  
             __Lmediumconst 0000                     int_func 1EA2                _EscribeLCD_c 1F4E  
           ??_Recepcion_TMR 0001            LeerHT11@Retornar 0009                     postinc0 000FEE  
                   strlen@s 0001                ??_ComandoLCD 0005                ?_ConmutarLED 0001  
              ??_LeerEEPROM 0003            ___lbmod@dividend 0002                   LeerByte@i 0004  
              ??_Conversion 0003                 ___lbmod@rem 0004              Imprimir@ValorF 0036  
        __end_of_ComandoLCD 1E20          __end_of_LeerEEPROM 1F96                 ___ftmul@exp 0016  
            __end_of___ftge 1A66               __pidataCOMRAM 1FB0       __end_of_InicializaLCD 196E  
        __end_of_Conversion 1F88                   _EnviaDato 1C82              __end_of_strlen 1EA2  
       start_initialization 1DBC                ??_RetardoLCD 0001       __end_of_GuardarEEPROM 1EF0  
       EscribeLCD_n8@decena 0011                    ??___ftge 0007         EscribeLCD_n8@unidad 0012  
                  ??_strlen 0003                  ?_EnviaDato 0001                 __pbssCOMRAM 0043  
        __end_of_RetardoLCD 1B3C                ??_Transmitir 0001                    ?_LeerBit 0001  
          ___lwdiv@dividend 0006       __end_of_CursorAInicio 1FB4                   __pintcode 0008  
                  ?___awdiv 0007                    ?___lbdiv 0005                    ?___ftadd 001C  
                  ?___awmod 0001                    ?___lbmod 0001                    ?___ftmul 000D  
                  ?___ftsub 0028                    ?___fttol 001C                    ?___lwdiv 0006  
                  ?___lwmod 0001          __end_of_Transmitir 1FB0            ??_MensajeLCD_Var 0007  
             LeerHT11@contr 0008                 __smallconst 0800               LeerEEPROM@dir 0001  
          ___lwdiv@quotient 000A                    i2u127_40 1EC4                    i2u128_45 1EC6  
               ??_EnviaDato 0003       EnviarMedicion@Humedad 0031               _Potenciometro 0043  
                  _BorraLCD 1F64                    _LeerHT11 182C                    _LeerByte 1F14  
     EnviarMedicion@decimal 0033                    _Imprimir 134A                    __Hrparam 0000  
                  __Lrparam 0000       __end_of_Recepcion_TMR 1ECA  Existe_en_Arreglo@Contenido 0007  
                  _UnitTemp 004B                    ___awtoft 1D84                    ___ftpack 177E  
                  ___lbtoft 1EF0              _EscribeLCD_n16 0B34   EnviarMedicion@Temperatura 002E  
             ConfiguraLCD@a 0001             ___lwdiv@divisor 0008             ___lwdiv@counter 000C  
                  __ptext10 1CC8                    __ptext11 1B98                    __ptext20 1D84  
                  __ptext12 1F4E                    __ptext21 177E                    __ptext13 1DEE  
                  __ptext30 1F64                    __ptext22 1A66                    __ptext14 1FB2  
                  __ptext31 1C82                    __ptext23 196E                    __ptext15 0E08  
                  __ptext32 1AD6                    __ptext24 1FA4                    __ptext16 16AC  
                  __ptext33 1F96                    __ptext25 182C                    __ptext17 1D0A  
                  __ptext34 1ECA                    __ptext26 1F14                    __ptext18 1012  
                  __ptext35 1C38                    __ptext27 1E20                    __ptext19 14D2  
                  __ptext36 1E7A                    __ptext28 1F88                    __ptext37 1F78  
                  __ptext29 18D2                    __ptext38 1B3C                    __ptext39 1F36  
                  _interfaz 004C                    isa$xinst 000000                    int$flags 004D  
    __end_of_EscribeLCD_n16 0E08    Existe_en_Arreglo@Arreglo 0004               _EscribeLCD_n8 15C6  
       Imprimir@Temperatura 002E                    intlevel2 0000               ??_HabilitaLCD 0001  
               ComandoLCD@a 0005            ___lwmod@dividend 0001               ?_ConfiguraLCD 0001  
        _Subrutina_Main$947 003B          _Subrutina_Main$948 003E             ?_EscribeLCD_n16 000D  
           ___lwmod@divisor 0003                    strlen@cp 0003             ___lwmod@counter 0005  
            ?_EscribeLCD_n8 000F     EnviarMedicion@Decimales 0036              _EnviarMedicion 0E08  
            ??_ConfiguraLCD 0001               ?_EscribeLCD_c 0001                  LeerBit@res 0001  
       __end_of_HabilitaLCD 1FA4                 LeerByte@res 0003  
